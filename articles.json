["<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Improving performance with SCHED_EXT and IOCost</title>\n\t\t\t<link>https://lwn.net/Articles/966618/</link>\n\t\t\t<guid>https://lwn.net/Articles/966618/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nAt &lt;a href=\"https://www.socallinuxexpo.org/scale/21x\"&gt;SCALE&lt;/a&gt;\nthis year Dan Schatzberg and Tejun Heo,\nboth from Meta, gave back-to-back talks about some\nof the performance-engineering work that they do there. Schatzberg presented on\nthe &lt;a href=\"https://lwn.net/Articles/922405\"&gt;extensible BPF scheduler&lt;/a&gt;, which has been\ndiscussed extensively on the kernel mailing list.\nHeo presented on IOCost — a control group (cgroup) I/O controller\noptimized for solid-state disks (SSDs) — and the benchmark suite that is necessary to\nmake it work well on different models of disk.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 11 Apr 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>How the XZ backdoor works</title>\n\t\t\t<link>https://lwn.net/Articles/967192/</link>\n\t\t\t<guid>https://lwn.net/Articles/967192/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nVersions 5.6.0 and 5.6.1 of the\n&lt;a href=\"https://git.tukaani.org/?p=xz.git;a=summary\"&gt;XZ&lt;/a&gt;\ncompression utility and library\nwere shipped with &lt;a href=\"https://lwn.net/Articles/967180\"&gt;a backdoor&lt;/a&gt; that targeted\n&lt;a href=\"https://www.openssh.com/\"&gt;OpenSSH&lt;/a&gt;.\nAndres Freund\n&lt;a href=\"https://lwn.net/ml/oss-security/20240329155126.kjjfduxw2yrlxgzm@awork3.anarazel.de/\"&gt;\ndiscovered&lt;/a&gt; the backdoor by\nnoticing that &lt;a href=\"https://lwn.net/Articles/967194/\"&gt;failed SSH logins were taking a lot of\nCPU time&lt;/a&gt; while doing some\nmicro-benchmarking, and tracking down the backdoor from there. It was introduced\nby XZ co-maintainer \"Jia Tan\" — a probable alias for person or persons unknown.\nThe backdoor is a sophisticated attack with multiple parts, from the build\nsystem, to link time, to run time.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 11 Apr 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>A memory model for Rust code in the kernel</title>\n\t\t\t<link>https://lwn.net/Articles/967049/</link>\n\t\t\t<guid>https://lwn.net/Articles/967049/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The Rust programming language differs from C in many ways; those\ndifferences tend to be what users admire in the language.  But those\ndifferences can also lead to an impedance mismatch when Rust code is\nintegrated into a C-dominated system, and it can be even worse in the\nkernel, which is not a typical C program.  Memory models are a case in\npoint.  A programming language's view of memory is sufficiently fundamental\nand arcane that many developers never have to learn much about it.  It is\nhard to maintain that sort of blissful ignorance while working in the\nkernel, though, so a recent discussion of how to choose a memory model for\nkernel code in Rust is of interest.\n</description>\n\t\t\t<pubDate>Thu, 11 Apr 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for April 4, 2024</title>\n\t\t\t<link>https://lwn.net/Articles/966925/</link>\n\t\t\t<guid>https://lwn.net/Articles/966925/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The LWN.net Weekly Edition for April 4, 2024 is available.\n</description>\n\t\t\t<pubDate>Thu, 11 Apr 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>A focus on FOSS funding</title>\n\t\t\t<link>https://lwn.net/Articles/967001/</link>\n\t\t\t<guid>https://lwn.net/Articles/967001/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;Among the numerous approaches to funding the development and advancement of\nopen-source software, corporate sponsorship in the form of donations to umbrella\norganizations is perhaps the most visible. At &lt;a href=\"https://www.socallinuxexpo.org/scale/21x/\"&gt;SCALE21x&lt;/a&gt; in Pasadena, California, Duane O'Brien\n&lt;a\nhref=\"https://www.socallinuxexpo.org/scale/21x/presentations/10-years-open-source-funding-trends-deep-dive\"&gt;presented&lt;/a&gt;\na slice of his recent research into the landscape of such sponsorship arrangements,\nwith an overview of the identifiable trends of the past ten years and some initial\ninsights he hopes are valuable for sponsors and community members alike.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 18 Apr 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>A look at the 2024 Debian Project Leader election</title>\n\t\t\t<link>https://lwn.net/Articles/967981/</link>\n\t\t\t<guid>https://lwn.net/Articles/967981/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;The nominations have closed and campaigning is underway to see who\nwill be the next &lt;a href=\"https://www.debian.org/devel/leader\"&gt;Debian\nProject Leader&lt;/a&gt; (DPL). This year, &lt;a\nhref=\"https://lwn.net/ml/debian-vote/Zfi3P8BgRgcNdrfW%40roeckx.be/\"&gt;two\ncandidates&lt;/a&gt; are campaigning for the position Jonathan Carter has\nheld for four eventful years: Sruthi Chandran and\nAndreas Tille. Topics that have emerged so far include how the\nprospective DPLs would spend project money, their opinions on handling\ncontroversial topics, and project diversity.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 18 Apr 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for April 11, 2024</title>\n\t\t\t<link>https://lwn.net/Articles/968375/</link>\n\t\t\t<guid>https://lwn.net/Articles/968375/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>The LWN.net Weekly Edition for April 11, 2024 is available.\n</description>\n\t\t\t<pubDate>Thu, 18 Apr 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Continued attacks on HTTP/2</title>\n\t\t\t<link>https://lwn.net/Articles/968600/</link>\n\t\t\t<guid>https://lwn.net/Articles/968600/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nOn April 3 security researcher Bartek Nowotarski\n&lt;a href=\"https://nowotarski.info/http2-continuation-flood-technical-details/\"&gt;\npublished&lt;/a&gt; the details of a new denial-of-service (DoS)\nattack, called a \"continuation flood\", against many\n&lt;a href=\"https://en.wikipedia.org/wiki/HTTP/2\"&gt;HTTP/2&lt;/a&gt;-capable web\nservers. While the attack is not terribly complex, it affects many independent\nimplementations of the HTTP/2 protocol, even though multiple\nsimilar vulnerabilities over the years have given implementers plenty of warning.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 18 Apr 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Book review: Practical Julia</title>\n\t\t\t<link>https://lwn.net/Articles/966684/</link>\n\t\t\t<guid>https://lwn.net/Articles/966684/</guid>\n\t\t\t<dc:creator>jake</dc:creator>\n\t\t\t<description>A recent book by &lt;a\nhref=\"https://lwn.net/Archives/GuestIndex/#Phillips_Lee\"&gt;LWN guest \nauthor Lee Phillips&lt;/a&gt; provides a nice introduction to the &lt;a\nhref=\"https://julialang.org/\"&gt;Julia&lt;/a&gt; programming language.\n&lt;a href=\"https://nostarch.com/practical-julia\"&gt;&lt;i&gt;Practical Julia&lt;/i&gt;&lt;/a&gt;\ndoes more than that, however.  As its subtitle (\"A Hands-On Introduction\nfor Scientific Minds\") implies, the book focuses on bringing Julia to\nscientists, rather than programmers, which gives it something of a\ndifferent feel from most other books of this sort.\n</description>\n\t\t\t<pubDate>Thu, 18 Apr 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>The first Linaro Forum for Arm Linux kernel topics</title>\n\t\t\t<link>https://lwn.net/Articles/969031/</link>\n\t\t\t<guid>https://lwn.net/Articles/969031/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>On February 20, &lt;a href=\"https://linaro.org/\"&gt;Linaro&lt;/a&gt; held the initial\nget-together for what is intended to be a regular Linux Kernel Forum for\nthe Arm-focused kernel community. This gathering aims to convene\napproximately a few weeks prior to the merge window opening and prior to\nthe release of the current kernel version under development.  Topics\ncovered in the first gathering include preparing 64-bit Arm kernels for\nlow-end embedded systems, memory errors and &lt;a\nhref=\"https://en.wikipedia.org/wiki/Compute_Express_Link\"&gt;Compute Express\nLink (CXL)&lt;/a&gt;, devlink objectives, and scheduler integration.\n</description>\n\t\t\t<pubDate>Thu, 18 Apr 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Completing the EEVDF scheduler</title>\n\t\t\t<link>https://lwn.net/Articles/969062/</link>\n\t\t\t<guid>https://lwn.net/Articles/969062/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The &lt;a href=\"https://lwn.net/Articles/925371/\"&gt;Earliest Virtual Deadline First (EEVDF)\nscheduler&lt;/a&gt; was merged as an option for the 6.6 kernel.  It represents a\nmajor change to how CPU scheduling is done on Linux systems, but the EEVDF\nfront has been relatively quiet since then.  Now, though, scheduler\ndeveloper Peter Zijlstra has returned from a long absence to post &lt;a\nhref=\"https://lwn.net/ml/linux-kernel/20240405102754.435410987@infradead.org/\"&gt;a patch\nseries&lt;/a&gt; intended to finish the EEVDF work.  Beyond some fixes, this work\nincludes a significant behavioral change and a new feature intended to help\nlatency-sensitive tasks.\n</description>\n\t\t\t<pubDate>Thu, 25 Apr 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for April 18, 2024</title>\n\t\t\t<link>https://lwn.net/Articles/969442/</link>\n\t\t\t<guid>https://lwn.net/Articles/969442/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>The LWN.net Weekly Edition for April 18, 2024 is available.\n</description>\n\t\t\t<pubDate>Thu, 25 Apr 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Managing to-do lists on the command line with Taskwarrior</title>\n\t\t\t<link>https://lwn.net/Articles/969904/</link>\n\t\t\t<guid>https://lwn.net/Articles/969904/</guid>\n\t\t\t<dc:creator>jake</dc:creator>\n\t\t\t<description>Managing to-do lists is something of a universal necessity. While some\npeople handle them mentally or on paper, others resort to a web-based tool or\na mobile \napplication. For those preferring the command line, the MIT-licensed &lt;a\nhref=\"https://taskwarrior.org\"&gt;Taskwarrior&lt;/a&gt; offers a flexible solution\nwith a healthy community and lots of extensions.\n</description>\n\t\t\t<pubDate>Thu, 25 Apr 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Fedora 40 firms up for release</title>\n\t\t\t<link>https://lwn.net/Articles/969145/</link>\n\t\t\t<guid>https://lwn.net/Articles/969145/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;Fedora&amp;nbsp;40&amp;nbsp;Beta was &lt;a\nhref=\"https://fedoramagazine.org/announcing-fedora-linux-40-beta/\"&gt;released&lt;/a&gt;\non March&amp;nbsp;26, and the final release is nearing completion. So far,\nthe release is coming together nicely with major\nupdates for GNOME, KDE&amp;nbsp;Plasma, and the usual cavalcade of\nsmaller updates and enhancements. As part of the release, the project also scuttled &lt;a href=\"https://fedoraproject.org/wiki/Changes/Drop_Delta_RPMs\"&gt;Delta\nRPMs&lt;/a&gt; and &lt;a href=\"https://fedoraproject.org/wiki/Changes/RemoveOpensslCompat\"&gt;OpenSSL 1.1&lt;/a&gt;.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 25 Apr 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Identifying dependencies used via dlopen()</title>\n\t\t\t<link>https://lwn.net/Articles/969908/</link>\n\t\t\t<guid>https://lwn.net/Articles/969908/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\n&lt;a href=\"https://lwn.net/Articles/967180\"&gt;\nThe recent XZ backdoor&lt;/a&gt; has sparked a lot of discussion about how the open-source\ncommunity links and packages software. One possible\nsecurity improvement being discussed\nis changing how\nprojects like systemd link to dynamic libraries that are only used for\noptional functionality: using\n&lt;a href=\"https://man7.org/linux/man-pages/man3/dlopen.3.html\"&gt;\n&lt;tt&gt;dlopen()&lt;/tt&gt;&lt;/a&gt; to load those libraries only\nwhen required. This could\nshrink the attack surface exposed by dependencies, but the approach is not\nwithout downsides — most prominently, it makes discovering which dynamic\nlibraries a program depends on harder.\nOn April 11, Lennart Poettering proposed one way to eliminate that problem\n&lt;a href=\"https://github.com/systemd/systemd/pull/32234\"&gt;\nin a systemd RFC on GitHub&lt;/a&gt;.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 25 Apr 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Warning about WARN_ON()</title>\n\t\t\t<link>https://lwn.net/Articles/969923/</link>\n\t\t\t<guid>https://lwn.net/Articles/969923/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>Kernel developers, like conscientious developers for many projects, will\noften include checks in the code for conditions that are never expected to\noccur, but which would indicate a serious problem should that expectation\nturn out to be incorrect.  For years, developers have been encouraged (to\nput it politely) to avoid using assertions that crash the machine for such\nconditions unless there is truly no alternative.  Increasingly, though, use\nof the kernel's &lt;tt&gt;WARN_ON()&lt;/tt&gt; family of macros, which developers were\ntold to use instead, is also being discouraged.\n</description>\n\t\t\t<pubDate>Thu, 02 May 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Linus and Dirk chat about AI, XZ, hardware, and more</title>\n\t\t\t<link>https://lwn.net/Articles/970293/</link>\n\t\t\t<guid>https://lwn.net/Articles/970293/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;One of the mainstays of the the Linux Foundation's Open Source Summit is the \"fireside chat\"\n(sans fire) between Linus Torvalds and Dirk Hohndel to discuss open source and\nLinux kernel topics of the day. On April 17, at &lt;a href=\"https://events.linuxfoundation.org/open-source-summit-north-america/\"&gt;Open Source Summit\nNorth America&lt;/a&gt; (OSSNA) in Seattle, Washington, they held with tradition\nand discussed a range of topics including proper whitespace parsing,\nsecurity, and the current AI craze.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 02 May 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Rust for embedded Linux kernels</title>\n\t\t\t<link>https://lwn.net/Articles/970216/</link>\n\t\t\t<guid>https://lwn.net/Articles/970216/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The Rust programming language, it is hoped, will bring a new level of\nsafety to the Linux kernel.  At the moment, though, there are still a\nnumber of impediments to getting useful Rust code into the kernel.  In the\nEmbedded Open Source Summit track of the &lt;a\nhref=\"https://events.linuxfoundation.org/open-source-summit-north-america/\"&gt;Open\nSource Summit North America&lt;/a&gt;, Fabien Parent provided an overview of his\nwork aimed at improving the infrastructure needed to write the device\ndrivers needed by embedded systems in Rust; there is still some work to be\ndone.\n</description>\n\t\t\t<pubDate>Thu, 02 May 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>A change in direction for security-module stacking?</title>\n\t\t\t<link>https://lwn.net/Articles/970070/</link>\n\t\t\t<guid>https://lwn.net/Articles/970070/</guid>\n\t\t\t<dc:creator>jake</dc:creator>\n\t\t\t<description>The long-running effort to complete the work on stacking (or composing) the\nLinux security modules (LSMs) recently encountered a barrier—in the form of\na \"suggestion\" to discontinue it from Linus Torvalds.  His complaint\nrevolved around the indirect function calls that are used to implement\nLSMs, but he also did not think much of the effort to switch away from\nthose calls.  While it does not appear that a major course-change is in store\nfor LSMs, it is clear that Torvalds is not happy with the direction of that\nsubsystem.\n</description>\n\t\t\t<pubDate>Thu, 02 May 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for April 25, 2024</title>\n\t\t\t<link>https://lwn.net/Articles/970328/</link>\n\t\t\t<guid>https://lwn.net/Articles/970328/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The LWN.net Weekly Edition for April 25, 2024 is available.\n</description>\n\t\t\t<pubDate>Thu, 02 May 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Existential types in Rust</title>\n\t\t\t<link>https://lwn.net/Articles/970186/</link>\n\t\t\t<guid>https://lwn.net/Articles/970186/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nFor several years, contributors to the Rust project have\nbeen working to improve support for asynchronous\ncode. The benefits of these efforts are not confined to asynchronous code,\nhowever. Members of the Rust community have been working toward adding explicit\n&lt;a href=\"https://en.wikipedia.org/wiki/Type_system#Existential_types\"&gt;\nexistential types&lt;/a&gt; to Rust since 2017. Existential types are not a common feature\nof programming languages (something\n&lt;a href=\"https://rust-lang.github.io/rfcs/2515-type_alias_impl_trait.html\"&gt;\nthe RFC&lt;/a&gt; acknowledges), so the motivation for their inclusion might be somewhat\nobscure.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 02 May 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>The state of realtime and embedded Linux</title>\n\t\t\t<link>https://lwn.net/Articles/970555/</link>\n\t\t\t<guid>https://lwn.net/Articles/970555/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>Linux, famously, appears in a wide range of systems.  While servers and\nlarge data centers get a lot of the attention, and this year will always be\nthe year of the Linux desktop, there is also a great deal of Linux to be\nfound in realtime and embedded applications.  Two talks held in the\nrealtime and embedded tracks of the 2024 &lt;a\nhref=\"https://events.linuxfoundation.org/open-source-summit-north-america/\"&gt;Open\nSource Summit North America&lt;/a&gt; provided listeners with an update on how\nLinux is doing in those areas.  Work on realtime Linux appears to be nearing\ncompletion, while the embedded community is still pushing forward at full\nspeed.\n</description>\n\t\t\t<pubDate>Thu, 09 May 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Python JIT stabilization</title>\n\t\t\t<link>https://lwn.net/Articles/970397/</link>\n\t\t\t<guid>https://lwn.net/Articles/970397/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nOn April 11, Brandt Bucher posted\n&lt;a href=\"https://peps.python.org/pep-0744\"&gt;PEP 744&lt;/a&gt; (\"JIT Compilation\"),\nwhich summarizes the current state of Python's new &lt;a href=\"https://lwn.net/Articles/958350/\"&gt;\ncopy-and-patch just-in-time (JIT) compiler&lt;/a&gt;. The JIT is currently\nexperimental, but the PEP proposes some criteria for the circumstances under which it\nshould become a non-experimental part of Python.\n&lt;a href=\"https://discuss.python.org/t/pep-744-jit-compilation/50756\"&gt;\nThe discussion&lt;/a&gt; of the PEP hasn't\nreached a conclusion, but\nseveral members of the community have already raised questions\nabout how the JIT would fit into future iterations of the Python language.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 09 May 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Support for the TSO memory model on Arm CPUs</title>\n\t\t\t<link>https://lwn.net/Articles/970907/</link>\n\t\t\t<guid>https://lwn.net/Articles/970907/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>At the CPU level, a memory model describes, among other things, the amount\nof freedom the processor has to reorder memory operations.  If low-level\ncode does not take the memory model into account, unpleasant surprises are\nlikely to follow.  Naturally, different CPUs offer different memory models,\ncomplicating the portability of certain types of concurrent software.  To\nmake life easier, some Arm CPUs offer the ability to emulate the x86 memory\nmodel, but efforts to make that feature available in the kernel are running\ninto opposition.\n</description>\n\t\t\t<pubDate>Thu, 09 May 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>A leadership crisis in the Nix community</title>\n\t\t\t<link>https://lwn.net/Articles/970824/</link>\n\t\t\t<guid>https://lwn.net/Articles/970824/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nOn April 21, a group of anonymous authors and non-anonymous signatories published\n&lt;a href=\"https://save-nix-together.org/\"&gt;a lengthy open letter&lt;/a&gt; to the\n&lt;a href=\"https://nixos.org/\"&gt;\nNix&lt;/a&gt; community\nand Nix founder Eelco Dolstra calling for his resignation from the project. They\nclaimed ongoing problems with the project's leadership, primarily focusing on the\nway his actions have allegedly\nundermined people nominally empowered to perform various\nmoderation and governance tasks. Since its release, the letter has gained\nmore than 100 signatures.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 09 May 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Security patterns and anti-patterns in embedded development</title>\n\t\t\t<link>https://lwn.net/Articles/970818/</link>\n\t\t\t<guid>https://lwn.net/Articles/970818/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;When it comes to security, telling developers to do (or not do)\nsomething can be ineffective. Helping them understand the why behind\ninstructions, by illustrating good and bad practices using stories, can be\nmuch more effective. With several such stories Marta\nRybczyńska fashioned an interesting &lt;a\nhref=\"https://eoss24.sched.com/event/1aBEg/patterns-and-anti-patterns-in-embedded-development-what-security-incidents-of-2023-teach-us-marta-rybczynska-syslinbit\"&gt;talk&lt;/a&gt;\nabout patterns and anti-patterns in embedded Linux security at the\n&lt;a\nhref=\"https://events.linuxfoundation.org/embedded-open-source-summit/\"&gt;Embedded\nOpen Source Summit&lt;/a&gt; (EOSS), co-located with &lt;a\nhref=\"https://events.linuxfoundation.org/open-source-summit-north-america/\"&gt;Open\nSource Summit North America&lt;/a&gt; (OSSNA), on April 16 in Seattle, Washington.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 09 May 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for May 2, 2024</title>\n\t\t\t<link>https://lwn.net/Articles/971093/</link>\n\t\t\t<guid>https://lwn.net/Articles/971093/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>The LWN.net Weekly Edition for May 2, 2024 is available.\n</description>\n\t\t\t<pubDate>Thu, 09 May 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>A look at Ubuntu Desktop LTS 24.04</title>\n\t\t\t<link>https://lwn.net/Articles/971143/</link>\n\t\t\t<guid>https://lwn.net/Articles/971143/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;Ubuntu&amp;nbsp;24.04&amp;nbsp;LTS, code-named \"Noble&amp;nbsp;Numbat\", was &lt;a\nhref=\"https://lwn.net/Articles/971175/\"&gt;released&lt;/a&gt; on April&amp;nbsp;25. This release includes &lt;a\nhref=\"https://release.gnome.org/46/\"&gt;GNOME&amp;nbsp;46&lt;/a&gt;, installer updates,\nsecurity enhancements, a lot of updated packages, and a new App Center\nthat puts a heavy emphasis on using Snaps to install software. It is not an ambitious release, but it brings enough to the table that it's a worthwhile update.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 09 May 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Inheritable credentials for directory file descriptors</title>\n\t\t\t<link>https://lwn.net/Articles/971825/</link>\n\t\t\t<guid>https://lwn.net/Articles/971825/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>In Unix-like systems, an open file descriptor carries the right to access\nthe opened object in specific ways.  As a general rule, that file\ndescriptor does &lt;i&gt;not&lt;/i&gt; enable access to any other objects.  The\nrecently merged &lt;a href=\"https://lwn.net/Articles/947173/\"&gt;BPF token feature&lt;/a&gt; runs\ncounter to this practice by creating file descriptors that carry specific\nBPF-related access rights.  A similar but different approach to\ncapability-carrying file descriptors, in the form of directory file\ndescriptors that include their own credentials, is currently under\nconsideration in the kernel community.\n</description>\n\t\t\t<pubDate>Thu, 16 May 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for May 9, 2024</title>\n\t\t\t<link>https://lwn.net/Articles/972160/</link>\n\t\t\t<guid>https://lwn.net/Articles/972160/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The LWN.net Weekly Edition for May 9, 2024 is available.\n</description>\n\t\t\t<pubDate>Thu, 16 May 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Securing Git repositories with gittuf</title>\n\t\t\t<link>https://lwn.net/Articles/972467/</link>\n\t\t\t<guid>https://lwn.net/Articles/972467/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;The so-called software supply chain starts with source code. But most security measures and tooling\ndon't kick in until source is turned into an artifact&amp;mdash;a source\ntarball, binary build, container image, or other method of delivering a\nrelease to users. The &lt;a href=\"https://gittuf.dev/\"&gt;gittuf&lt;/a&gt; project\nis an attempt to provide a security layer for &lt;a\nhref=\"https://git-scm.com/\"&gt;Git&lt;/a&gt; that can handle key management,\nenforce security policies for repositories, and guard against attacks\nat the version-control layer. At Open Source Summit North America (OSSNA), Aditya Sirish A\nYelgundhalli and Billy Lynch &lt;a\nhref=\"https://ossna2024.sched.com/event/1aBPF/securing-git-repositories-with-gittuf-aditya-sirish-a-yelgundhalli-new-york-university-billy-lynch-chainguard\"&gt;presented&lt;/a&gt;\nan introduction to gittuf with an overview of its goals and\nstatus.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 16 May 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>A proposal to switch Fedora Workstation's desktop</title>\n\t\t\t<link>https://lwn.net/Articles/970929/</link>\n\t\t\t<guid>https://lwn.net/Articles/970929/</guid>\n\t\t\t<dc:creator>jake</dc:creator>\n\t\t\t<description>A proposal to switch the default desktop for Fedora Workstation from GNOME\nto KDE Plasma largely went over like the proverbial lead balloon—unsurprisingly.\nBut the \nconversation about the proposal did surface some areas where the\ndistribution could \nperhaps be more inclusive with regard to the other desktop choices\navailable.  The project believes that it\nbenefits from being opinionated and not requiring users to make\nmultiple decisions before they can even install the distribution, but there\nis a balance \nto be found.\n</description>\n\t\t\t<pubDate>Thu, 16 May 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Systemd heads for a big round-number release</title>\n\t\t\t<link>https://lwn.net/Articles/971866/</link>\n\t\t\t<guid>https://lwn.net/Articles/971866/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nThe\n&lt;a href=\"https://systemd.io/\"&gt;\nsystemd project&lt;/a&gt; is preparing for a new release.\n&lt;a href=\"https://github.com/systemd/systemd/releases/tag/v256-rc1\"&gt;\nVersion&amp;nbsp;256-rc1&lt;/a&gt; was released\non April&amp;nbsp;25 with a large number of changes and new features. Most of the\nchanges relate to security, easier configuration, unprivileged access to system\nresources, or all three of these. Users of systemd will find setting up\ncontainers — even without root access — much simpler and more secure.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 16 May 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Another push for sched_ext</title>\n\t\t\t<link>https://lwn.net/Articles/972710/</link>\n\t\t\t<guid>https://lwn.net/Articles/972710/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The extensible scheduler class (or \"sched_ext\") is a comprehensive\nframework that enables the implementation of CPU schedulers as a set of BPF\nprograms that can be loaded at run time.  Despite having attracted a fair\namount of interest from the development community, sched_ext has run into\nconsiderable opposition and seems far from acceptance into the mainline.\nThe posting by Tejun Heo of &lt;a\nhref=\"https://lwn.net/ml/linux-kernel/20240501151312.635565-1-tj@kernel.org/\"&gt;a new\nversion of the sched_ext series&lt;/a&gt; at the beginning of May has restarted\nthis long-running discussion, but it is not clear what the end result will\nbe.\n</description>\n\t\t\t<pubDate>Thu, 23 May 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Debian dismisses AI-contributions policy</title>\n\t\t\t<link>https://lwn.net/Articles/972331/</link>\n\t\t\t<guid>https://lwn.net/Articles/972331/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;In April, the Gentoo Linux project &lt;a\nhref=\"https://lwn.net/Articles/970072/\"&gt;banned&lt;/a&gt; the use of\ngenerative AI/ML tools due to copyright, ethical, and quality\nconcerns. This means contributors cannot use tools like ChatGPT or GitHub Copilot to\ncreate content for the distribution such as code, documentation,\nbug reports, and forum posts. A proposal for Debian to adopt a similar\npolicy revealed a distinct lack of love for those kinds of tools,\nthough it would also seem few contributors support\nbanning them outright. &lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 23 May 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>The state of the page in 2024</title>\n\t\t\t<link>https://lwn.net/Articles/973565/</link>\n\t\t\t<guid>https://lwn.net/Articles/973565/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The advent of the &lt;a href=\"https://lwn.net/Articles/849538/\"&gt;folio&lt;/a&gt; structure to\ndescribe groups of pages has been one of the most fundamental\ntransformations within the kernel in recent years.  Since the folio\ntransition affects many subsystems, it is fitting that the subject was\ncovered at the beginning of the 2024 &lt;a\nhref=\"https://events.linuxfoundation.org/lsfmmbpf/\"&gt;Linux Storage,\nFilesystem, Memory Management, and BPF Summit&lt;/a&gt; in a joint session of the\nstorage, filesystem, and memory-management tracks.  Matthew Wilcox used the\nsession to review the work that has been done in this area and to discuss\nwhat comes next.\n</description>\n\t\t\t<pubDate>Thu, 23 May 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for May 16, 2024</title>\n\t\t\t<link>https://lwn.net/Articles/973073/</link>\n\t\t\t<guid>https://lwn.net/Articles/973073/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The LWN.net Weekly Edition for May 16, 2024 is available.\n</description>\n\t\t\t<pubDate>Thu, 23 May 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>The first half of the 6.10 merge window</title>\n\t\t\t<link>https://lwn.net/Articles/973687/</link>\n\t\t\t<guid>https://lwn.net/Articles/973687/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The merge window for the 6.10 kernel release opened on May&amp;nbsp;12; between\nthen and the time of this writing, 6,819 non-merge commits were pulled into\nthe mainline kernel for that release.  Your editor has taken some time out\nfrom &lt;a href=\"https://lwn.net/Articles/lsfmmbpf2024/\"&gt;LSFMM+BPF&lt;/a&gt; in an attempt to keep\nup with the commit flood.  Read on for an overview of the most significant\nchanges that were pulled in the early part of the 6.10 merge window.\n</description>\n\t\t\t<pubDate>Thu, 30 May 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Extending the mempolicy interface for heterogeneous systems</title>\n\t\t\t<link>https://lwn.net/Articles/973964/</link>\n\t\t\t<guid>https://lwn.net/Articles/973964/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>Non-uniform memory access (NUMA) systems are organized with their CPUs\ngrouped into nodes, each of which has memory attached to it.  All memory in\nthe system is accessible from all CPUs, but memory attached to the local\nnode is faster.  The kernel's &lt;a\nhref=\"https://man7.org/linux/man-pages/man2/set_mempolicy.2.html\"&gt;memory-policy\n(\"mempolicy\") interface&lt;/a&gt; allows threads to inform the kernel about how\nthey would like their memory placed to get the best performance.  In recent\nyears, the NUMA concept has been extended to support the management of\ndifferent types of memory in a system, pushing the limits of the mempolicy\nsubsystem.  In a remotely presented session at the &lt;a\nhref=\"https://events.linuxfoundation.org/lsfmmbpf/\"&gt;2024 Linux Storage,\nFilesystem, Memory Management, and BPF Summit&lt;/a&gt;, Gregory Price discussed\nthe ways in which the kernel's memory-policy support should evolve to\nhandle today's more-complex systems.\n</description>\n\t\t\t<pubDate>Thu, 30 May 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Better support for locally-attached-memory tiering</title>\n\t\t\t<link>https://lwn.net/Articles/974126/</link>\n\t\t\t<guid>https://lwn.net/Articles/974126/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The term \"memory tiering\" refers to the management of memory placement on\nsystems with multiple types of memory, each of which has its own\nperformance characteristics.  On such systems, poor placement can lead to\nsignificantly worse performance.  A memory-management-track discussion at\nthe &lt;a\nhref=\"https://events.linuxfoundation.org/lsfmmbpf/\"&gt;2024 Linux Storage,\nFilesystem, Memory Management, and BPF Summit&lt;/a&gt; took yet another look at\ntiering challenges with a focus on upcoming technologies that may simplify\n(or complicate) the picture.\n</description>\n\t\t\t<pubDate>Thu, 30 May 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>What's next for the SLUB allocator</title>\n\t\t\t<link>https://lwn.net/Articles/974138/</link>\n\t\t\t<guid>https://lwn.net/Articles/974138/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>There are two fundamental levels of memory allocator in the Linux kernel:\nthe page allocator, which allocates memory in units of pages, and the slab\nallocator, which allocates arbitrarily-sized chunks that are usually (but\nnot necessarily) smaller than a page.  The slab allocator is the one that\nstands behind commonly used kernel functions like &lt;tt&gt;kmalloc()&lt;/tt&gt;.  At\nthe &lt;a href=\"https://events.linuxfoundation.org/lsfmmbpf/\"&gt;2024 Linux\nStorage, Filesystem, Memory Management, and BPF Summit&lt;/a&gt;, slab maintainer\nVlastimil Babka provided an update on recent changes at the slab level and\ndiscussed the changes that are yet to come.\n</description>\n\t\t\t<pubDate>Thu, 30 May 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Dynamically sizing the kernel stack</title>\n\t\t\t<link>https://lwn.net/Articles/974367/</link>\n\t\t\t<guid>https://lwn.net/Articles/974367/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The kernel stack is a scarce and tightly constrained resource; kernel\ndevelopers often have to go far out of their way to avoid using too much\nstack space.  The size of the stack is also fixed, leading to situations\nwhere it is too small for some code paths, while wastefully large for\nothers.  At the &lt;a\nhref=\"https://events.linuxfoundation.org/lsfmmbpf/\"&gt;2024 Linux Storage,\nFilesystem, Memory Management, and BPF Summit&lt;/a&gt;, Pasha Tatashin proposed\nmaking the kernel stack size dynamic, making more space available when\nneeded while saving memory overall.  This change is not as easy to\nimplement as it might seem, though.\n</description>\n\t\t\t<pubDate>Thu, 30 May 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Virtual machine scheduling with BPF</title>\n\t\t\t<link>https://lwn.net/Articles/974363/</link>\n\t\t\t<guid>https://lwn.net/Articles/974363/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nVineeth Pillai gave a remote talk at the 2024\n&lt;a href=\"https://events.linuxfoundation.org/lsfmmbpf/\"&gt;Linux Storage,\nFilesystem, Memory Management, and BPF Summit&lt;/a&gt; explaining how BPF could be\nused to improve the performance of virtual machines (VMs). Pillai has\n&lt;a href=\"https://lwn.net/ml/linux-kernel/20240403140116.3002809-1-vineeth@bitbyteword.org/\"&gt;\na patch\nset&lt;/a&gt; designed to let guest and host machines share scheduling information in\norder to eliminate some of the overhead of running in a VM. The assembled\ndevelopers had several comments on the design, but seemed overall to approve of\nthe prospect.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 30 May 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Faster page faults with RCU-protected VMA walks</title>\n\t\t\t<link>https://lwn.net/Articles/974392/</link>\n\t\t\t<guid>https://lwn.net/Articles/974392/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>Looking up a virtual memory area (VMA) in a process's address space, for\nthe handling of page faults or any of a number of other tasks, in\nmulti-threaded processes has long been bedeviled by lock contention in the\nkernel.  As a result, developer gatherings have been subjected to many\nsessions on how to improve the situation.  At the &lt;a\nhref=\"https://events.linuxfoundation.org/lsfmmbpf/\"&gt;2024 Linux Storage,\nFilesystem, Memory-Management and BPF Summit&lt;/a&gt;, developers in the\nmemory-management track met, in a session led by Liam Howlett, to talk\nabout a situation that has improved considerably in recent times, but which\nstill offers opportunities for optimization.\n</description>\n\t\t\t<pubDate>Thu, 30 May 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>The KeePassXC kerfuffle</title>\n\t\t\t<link>https://lwn.net/Articles/973782/</link>\n\t\t\t<guid>https://lwn.net/Articles/973782/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;&lt;a href=\"https://keepassxc.org/\"&gt;KeePassXC&lt;/a&gt; is an open-source (GPLv3),\ncross-platform password manager with local-only data storage. The\nproject comes with a number of &lt;a\nhref=\"https://github.com/keepassxreboot/keepassxc/wiki/Building-KeePassXC#build-options\"&gt;build\noptions&lt;/a&gt; that can be used to toggle optional features, such as &lt;a\nhref=\"https://keepassxc.org/docs/KeePassXC_GettingStarted#_setup_browser_integration\"&gt;browser\nintegration&lt;/a&gt; and &lt;a\nhref=\"https://keepassxc.org/docs/KeePassXC_UserGuide#_database_sharing_with_keeshare\"&gt;password\ndatabase sharing&lt;/a&gt;. However, controversy ensued when Debian Developer Julian Klode decided to\nmake use of these compile flags to disable these features to improve security in the\n&lt;tt&gt;keepassxc&lt;/tt&gt; package uploaded to Debian unstable for the\nupcoming Debian 13 (\"Trixie\") release.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 30 May 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Merging msharefs</title>\n\t\t\t<link>https://lwn.net/Articles/974512/</link>\n\t\t\t<guid>https://lwn.net/Articles/974512/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The problem of sharing page tables across processes has been discussed\nnumerous times over the years, Khalid Aziz said at the beginning of his &lt;a\nhref=\"https://events.linuxfoundation.org/lsfmmbpf/\"&gt;2024 Linux Storage,\nFilesystem, Memory-Management and BPF Summit&lt;/a&gt; session on the topic.  He\nwas there to, once again, talk about the proposed &lt;a\nhref=\"https://lwn.net/Articles/895217/\"&gt;&lt;tt&gt;mshare()&lt;/tt&gt;&lt;/a&gt; system call (which, in its\ncurrent form, is no longer actually a system call but the feature still\ngoes by that name) and to see what can be done to finally get it into the\nmainline.\n</description>\n\t\t\t<pubDate>Thu, 30 May 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Documenting page flags by committee</title>\n\t\t\t<link>https://lwn.net/Articles/974515/</link>\n\t\t\t<guid>https://lwn.net/Articles/974515/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>For every page of memory in the system, the kernel maintains a set of page\nflags describing how the page is used and various aspects of its current\nstate.  Space for page flags has been in &lt;a\nhref=\"https://lwn.net/Articles/335768/\"&gt;chronic short supply&lt;/a&gt;, leading to a desire to\neliminate or consolidate them whenever possible.  That objective, though,\nis hampered by the fact that the purpose of many page flags is not well\nunderstood.  In a memory-management-track session at the &lt;a\nhref=\"https://events.linuxfoundation.org/lsfmmbpf/\"&gt;2024 Linux Storage,\nFilesystem, Memory-Management and BPF Summit&lt;/a&gt;, Matthew Wilcox set out to\ncooperatively update the page-flag documentation to improve that situation.\n</description>\n\t\t\t<pubDate>Thu, 30 May 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Two sessions on CXL memory</title>\n\t\t\t<link>https://lwn.net/Articles/974518/</link>\n\t\t\t<guid>https://lwn.net/Articles/974518/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>&lt;a href=\"https://en.wikipedia.org/wiki/Compute_Express_Link\"&gt;Compute\nExpress Link (CXL)&lt;/a&gt; is a data-center-oriented memory solution that,\naccording to some in the industry, will yield large cost savings and\nperformance improvements.  Others are more skeptical.  At the &lt;a\nhref=\"https://events.linuxfoundation.org/lsfmmbpf/\"&gt;2024 Linux Storage,\nFilesystem, Memory-Management and BPF Summit&lt;/a&gt;, two sessions covered CXL\nand how it will be supported in future kernels.\n</description>\n\t\t\t<pubDate>Thu, 30 May 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>The path to deprecating SPARSEMEM</title>\n\t\t\t<link>https://lwn.net/Articles/974517/</link>\n\t\t\t<guid>https://lwn.net/Articles/974517/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The term \"memory model\" is used in a couple of ways within the kernel.\nPerhaps the more obscure meaning is the memory-management subsystem's view\nof how physical memory is organized on a given system.  A proper\nrepresentation of physical memory will be more efficient in terms of memory\nand CPU use.  Since hardware comes in numerous variations, the kernel\nsupports a number of memory models to match; see &lt;a\nhref=\"https://lwn.net/Articles/789304/\"&gt;this article&lt;/a&gt; for details.  At the &lt;a\nhref=\"https://events.linuxfoundation.org/lsfmmbpf/\"&gt;2024 Linux Storage,\nFilesystem, Memory-Management and BPF Summit&lt;/a&gt;, Oscar Salvador,\npresenting remotely, made the case for removing one of those models.\n</description>\n\t\t\t<pubDate>Thu, 30 May 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Supporting larger block sizes in filesystems</title>\n\t\t\t<link>https://lwn.net/Articles/974219/</link>\n\t\t\t<guid>https://lwn.net/Articles/974219/</guid>\n\t\t\t<dc:creator>jake</dc:creator>\n\t\t\t<description>In a \ncombined storage and filesystem session at the 2024\n&lt;a\nhref=\"https://events.linuxfoundation.org/lsfmmbpf/\"&gt;Linux Storage,\nFilesystem, Memory Management, and BPF Summit&lt;/a&gt;, Luis Chamberlain led a\ndiscussion on filesystem support for block sizes larger than the usual 4KB\npage size, \nwhich followed up on  &lt;a href=\"https://lwn.net/Articles/933437/\"&gt;discussion from last year&lt;/a&gt;.  While the\nsession was meant to look at the intersection of larger block sizes\nwith atomic block writes  that avoid torn\n(partial) writes (which was also &lt;a\nhref=\"https://lwn.net/Articles/933015/\"&gt;discussed last year&lt;/a&gt;), it mostly focused on the\nfilesystem side.  Over time, the\nblock sizes offered by storage devices have risen from the original\n512&amp;nbsp;bytes; Chamberlain\nwanted to discuss filesystem support for block sizes larger than 4KB.\n</description>\n\t\t\t<pubDate>Thu, 30 May 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for May 23, 2024</title>\n\t\t\t<link>https://lwn.net/Articles/973888/</link>\n\t\t\t<guid>https://lwn.net/Articles/973888/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The LWN.net Weekly Edition for May 23, 2024 is available.\n</description>\n\t\t\t<pubDate>Thu, 30 May 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>The twilight of the version-1 memory controller</title>\n\t\t\t<link>https://lwn.net/Articles/974575/</link>\n\t\t\t<guid>https://lwn.net/Articles/974575/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>Almost immediately after the merging of &lt;a href=\"https://lwn.net/Articles/603762/\"&gt;control\ngroups&lt;/a&gt;, kernel developers set their sights on reimplementing them\nproperly.  The second version of the control-group API started trickling\ninto the kernel around the 3.16 release in 2014 and users have long since\nbeen encouraged to migrate, but support for (and users of) the initial API\nremain.  At the &lt;a href=\"https://events.linuxfoundation.org/lsfmmbpf/\"&gt;2024\nLinux Storage, Filesystem, Memory-Management and BPF Summit&lt;/a&gt;,\nmemory-management developers discussed whether (and when) it might be\npossible to remove the version-1 memory controller.  The session was led by\nShakeel Butt and (participating remotely) Roman Gushchin.\n</description>\n\t\t\t<pubDate>Thu, 06 Jun 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>What's scheduled for sched_ext</title>\n\t\t\t<link>https://lwn.net/Articles/974387/</link>\n\t\t\t<guid>https://lwn.net/Articles/974387/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nDavid Vernet's second talk at the 2024\n&lt;a href=\"https://events.linuxfoundation.org/lsfmmbpf/\"&gt;Linux Storage,\nFilesystem, Memory Management, and BPF Summit&lt;/a&gt; was a summary of the state of\nsched_ext, the extensible BPF scheduler that &lt;a href=\"https://lwn.net/Articles/972710/\"&gt;LWN\ncovered in early May&lt;/a&gt;. In short, sched_ext is intended as a platform for\nrapid experimentation with schedulers, and a tool to let performance-minded\nadministrators customize the scheduler to their workload. The patch set has seen\nseveral revisions, becoming more generic and powerful over time.\nVernet spoke about what has been done in the past year,\nand what is still missing before sched_ext can be considered pretty much\ncomplete.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 06 Jun 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Large-folio support for shmem and tmpfs</title>\n\t\t\t<link>https://lwn.net/Articles/974630/</link>\n\t\t\t<guid>https://lwn.net/Articles/974630/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The kernel contains a pair of related filesystems that, among other things,\ncan be used for shared-memory applications; shmem is an internal mechanism\nused within the kernel, while the tmpfs filesystem is mounted and\naccessible from user space.  As is the case elsewhere in the kernel, these\nsubsystems would benefit from the addition of large-folio support.  During\na joint storage, filesystem, and memory-management session at the &lt;a\nhref=\"https://events.linuxfoundation.org/lsfmmbpf/\"&gt;2024 Linux Storage,\nFilesystem, Memory-Management and BPF Summit&lt;/a&gt;, Daniel Gomez talked about\nthe work he is doing to add that support.\n</description>\n\t\t\t<pubDate>Thu, 06 Jun 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Atomic writes without tears</title>\n\t\t\t<link>https://lwn.net/Articles/974578/</link>\n\t\t\t<guid>https://lwn.net/Articles/974578/</guid>\n\t\t\t<dc:creator>jake</dc:creator>\n\t\t\t<description>John Garry and Ted Ts'o led a discussion about supporting atomic writes for buffered\nI/O, without any torn (or partial) writes to the device, at the 2024 &lt;a\nhref=\"https://events.linuxfoundation.org/lsfmmbpf/\"&gt;Linux Storage,\nFilesystem, Memory Management, and BPF Summit&lt;/a&gt;.  It is something of a\ncontinuation of a &lt;a href=\"https://lwn.net/Articles/933015/\"&gt;discussion at last year's\nsummit&lt;/a&gt;. The goal is to help PostgreSQL, which writes its data using\n16KB buffered I/O; it currently has to do a lot of extra work to ensure\nthat its data is safe on disk.  A promise of non-torn, 16KB buffered writes\nwould allow the database \nto avoid doing double writes.\n</description>\n\t\t\t<pubDate>Thu, 06 Jun 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>The rest of the 6.10 merge window</title>\n\t\t\t<link>https://lwn.net/Articles/974869/</link>\n\t\t\t<guid>https://lwn.net/Articles/974869/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>Linus Torvalds &lt;a href=\"https://lwn.net/Articles/975144/\"&gt;released 6.10-rc1&lt;/a&gt; and closed\nthe 6.10 merge window on May&amp;nbsp;26.  By that time, 11,534 non-merge\nchangesets had been pulled into the mainline for the next release; nearly\n5,000 of those came in after \"&lt;a href=\"https://lwn.net/Articles/973687/\"&gt;The first half of\nthe 6.10 merge window&lt;/a&gt;\" was written.  While the latter half of the merge\nwindow tends to focus more on fixes, there was also a lot of new\nfunctionality that landed during this time.\n</description>\n\t\t\t<pubDate>Thu, 06 Jun 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Fleshing out memory descriptors</title>\n\t\t\t<link>https://lwn.net/Articles/974937/</link>\n\t\t\t<guid>https://lwn.net/Articles/974937/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>One of the long-term goals of the folio conversion in the kernel's\nmemory-management subsystem is the replacement of the &lt;tt&gt;page&lt;/tt&gt;\nstructure, which describes a page of physical memory, with an eight-byte\n\"memory descriptor\".  This change would reduce the overhead of tracking\nphysical memory, increase type safety, and make memory management more\nflexible.  Thus far, though, details on what the memory-descriptor future\nwill look like have been relatively scarce.  At the &lt;a\nhref=\"https://events.linuxfoundation.org/lsfmmbpf/\"&gt;2024 Linux Storage,\nFilesystem, Memory-Management and BPF Summit&lt;/a&gt;, Matthew Wilcox led a\ndiscussion to try to fill in the picture somewhat.\n</description>\n\t\t\t<pubDate>Thu, 06 Jun 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>The state of the memory-management community in 2024</title>\n\t\t\t<link>https://lwn.net/Articles/974939/</link>\n\t\t\t<guid>https://lwn.net/Articles/974939/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>A longstanding tradition in the memory-management track of the &lt;a\nhref=\"https://events.linuxfoundation.org/lsfmmbpf/\"&gt;Linux Storage,\nFilesystem, Memory-Management and BPF Summit&lt;/a&gt; is a session with\nmaintainer Andrew Morton to discuss the overall state of the community and\nthe development process.  The 2024 gathering upheld that tradition toward\nthe end of the final day of the event.  It seems that Morton and the\nassembled developers were all happy with how memory-management work is\ngoing, but there is always room for improvement.\n</description>\n\t\t\t<pubDate>Thu, 06 Jun 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Measuring memory fragmentation</title>\n\t\t\t<link>https://lwn.net/Articles/974943/</link>\n\t\t\t<guid>https://lwn.net/Articles/974943/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>In the final session in the memory-management track of the &lt;a\nhref=\"https://events.linuxfoundation.org/lsfmmbpf/\"&gt;2024 Linux Storage,\nFilesystem, Memory-Management and BPF Summit&lt;/a&gt;, the exhausted group of\ndevelopers looked one more time at the use of huge pages and the associated\nproblem of memory fragmentation.  At its worst, this problem can make huge\npages harder (and more expensive) to allocate.  Luis Chamberlain, who ran\nthe session, felt that people were worried about this problem, but that\nthere was little data on how severe it truly is.\n</description>\n\t\t\t<pubDate>Thu, 06 Jun 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Filesystems and iomap</title>\n\t\t\t<link>https://lwn.net/Articles/974958/</link>\n\t\t\t<guid>https://lwn.net/Articles/974958/</guid>\n\t\t\t<dc:creator>jake</dc:creator>\n\t\t\t<description>The &lt;a href=\"https://kernelnewbies.org/KernelProjects/iomap\"&gt;iomap&lt;/a&gt;\nblock-mapping abstraction is being used by more filesystems, in part\nbecause of its support for large folios.  But there are some challenges in\nadopting iomap, which was the topic of a discussion led by Ritesh Harjani\nin a combined storage and filesystem session at the 2024 &lt;a\nhref=\"https://events.linuxfoundation.org/lsfmmbpf/\"&gt;Linux Storage,\nFilesystem, Memory Management, and BPF Summit&lt;/a&gt;.  One of the main trouble\nspots is how to handle metadata, which is not an area that iomap has been aimed\nat.\n</description>\n\t\t\t<pubDate>Thu, 06 Jun 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Supporting BPF in GCC</title>\n\t\t\t<link>https://lwn.net/Articles/975412/</link>\n\t\t\t<guid>https://lwn.net/Articles/975412/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nThe GCC project has been &lt;a href=\"https://lwn.net/Articles/946254\"&gt;working&lt;/a&gt; to support compiling to BPF\nfor some time. José Marchesi and David Faust spoke in an extended session at the 2024\n&lt;a href=\"https://events.linuxfoundation.org/lsfmmbpf/\"&gt;Linux Storage,\nFilesystem, Memory Management, and BPF Summit&lt;/a&gt;\nabout how that work has been going, and what is left for GCC to be on-par with\nLLVM with regard to BPF support. They also related tentative plans for how\nGCC BPF support would be maintained in the future.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 06 Jun 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for May 30, 2024</title>\n\t\t\t<link>https://lwn.net/Articles/974709/</link>\n\t\t\t<guid>https://lwn.net/Articles/974709/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The LWN.net Weekly Edition for May 30, 2024 is available.\n</description>\n\t\t\t<pubDate>Thu, 06 Jun 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Fedora approves shipping pre-built macOS binaries</title>\n\t\t\t<link>https://lwn.net/Articles/975445/</link>\n\t\t\t<guid>https://lwn.net/Articles/975445/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;The &lt;a href=\"https://asahilinux.org/\"&gt;Asahi Linux&lt;/a&gt; project works\nto support Linux on Apple Silicon hardware. The\nproject's &lt;a\nhref=\"https://asahilinux.org/2023/08/fedora-asahi-remix/\"&gt;flagship&lt;/a&gt;\ndistribution is the &lt;a href=\"https://asahilinux.org/fedora/\"&gt;Fedora\nAsahi Remix&lt;/a&gt;, which has its own &lt;a\nhref=\"https://github.com/AsahiLinux/asahi-installer\"&gt;installer&lt;/a&gt; (rather than &lt;a\nhref=\"https://fedoraproject.org/wiki/Anaconda\"&gt;Anaconda&lt;/a&gt;) to\naccommodate the unique requirements of installing on Apple's\nhardware. Previously the installer was built by the Asahi project, but it has asked for (and received) an exception\nfrom the &lt;a href=\"https://docs.fedoraproject.org/en-US/fesco/\"&gt;Fedora\nEngineering Steering Committee&lt;/a&gt; (FESCo) to include two binaries\nfrom upstream open-source projects so that the installer can be built on Fedora\ninfrastructure.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 06 Jun 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>New APIs for filesystems</title>\n\t\t\t<link>https://lwn.net/Articles/975444/</link>\n\t\t\t<guid>https://lwn.net/Articles/975444/</guid>\n\t\t\t<dc:creator>jake</dc:creator>\n\t\t\t<description>A discussion of extensions to the &lt;a\nhref=\"https://man7.org/linux/man-pages/man2/statx.2.html\"&gt;&lt;tt&gt;statx()&lt;/tt&gt;&lt;/a&gt;\nsystem call comes up frequently at the &lt;a\nhref=\"https://events.linuxfoundation.org/lsfmmbpf/\"&gt;Linux Storage,\nFilesystem, Memory Management, and BPF Summit&lt;/a&gt;; this year's edition was\nno exception.  Kent Overstreet led the first filesystem-only session at the\nsummit on querying information about filesystems that have subvolumes and\nsnapshots. While it was billed as a discussion on &lt;tt&gt;statx()&lt;/tt&gt;\nadditions, it ranged more widely over new APIs needed for modern filesystems.\n</description>\n\t\t\t<pubDate>Thu, 13 Jun 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>One more pidfdfs surprise</title>\n\t\t\t<link>https://lwn.net/Articles/976125/</link>\n\t\t\t<guid>https://lwn.net/Articles/976125/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The \"pidfdfs\" virtual filesystem was added to the 6.9 kernel release as a\nway to export better information about running processes to user space.  It\nreplaced a previous implementation in a way that was, on its surface, fully\ncompatible while adding a number of new capabilities.  This transition,\nwhich was intended to be entirely invisible to existing applications,\nalready &lt;a href=\"https://lwn.net/Articles/963749/\"&gt;ran into trouble&lt;/a&gt; in March, when a\nmisunderstanding with SELinux caused systems with pidfdfs to fail to boot\nproperly.  That problem was quickly fixed, but it turns out that there was\none more surprise in store, showing just how hard ABI compatibility can be\nat times.\n</description>\n\t\t\t<pubDate>Thu, 13 Jun 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Debian's /tmpest in a teapot</title>\n\t\t\t<link>https://lwn.net/Articles/975565/</link>\n\t\t\t<guid>https://lwn.net/Articles/975565/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;Debian had a major &lt;a href=\"https://lwn.net/Articles/499410/\"&gt;discussion&lt;/a&gt;\nabout mounting &lt;tt&gt;/tmp&lt;/tt&gt; as a RAM-based tmpfs in 2012 but inertia\nwon out in the end. Debian systems have continued to\nstore temporary files on disk by default. Until now. A mere \n12 years later, the project will be switching to a RAM-based &lt;tt&gt;/tmp&lt;/tt&gt; in the Debian\n13 (\"Trixie\") release. Additionally, starting with Trixie, the\ndefault will be to periodically clean up temporary files automatically in\n&lt;tt&gt;&lt;nobr&gt;/tmp&lt;/nobr&gt;&lt;/tt&gt; and &lt;tt&gt;&lt;nobr&gt;/var/tmp&lt;/nobr&gt;&lt;/tt&gt;. Naturally, it involved a lengthy discussion first.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 13 Jun 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>An instruction-level BPF memory model</title>\n\t\t\t<link>https://lwn.net/Articles/976071/</link>\n\t\t\t<guid>https://lwn.net/Articles/976071/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nThere are few topics as arcane as memory models, so it was a pleasant surprise\nwhen the double-length session on the BPF memory model at the\n&lt;a href=\"https://events.linuxfoundation.org/lsfmmbpf/\"&gt;Linux Storage,\nFilesystem, Memory Management, and BPF Summit&lt;/a&gt; turned out to be\nunderstandable. Paul McKenney led the session, although he was clear that the\nwork he was presenting was also due to Puranjay Mohan, who unfortunately could\nnot attend the summit.\nBPF does not actually have a formalized memory model yet;\ninstead it has relied on a history of talks like this one and a general informal understanding.\nUnfortunately, ignoring memory models does not make them go away, and this has\nalready caused at least one BPF-related bug on weakly-ordered architectures.\nFiguring out what a formal memory model for BPF should define was the focus of\nMcKenney's talk.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 13 Jun 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Handling the NFS change attribute</title>\n\t\t\t<link>https://lwn.net/Articles/975863/</link>\n\t\t\t<guid>https://lwn.net/Articles/975863/</guid>\n\t\t\t<dc:creator>jake</dc:creator>\n\t\t\t<description>The saga of the &lt;tt&gt;i_version&lt;/tt&gt; field for inodes, which tracks the\noccurrence of changes\nto the data or metadata of a file, continued in a discussion at the 2024 &lt;a\nhref=\"https://events.linuxfoundation.org/lsfmmbpf/\"&gt;Linux Storage,\nFilesystem, Memory Management, and BPF Summit&lt;/a&gt;.  In a session led by\nJeff Layton, who has been doing a lot the work on &lt;a\nhref=\"https://lwn.net/Articles/905931/\"&gt;changing the semantics and functioning of\n&lt;tt&gt;i_version&lt;/tt&gt;&lt;/a&gt; over the years, he updated attendees on the status of the &lt;a\nhref=\"https://lwn.net/Articles/946394/\"&gt;effort&lt;/a&gt; since a &lt;a\nhref=\"https://lwn.net/Articles/937247/\"&gt;session at last year's summit&lt;/a&gt;.  His summary\nwas that things are\n\"pretty much where we started last year\", but the discussion this time\npointed to some possible ways forward.\n</description>\n\t\t\t<pubDate>Thu, 13 Jun 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for June 6, 2024</title>\n\t\t\t<link>https://lwn.net/Articles/975974/</link>\n\t\t\t<guid>https://lwn.net/Articles/975974/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The LWN.net Weekly Edition for June 6, 2024 is available.\n</description>\n\t\t\t<pubDate>Thu, 13 Jun 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Measuring and improving buffered I/O</title>\n\t\t\t<link>https://lwn.net/Articles/976856/</link>\n\t\t\t<guid>https://lwn.net/Articles/976856/</guid>\n\t\t\t<dc:creator>jake</dc:creator>\n\t\t\t<description>There are two types of file I/O on Linux, buffered I/O, which goes through\nthe page cache, and direct I/O, which goes directly to the storage device.\nThe performance of buffered I/O was reported to be a lot worse than direct\nI/O, especially for one specific test, in Luis Chamberlain's \n&lt;a\nhref=\"https://lwn.net/ml/linux-fsdevel/Zdkxfspq3urnrM6I@bombadil.infradead.org/\"&gt;topic\nproposal&lt;/a&gt; for a session at the 2024 &lt;a\nhref=\"https://events.linuxfoundation.org/lsfmmbpf/\"&gt;Linux Storage,\nFilesystem, Memory Management, and BPF Summit&lt;/a&gt;.\nThe proposal resulted in a lengthy mailing-list discussion, \nwhich also came up in &lt;a\nhref=\"https://lwn.net/Articles/974487/\"&gt;Paul McKenney's RCU session&lt;/a&gt; the next\nday; Chamberlain led a \ncombined storage and filesystem session to discuss those results with an\neye toward improving buffered I/O performance.\n</description>\n\t\t\t<pubDate>Thu, 13 Jun 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Rethinking the PostgreSQL CommitFest model</title>\n\t\t\t<link>https://lwn.net/Articles/976793/</link>\n\t\t\t<guid>https://lwn.net/Articles/976793/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;Many years ago, the PostgreSQL project started holding regular &lt;a href=\"https://wiki.postgresql.org/wiki/CommitFest\"&gt;CommitFests&lt;/a&gt; to\nhelp tackle the work of reviewing and committing patches in a more\norganized fashion. That has served the project well, but some in\nthe project are concerned that CommitFests are no longer meeting\nthe needs of PostgreSQL or its contributors. A lengthy discussion on the\npgsql-hackers mailing list turned up a number of complaints, a few\nsuggestions for improvement, but little consensus or momentum toward\na solution.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 13 Jun 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Removing GFP_NOFS</title>\n\t\t\t<link>https://lwn.net/Articles/976355/</link>\n\t\t\t<guid>https://lwn.net/Articles/976355/</guid>\n\t\t\t<dc:creator>jake</dc:creator>\n\t\t\t<description>The &lt;tt&gt;GFP_NOFS&lt;/tt&gt; flag is meant for kernel memory allocations that\nshould not cause a call into the filesystems to reclaim memory because there are\nalready locks held that can potentially cause a deadlock.  The \"scoped\nallocation\" API is a better choice for filesystems to indicate that they\nare holding a lock, so &lt;tt&gt;GFP_NOFS&lt;/tt&gt; has &lt;a\nhref=\"https://lwn.net/Articles/753078/\"&gt;long been on the chopping block&lt;/a&gt;, though\nprogress has been slow.  In a filesystem-track session at\nthe 2024 &lt;a\nhref=\"https://events.linuxfoundation.org/lsfmmbpf/\"&gt;Linux Storage,\nFilesystem, Memory Management, and BPF Summit&lt;/a&gt;, Matthew Wilcox wanted to\ndiscuss how to move kernel filesystems away from the flag with the eventual\ngoal of removing it completely.\n</description>\n\t\t\t<pubDate>Thu, 13 Jun 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Comparing BPF performance between implementations</title>\n\t\t\t<link>https://lwn.net/Articles/976317/</link>\n\t\t\t<guid>https://lwn.net/Articles/976317/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nAlan Jowett returned for a second remote presentation at the 2024\n&lt;a href=\"https://events.linuxfoundation.org/lsfmmbpf/\"&gt;Linux Storage,\nFilesystem, Memory Management, and BPF Summit&lt;/a&gt; to compare the performance of\ndifferent BPF runtimes. He showed the results of the MIT-licensed BPF\n&lt;a href=\"https://github.com/microsoft/bpf_performance\"&gt;\nmicrobenchmark suite&lt;/a&gt; he has been working on.\nThe benchmark suite does not yet provide a good direct comparison between all\nplatforms, so the results should be\ntaken with a grain of salt. They do\nseem to indicate that there is some significant variation between\nimplementations, especially for different types of BPF maps.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 13 Jun 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Modernizing BPF for the next 10 years</title>\n\t\t\t<link>https://lwn.net/Articles/977013/</link>\n\t\t\t<guid>https://lwn.net/Articles/977013/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nBPF was first\n&lt;a href=\"https://lwn.net/Articles/599755/\"&gt;\ngeneralized beyond packet filtering&lt;/a&gt; more than a decade ago. In that time, it\nhas changed a lot, becoming much more capable.\nAlexei Starovoitov kicked off the second day of the BPF track at the 2024\n&lt;a href=\"https://events.linuxfoundation.org/lsfmmbpf/\"&gt;Linux Storage,\nFilesystem, Memory Management, and BPF Summit&lt;/a&gt; by leading a session\ndiscussing which changes to BPF are going to come in the next ten years as it\ncontinues evolving. He proposed several ideas, including expanding the number of\nregisters available to BPF programs, dynamic deadlock detection, and relaxing\nsome existing limits of the verifier.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 20 Jun 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Dropping the page cache for filesystems</title>\n\t\t\t<link>https://lwn.net/Articles/977486/</link>\n\t\t\t<guid>https://lwn.net/Articles/977486/</guid>\n\t\t\t<dc:creator>jake</dc:creator>\n\t\t\t<description>VFS maintainer Christian Brauner led a discussion about the possibility of\nselectively dropping the contents of the page cache for a filesystem in a\nsession at the\n2024 &lt;a\nhref=\"https://events.linuxfoundation.org/lsfmmbpf/\"&gt;Linux Storage,\nFilesystem, Memory Management, and BPF Summit&lt;/a&gt;.  As he described in his\n&lt;a href=\"https://lwn.net/ml/all/20240116-tagelang-zugnummer-349edd1b5792%40brauner/\"&gt;topic\nproposal&lt;/a&gt;, the use case that started him down this path comes from\nGNOME, which wants to be able to safely suspend access to an encrypted home\ndirectory.  While it is known to kernel\ndevelopers, it is surprising to others that reads from encrypted\nfilesystems that have been suspended will succeed if the data to be read\nstill exists in the \npage cache.\n</description>\n\t\t\t<pubDate>Thu, 20 Jun 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Securing BPF programs before and after verification</title>\n\t\t\t<link>https://lwn.net/Articles/977394/</link>\n\t\t\t<guid>https://lwn.net/Articles/977394/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nBPF is in a unique position in terms of security. It runs in a privileged\ncontext, within the kernel, and can have access to many sensitive details of the\nkernel's operation. At the same time, unlike kernel modules, BPF programs aren't signed.\nAdditionally, the mechanisms behind BPF present challenges to implementing\nsigning or other security features. Three nearly back-to-back sessions at the\n2024\n&lt;a href=\"https://events.linuxfoundation.org/lsfmmbpf/\"&gt;Linux Storage,\nFilesystem, Memory Management, and BPF Summit&lt;/a&gt;\naddressed some of the potential security problems.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 20 Jun 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for June 13, 2024</title>\n\t\t\t<link>https://lwn.net/Articles/977365/</link>\n\t\t\t<guid>https://lwn.net/Articles/977365/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The LWN.net Weekly Edition for June 13, 2024 is available.\n</description>\n\t\t\t<pubDate>Thu, 20 Jun 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Elevating CentOS 7 to a new life</title>\n\t\t\t<link>https://lwn.net/Articles/977762/</link>\n\t\t\t<guid>https://lwn.net/Articles/977762/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;CentOS Linux&amp;nbsp;7 was &lt;a\nhref=\"https://lists.centos.org/pipermail/centos-announce/2014-July/020393.html\"&gt;first\nreleased&lt;/a&gt; in July&amp;nbsp;2014, and is due to go end-of-life (EOL) on June&amp;nbsp;30.\nBy now, anyone who pays attention to such things is aware that Red Hat &lt;a\nhref=\"https://lwn.net/Articles/839257/\"&gt;pulled the plug&lt;/a&gt; on\nCentOS&amp;nbsp;Linux in late&amp;nbsp;2020 to be replaced by CentOS Stream\ninstead. CentOS&amp;nbsp;Linux&amp;nbsp;8\nsupport was &lt;a href=\"https://lwn.net/Articles/862832/\"&gt;wound\ndown&lt;/a&gt; at the end of 2021 rather than in 2029 as originally stated.\nCentOS Linux&amp;nbsp;7 was allowed to serve out its\nfull lifespan&amp;mdash;but that EOL is approaching rapidly and\nthere's no direct upgrade path. Users and organizations looking for a lifeline might want to consider\nAlmaLinux's &lt;a href=\"https://wiki.almalinux.org/elevate/\"&gt;ELevate&lt;/a&gt;\nutility, which allows CentOS users to migrate to alternate enterprise\nLinux (EL) operating systems.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 20 Jun 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Improving control-flow integrity for Linux on RISC-V</title>\n\t\t\t<link>https://lwn.net/Articles/977720/</link>\n\t\t\t<guid>https://lwn.net/Articles/977720/</guid>\n\t\t\t<dc:creator>jake</dc:creator>\n\t\t\t<description>Redirecting execution flow is a common malware\ntechnique that can be used to compromise operating systems. To protect from such attacks,\nthe chip makers of leading architectures like x86 and arm64 have implemented\n&lt;a\nhref=\"https://lwn.net/Articles/900099/\"&gt;control-flow-integrity (CFI) extensions&lt;/a&gt;, though they need system\nsoftware support to function. At the &lt;a\nhref=\"https://events.linuxfoundation.org/linux-security-summit-north-america/\"&gt;Linux\nSecurity Summit North America&lt;/a&gt;,  &lt;a\nhref=\"https://riscv.org/\"&gt;RISC-V&lt;/a&gt; kernel developer Deepak Gupta described the CFI\nprotections for that architecture and  invited community input on the\nkernel support for them.\n</description>\n\t\t\t<pubDate>Thu, 27 Jun 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Aeon: openSUSE for lazy developers</title>\n\t\t\t<link>https://lwn.net/Articles/977987/</link>\n\t\t\t<guid>https://lwn.net/Articles/977987/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;The openSUSE project recently &lt;a\nhref=\"https://news.opensuse.org/2024/05/28/aeon-desktop-brings-new-features-in-rctwo-release/\"&gt;announced&lt;/a&gt;\nthe second release candidate (RC2) of its &lt;a\nhref=\"https://aeondesktop.github.io/\"&gt;Aeon Desktop&lt;/a&gt;, formerly known\nas MicroOS Desktop GNOME. Aside from the new coat of naming paint,\nAeon breaks ground in a few other ways by dabbling with technologies not found in other openSUSE releases. The goal for Aeon is to provide\nautomated system updates using snapshots that can be applied\natomically, removing the burden of system maintenance for\n\"&lt;q&gt;lazy developers&lt;/q&gt;\" who want to focus on their work rather than desktop\nadministration. System-tinkerers need not apply.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 27 Jun 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Nested bottom-half locking for realtime kernels</title>\n\t\t\t<link>https://lwn.net/Articles/978189/</link>\n\t\t\t<guid>https://lwn.net/Articles/978189/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>Software-interrupt handlers (also called \"bottom halves\") have a long\nhistory in the Linux kernel; for much of that history, developers have\nwished that they could go away.  One of their unfortunate characteristics\nis that they can add unexpected latency to the execution of unrelated\nprocesses; this problem is felt especially acutely in the\nrealtime-preemption community.  The solution adopted there has created\nproblems of its own, though; in response Sebastian Andrzej Siewior is &lt;a\nhref=\"https://lwn.net/ml/all/20240607070427.1379327-1-bigeasy@linutronix.de\"&gt;proposing&lt;/a&gt;\na new locking mechanism for realtime builds of the kernel that may have\nbenefits for non-realtime users as well.\n</description>\n\t\t\t<pubDate>Thu, 27 Jun 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>BPF tracing performance</title>\n\t\t\t<link>https://lwn.net/Articles/978335/</link>\n\t\t\t<guid>https://lwn.net/Articles/978335/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nOn the final day of the 2024\n&lt;a href=\"https://events.linuxfoundation.org/lsfmmbpf/\"&gt;Linux Storage,\nFilesystem, Memory Management, and BPF Summit&lt;/a&gt;, the BPF track\nopened with a series of sessions on improving the performance and\nflexibility of probes and other performance-monitoring tools, in the kernel and in\nuser space. Jiri Olsa led two sessions about different aspects of probes:\nmaking the API for BPF programs attached to a probe more flexible, and making\nuser-space probes more efficient.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 27 Jun 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Adding a JIT compiler to CPython</title>\n\t\t\t<link>https://lwn.net/Articles/977855/</link>\n\t\t\t<guid>https://lwn.net/Articles/977855/</guid>\n\t\t\t<dc:creator>jake</dc:creator>\n\t\t\t<description>One of the big-ticket items for the upcoming Python&amp;nbsp;3.13 release is an experimental &lt;a\nhref=\"https://lwn.net/Articles/970397/\"&gt;just-in-time (JIT) compiler&lt;/a&gt; for the language;\nthe other is, of course, the &lt;a\nhref=\"https://lwn.net/Articles/947138/\"&gt;removal of the \nglobal interpreter lock (GIL)&lt;/a&gt;, which is also an experiment.  Brandt\nBucher is a member of the &lt;a \nhref=\"https://github.com/faster-cpython\"&gt;Faster CPython project&lt;/a&gt;, which is\nworking on making the reference implementation of the language faster via a\nvariety of techniques.  Last year at PyCon, he gave a &lt;a\nhref=\"https://lwn.net/Articles/930705/\"&gt;talk about the specializing adaptive\ninterpreter&lt;/a&gt;; at &lt;a href=\"https://us.pycon.org/2024/\"&gt;PyCon&amp;nbsp;2024&lt;/a&gt; in Pittsburgh, he described the work he and others have been doing\nto &lt;a href=\"https://lwn.net/Articles/957239/\"&gt;add a copy-and-patch JIT compiler&lt;/a&gt; to CPython.\n</description>\n\t\t\t<pubDate>Thu, 27 Jun 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>How free software hijacked Philip Hazel's life</title>\n\t\t\t<link>https://lwn.net/Articles/978463/</link>\n\t\t\t<guid>https://lwn.net/Articles/978463/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;Philip Hazel was 51 when he began the &lt;a\nhref=\"https://www.exim.org/\"&gt;Exim&lt;/a&gt; message transfer agent (MTA)\nproject in 1995, which\nled to the &lt;a\nhref=\"https://github.com/PCRE2Project/pcre2\"&gt;Perl-Compatible Regular\nExpressions&lt;/a&gt; (PCRE) project in 1998. At 80,\nhe's maintained PCRE, and its successor PCRE2, for more than 27\nyears. For those doing the math, that's a year longer than LWN has\nbeen in publication. Exim maintenance was handed off around the time\nof his retirement in 2007. Now, he is ready to hand off PCRE2 as well,\nif a successor can be found.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 27 Jun 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Capturing stack traces asynchronously with BPF</title>\n\t\t\t<link>https://lwn.net/Articles/978736/</link>\n\t\t\t<guid>https://lwn.net/Articles/978736/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nAndrii Nakryiko led a session at\nthe 2024\n&lt;a href=\"https://events.linuxfoundation.org/lsfmmbpf/\"&gt;Linux Storage,\nFilesystem, Memory Management, and BPF Summit&lt;/a&gt; giving\na look into the APIs for capturing stack traces\nusing BPF, and how the APIs could be made more useful. BPF programs can capture the\ncurrent stack trace of a running process, including the portion in the kernel\nduring execution of a system call, which can be useful for diagnosing\nperformance problems, among other things. But there are substantial problems with\nthe existing API.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 27 Jun 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for June 20, 2024</title>\n\t\t\t<link>https://lwn.net/Articles/978238/</link>\n\t\t\t<guid>https://lwn.net/Articles/978238/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The LWN.net Weekly Edition for June 20, 2024 is available.\n</description>\n\t\t\t<pubDate>Thu, 27 Jun 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>How kernel CVE numbers are assigned</title>\n\t\t\t<link>https://lwn.net/Articles/978711/</link>\n\t\t\t<guid>https://lwn.net/Articles/978711/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>It has been four months since &lt;a\nhref=\"http://www.kroah.com/log/blog/2024/02/13/linux-is-a-cna/\"&gt;Greg\nKroah-Hartman&lt;/a&gt; and &lt;a\nhref=\"https://www.cve.org/Media/News/item/news/2024/02/13/kernel-org-Added-as-CNA\"&gt;MITRE&lt;/a&gt;\nannounced that the Linux kernel project had become its own CVE Numbering\nAuthority (CNA).  Since then, the Linux CNA Team has developed workflows\nand mechanisms to help manage the various tasks associated with this\nchallenge.  There does however, appear to be a lack of understanding among\ncommunity members of the processes and rules the team have been working\nwithin.  The principal aim of this article, written by a member of the\nLinux kernel CNA team, is to clarify how the team works and how kernel CVE\nnumbers are assigned.\n</description>\n\t\t\t<pubDate>Thu, 27 Jun 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>A capability set for user namespaces</title>\n\t\t\t<link>https://lwn.net/Articles/978846/</link>\n\t\t\t<guid>https://lwn.net/Articles/978846/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>&lt;a href=\"https://lwn.net/Articles/532593/\"&gt;User namespaces&lt;/a&gt; in Linux create an\nenvironment in which all privileges are granted, but their effect is\ncontained within the namespace; they have become an important tool for the\nimplementation of containers.  They have also become a significant source\nof worries for people who do not like the increased attack surface they\ncreate for the kernel.  Various attempts have been made to restrict that\nattack surface over the years; the latest is &lt;a\nhref=\"https://lwn.net/ml/all/20240609104355.442002-1-jcalmels@3xx0.net\"&gt;user namespace\ncapabilities&lt;/a&gt;, posted by Jonathan Calmels.\n</description>\n\t\t\t<pubDate>Thu, 04 Jul 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Rust for filesystems</title>\n\t\t\t<link>https://lwn.net/Articles/978738/</link>\n\t\t\t<guid>https://lwn.net/Articles/978738/</guid>\n\t\t\t<dc:creator>jake</dc:creator>\n\t\t\t<description>At the\n2024 &lt;a\nhref=\"https://events.linuxfoundation.org/lsfmmbpf/\"&gt;Linux Storage,\nFilesystem, Memory Management, and BPF Summit&lt;/a&gt;, Wedson Almeida Filho and\nKent Overstreet led a combined storage and filesystem session on using Rust\nfor Linux filesystems. Back in December 2023, Almeida had &lt;a\nhref=\"https://lwn.net/ml/linux-fsdevel/20231018122518.128049-1-wedsonaf@gmail.com/\"&gt;posted\nan RFC patch set&lt;/a&gt; with\nsome Rust abstractions for filesystems, which resulted in &lt;a\nhref=\"https://lwn.net/Articles/958072/\"&gt;some disagreement over the approach&lt;/a&gt;.  On the\nsame mid-May day as the session, he &lt;a\nhref=\"https://lwn.net/ml/all/20240514131711.379322-1-wedsonaf@gmail.com/\"&gt;posted&lt;/a&gt;\na second version of the RFC patches, which he wanted to discuss along with\nother Rust-related topics.\n</description>\n\t\t\t<pubDate>Thu, 04 Jul 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>The GhostBSD in the machine</title>\n\t\t\t<link>https://lwn.net/Articles/978837/</link>\n\t\t\t<guid>https://lwn.net/Articles/978837/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;&lt;a href=\"https://www.ghostbsd.org/\"&gt;GhostBSD&lt;/a&gt; is a\ndesktop-oriented operating system based on &lt;a\nhref=\"https://www.freebsd.org/\"&gt;FreeBSD&lt;/a&gt; and the &lt;a\nhref=\"https://mate-desktop.org/\"&gt;MATE Desktop Environment&lt;/a&gt;. The\ngoal of the project is to lower the barrier to entry of using FreeBSD\non a desktop or laptop system, and it largely succeeds at this. While it has a few rough edges\nthat make it hard to recommend for the average desktop user, it is\na fine choice for users who want a desktop with FreeBSD underpinnings\nsuch as the Z File System (ZFS), and the &lt;a\nhref=\"https://wiki.ghostbsd.org/index.php/Ports\"&gt;Ports&lt;/a&gt; (source) and &lt;a\nhref=\"https://wiki.ghostbsd.org/index.php/Pkg\"&gt;Packages&lt;/a&gt; (binary) software collections.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 04 Jul 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Finishing the conversion to the \"new\" mount API</title>\n\t\t\t<link>https://lwn.net/Articles/979166/</link>\n\t\t\t<guid>https://lwn.net/Articles/979166/</guid>\n\t\t\t<dc:creator>jake</dc:creator>\n\t\t\t<description>Eric Sandeen led a filesystem-track session at \nthe\n2024 &lt;a\nhref=\"https://events.linuxfoundation.org/lsfmmbpf/\"&gt;Linux Storage,\nFilesystem, Memory Management, and BPF Summit&lt;/a&gt; on completing the\nconversion of the existing kernel filesystems to use the &lt;a\nhref=\"https://lwn.net/Articles/759499/\"&gt;mount API&lt;/a&gt; that was &lt;a\nhref=\"https://lwn.net/Articles/787963/\"&gt;added for the 5.2 kernel&lt;/a&gt; in 2019.  That API is\ninvariably called the \"new\" API, which it &lt;i&gt;is&lt;/i&gt; when compared to the\nvenerable &lt;a \nhref=\"https://man7.org/linux/man-pages/man2/mount.2.html\"&gt;&lt;tt&gt;mount()&lt;/tt&gt;&lt;/a&gt;\nsystem call, but it has been available for five years or so at this point\nwithout really pushing its predecessor aside.  Sandeen wanted to discuss\nthe status of the conversion process and some other questions surrounding\nthe new API.\n</description>\n\t\t\t<pubDate>Thu, 04 Jul 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for June 27, 2024</title>\n\t\t\t<link>https://lwn.net/Articles/979084/</link>\n\t\t\t<guid>https://lwn.net/Articles/979084/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The LWN.net Weekly Edition for June 27, 2024 is available.\n</description>\n\t\t\t<pubDate>Thu, 04 Jul 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Direct-to-device networking</title>\n\t\t\t<link>https://lwn.net/Articles/979549/</link>\n\t\t\t<guid>https://lwn.net/Articles/979549/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>It has been nearly one year since &lt;a\nhref=\"https://lwn.net/ml/netdev/20230710223304.1174642-1-almasrymina@google.com/\"&gt;the\nfirst version&lt;/a&gt; of the device memory TCP patches was posted by Mina\nAlmasry.  Now on &lt;a\nhref=\"https://lwn.net/ml/all/20240625195407.1922912-1-almasrymina@google.com\"&gt;the 14th\nrevision&lt;/a&gt;, this series appears to be stabilizing.  Device memory TCP is\na specialized networking feature requiring a certain amount of setup, but\nit could provide a significant performance improvement for some\ndata-intensive applications.\n</description>\n\t\t\t<pubDate>Thu, 11 Jul 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Redox: An operating system in Rust</title>\n\t\t\t<link>https://lwn.net/Articles/979524/</link>\n\t\t\t<guid>https://lwn.net/Articles/979524/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nWith the\n&lt;a href=\"https://rust-for-linux.com/\"&gt;\nRust-for-Linux&lt;/a&gt; project starting to gain some ground, it is worth\nlooking at other operating systems that use Rust in their kernels. There\nare &lt;a href=\"https://github.com/flosse/rust-os-comparison\"&gt;\nmany&lt;/a&gt; attempts to use\nRust for operating system development, but &lt;a href=\"https://redox-os.org/\"&gt;Redox&lt;/a&gt;\nmay be the most complete.\nRedox is an MIT-licensed microkernel and corresponding user space, designed\naround concepts taken from\n&lt;a href=\"https://en.wikipedia.org/wiki/Plan_9_from_Bell_Labs\"&gt;\nPlan 9&lt;/a&gt;. While nowhere near being usable as a\nreplacement for Linux, it already provides a graphical user interface and\n&lt;a href=\"https://www.redox-os.org/faq/#what-programs-can-redox-run\"&gt;\nthe ability to run many POSIX programs&lt;/a&gt;.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 11 Jul 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for July 4, 2024</title>\n\t\t\t<link>https://lwn.net/Articles/979852/</link>\n\t\t\t<guid>https://lwn.net/Articles/979852/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The LWN.net Weekly Edition for July 4, 2024 is available.\n</description>\n\t\t\t<pubDate>Thu, 11 Jul 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Mount notifications</title>\n\t\t\t<link>https://lwn.net/Articles/980330/</link>\n\t\t\t<guid>https://lwn.net/Articles/980330/</guid>\n\t\t\t<dc:creator>jake</dc:creator>\n\t\t\t<description>There are a handful of extensions to the \"new\" mount API that Christian\nBrauner wanted to discuss as part of a filesystem session at \nthe\n2024 &lt;a\nhref=\"https://events.linuxfoundation.org/lsfmmbpf/\"&gt;Linux Storage,\nFilesystem, Memory Management, and BPF Summit&lt;/a&gt;.  In the session, though,\nthe only one that he got to was a followup to last year's &lt;a\nhref=\"https://lwn.net/Articles/932648/\"&gt;discussion on mount-operation monitoring&lt;/a&gt;.\nThere is a need for user-space programs to be able to follow mount\noperations (e.g. mount and unmount) that happen in the system, especially\nfor tools like container\nmanagers or systemd.\n</description>\n\t\t\t<pubDate>Thu, 11 Jul 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Debian debate over tag2upload reaches compromise</title>\n\t\t\t<link>https://lwn.net/Articles/978324/</link>\n\t\t\t<guid>https://lwn.net/Articles/978324/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;Debian's proposed &lt;a\nhref=\"https://salsa.debian.org/dgit-team/dgit/-/blob/master/TAG2UPLOAD-DESIGN.txt\"&gt;tag2upload\nservice&lt;/a&gt; would be worthy of an article\neven if it wasn't so contentious; tag2upload promises a\nstreamlined way for Debian developers using Git to upload packages to\nthe &lt;a href=\"https://wiki.debian.org/Services/Debian%20Archive\"&gt;Debian\nArchive&lt;/a&gt;. But tag2upload has been in limbo for\nyears due to disagreement and a communication breakdown between the team\nbehind tag2upload and the &lt;a\nhref=\"https://ftp-master.debian.org/\"&gt;ftpmasters&lt;/a&gt; team. It took the\nthreat of a &lt;a\nhref=\"https://www.debian.org/devel/constitution#item-4\"&gt;General\nResolution&lt;/a&gt; (GR), weeks of discussion, and more than\n1,000 emails to finally move forward.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 11 Jul 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>PostmarketOS: Linux for phones and more</title>\n\t\t\t<link>https://lwn.net/Articles/979522/</link>\n\t\t\t<guid>https://lwn.net/Articles/979522/</guid>\n\t\t\t<dc:creator>jake</dc:creator>\n\t\t\t<description>In 2016, Oliver Smith reached a point of frustration with the short\nlifespan of updates for his Android phone. Taking matters into his own\nhands, he began developing &lt;a\nhref=\"https://postmarketos.org\"&gt;postmarketOS&lt;/a&gt;, a Linux distribution for\nmobile phones. Eight years later, the &lt;a\nhref=\"https://wiki.postmarketos.org/wiki/Team_members\"&gt;core team and\ntrusted contributors&lt;/a&gt; have grown to twenty individuals, while the latest\nrelease, &lt;a\nhref=\"https://postmarketos.org/blog/2024/06/16/v24.06-release/\"&gt;v24.06&lt;/a&gt;,\nnow shows support for over 250&amp;nbsp;devices. Although postmarketOS isn't\nusable as a day-to-day phone operating system on all of them, it can also enable repurposing devices into compact servers or kiosk machines.\n</description>\n\t\t\t<pubDate>Thu, 11 Jul 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Eliminating indirect calls for security modules</title>\n\t\t\t<link>https://lwn.net/Articles/979683/</link>\n\t\t\t<guid>https://lwn.net/Articles/979683/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>Like many kernel subsystems, the Linux security module (LSM) subsystem\nmakes extensive use of indirect function calls.  Those calls, however, are\nincreasingly problematic, and the pressure to remove them has been growing. \nThe good news is that there is &lt;a\nhref=\"https://lwn.net/ml/all/20240629084331.3807368-1-kpsingh@kernel.org\"&gt;a patch\nseries&lt;/a&gt; from KP Singh that accomplishes that goal.  Its progress into\nthe mainline has been slow — this change was first &lt;a\nhref=\"https://lwn.net/ml/linux-security-module/20200820164753.3256899-1-jackmanb@chromium.org/\"&gt;proposed&lt;/a&gt;\nby Brendan Jackman and Paul Renauld in 2020 — and this work has been caught\nup in some wider controversies along the way, but it should be close to\nbeing ready.\n</description>\n\t\t\t<pubDate>Thu, 11 Jul 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Another try for getrandom() in the vDSO</title>\n\t\t\t<link>https://lwn.net/Articles/980447/</link>\n\t\t\t<guid>https://lwn.net/Articles/980447/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>Random numbers, it seems, can never be random enough, and they cannot be\ngenerated quickly enough.  The kernel's &lt;a\nhref=\"https://man7.org/linux/man-pages/man2/getrandom.2.html\"&gt;&lt;tt&gt;getrandom()&lt;/tt&gt;&lt;/a&gt;\nsystem call might, after years of discussion, be seen as sufficiently\nsecure by most users, but it is still a system call.  Linux system calls\nare relatively fast, but they are necessarily slower than calling a\nfunction directly.  In an attempt to speed the provision of secure random\ndata to user space, Jason Donenfeld has put together &lt;a\nhref=\"https://lwn.net/ml/all/20240703183115.1075219-1-Jason@zx2c4.com\"&gt;an\nimplementation of &lt;tt&gt;getrandom()&lt;/tt&gt;&lt;/a&gt; that lives in the &lt;a\nhref=\"https://man7.org/linux/man-pages/man7/vdso.7.html\"&gt;virtual dynamic\nshared object (vDSO) area&lt;/a&gt;.\n</description>\n\t\t\t<pubDate>Thu, 18 Jul 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Giving bootloaders the boot with nmbl</title>\n\t\t\t<link>https://lwn.net/Articles/979789/</link>\n\t\t\t<guid>https://lwn.net/Articles/979789/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;At &lt;a href=\"https://www.devconf.info/cz/\"&gt;DevConf.cz 2024&lt;/a&gt;,\nMarta Lewandowska gave a talk to discuss a\nnew approach for booting Linux systems, \"&lt;a\nhref=\"https://pretalx.com/devconf-cz-2024/talk/W3AVCT/\"&gt;No more boot\nloader: Please use the kernel instead&lt;/a&gt;\". The talk, &lt;a\nhref=\"https://www.youtube.com/watch?v=ywrSDLp926M\"&gt;available on\nYouTube&lt;/a&gt;, introduced a new project called nmbl (for \"no more bootloader\",\npronounced \"nimble\"). The idea is to get rid of bootloaders (e.g., \n&lt;a href=\"https://www.gnu.org/software/grub/\"&gt;GNU GRUB&lt;/a&gt;) with a\n&lt;a\nhref=\"https://uapi-group.org/specifications/specs/unified_kernel_image/\"&gt;Unified\nKernel Image&lt;/a&gt; (UKI) that removes the need for a separate bootloader\naltogether. It is early days for nmbl, currently the project is only\nbeing tested for use with virtual machines, but the idea is\ncompelling. If successful, nmbl could offer security, performance, and\nmaintenance benefits compared to GRUB and other separate bootloaders.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 18 Jul 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Improving pseudo filesystems</title>\n\t\t\t<link>https://lwn.net/Articles/981155/</link>\n\t\t\t<guid>https://lwn.net/Articles/981155/</guid>\n\t\t\t<dc:creator>jake</dc:creator>\n\t\t\t<description>The eventfs filesystem provides an interface to the tracepoints that are available\nto be used by various Linux tracing tools (e.g. ftrace, perf, uprobes,\netc.); it is meant to be a version of the tracefs filesystem that\ndynamically allocates its entries as needed.  The goal is to reduce the memory\nrequired for multiple instances of tracefs, as Steven Rostedt described in\na &lt;a href=\"https://lwn.net/Articles/895111/\"&gt;session&lt;/a&gt; at the 2022\n&lt;a\nhref=\"https://events.linuxfoundation.org/lsfmmbpf/\"&gt;Linux Storage,\nFilesystem, Memory Management, and BPF Summit&lt;/a&gt;.  He returned to the 2024\nedition of the summit to talk further about how to make pseudo (or virtual)\nfilesystems, such as tracefs/eventfs, more like regular Linux filesystems,\nwhere the directory entries (dentries) and inodes are only created (and\ncached) as needed.\n</description>\n\t\t\t<pubDate>Thu, 18 Jul 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for July 11, 2024</title>\n\t\t\t<link>https://lwn.net/Articles/980654/</link>\n\t\t\t<guid>https://lwn.net/Articles/980654/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The LWN.net Weekly Edition for July 11, 2024 is available.\n</description>\n\t\t\t<pubDate>Thu, 18 Jul 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Sxmo: a text-centric mobile user interface</title>\n\t\t\t<link>https://lwn.net/Articles/981320/</link>\n\t\t\t<guid>https://lwn.net/Articles/981320/</guid>\n\t\t\t<dc:creator>jake</dc:creator>\n\t\t\t<description>&lt;a href=\"https://sxmo.org\"&gt;Sxmo&lt;/a&gt;, short for \"Simple X Mobile\", is described on its web site as \"&lt;q&gt;a\nminimalist environment for Linux mobile devices&lt;/q&gt;\"; it offers a menu-driven\ninterface that is controlled with the phone's hardware buttons. Sxmo enables the user\nto send SMS messages from a text editor and is entirely customizable with\nshell scripts. This peculiar mobile user interface significantly differs\nfrom the prevailing approach—but it works.\n</description>\n\t\t\t<pubDate>Thu, 18 Jul 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Reports from OSPM 2024, part 1</title>\n\t\t\t<link>https://lwn.net/Articles/981371/</link>\n\t\t\t<guid>https://lwn.net/Articles/981371/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The sixth edition of the &lt;a\nhref=\"https://retis.sssup.it/ospm-summit/\"&gt;Power Management and Scheduling\nin the Linux Kernel (OSPM) Summit&lt;/a&gt; took place on May 30-31 2024, and was\ngraciously hosted by the &lt;a href=\"https://www.irit.fr/en/home\"&gt;Institut de\nRecherche en Informatique de Toulouse (IRIT)&lt;/a&gt; in Toulouse, France.  This\nis the first of a series of articles describing the discussions held at\nOSPM 2024; topics covered include latency hints, energy-aware scheduling,\nChromeOS, and user-space schedulers.\n</description>\n\t\t\t<pubDate>Thu, 25 Jul 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Nix alternatives and spinoffs</title>\n\t\t\t<link>https://lwn.net/Articles/981124/</link>\n\t\t\t<guid>https://lwn.net/Articles/981124/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nSince the\n&lt;a href=\"https://lwn.net/Articles/970824/\"&gt;\ndisagreements&lt;/a&gt; that led to Eelco Dolstra\n&lt;a href=\"https://lwn.net/Articles/971973/\"&gt;\nstepping down from the NixOS\nFoundation board&lt;/a&gt;, there have been a number of projects forked from or inspired\nby\n&lt;a href=\"https://nixos.org/\"&gt;\nNix&lt;/a&gt; that have stepped up to compete with it. Two months on, some of these\nprojects are now well-established enough to look at what they have to offer and\nhow they compare to each other. Overall, users have a number of good options to\nchoose from, whether they're seeking a compatible replacement for Nix (the\nconfiguration language and package manager) or NixOS (the Linux distribution),\nor something that takes the same ideas in a different direction.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 25 Jul 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>A look at Linux Mint 22</title>\n\t\t\t<link>https://lwn.net/Articles/981130/</link>\n\t\t\t<guid>https://lwn.net/Articles/981130/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;Linux Mint has &lt;a\nhref=\"https://blog.linuxmint.com/?p=4725\"&gt;released&lt;/a&gt; a beta of its\nnext long-term-support (LTS) release, Linux&amp;nbsp;Mint&amp;nbsp;22 (code-named \"Wilma\"), based on &lt;a href=\"https://lwn.net/Articles/971143/\"&gt;Ubuntu&amp;nbsp;24.04&lt;/a&gt;. Aside from the standard\nsoftware updates that come with any major upgrade, some of Wilma's\nlargest selling points are what it &lt;em&gt;doesn't&lt;/em&gt; have; namely snap\npackages or GNOME applications that have broken theming on non-GNOME\ndesktops like Mint's Cinnamon desktop.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 25 Jul 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Hierarchical storage management, fanotify, FUSE, and more</title>\n\t\t\t<link>https://lwn.net/Articles/981392/</link>\n\t\t\t<guid>https://lwn.net/Articles/981392/</guid>\n\t\t\t<dc:creator>jake</dc:creator>\n\t\t\t<description>Amir Goldstein led a filesystem-track session at the 2024 &lt;a\nhref=\"https://events.linuxfoundation.org/lsfmmbpf/\"&gt;Linux Storage,\nFilesystem, Memory Management, and BPF Summit&lt;/a&gt; on his project to build a\n&lt;a\nhref=\"https://en.wikipedia.org/wiki/Hierarchical_storage_management\"&gt;hierarchical\nstorage management&lt;/a&gt; (HSM) system using &lt;a\nhref=\"https://www.kernel.org/doc/html/latest/admin-guide/filesystem-monitoring.html\"&gt;fanotify&lt;/a&gt;.\nThe idea is to monitor file access in order to determine when to retrieve\ncontent from non-local storage (e.g. the cloud).  The session was a\nfollow-up to last year's &lt;a href=\"https://lwn.net/Articles/932415/\"&gt;introduction to the\nproject&lt;/a&gt;, which covered some of the problems he had encountered; this\nyear, he\nwas updating attendees on its status and progress, along with some other\nproblem areas that he wanted to discuss.\n</description>\n\t\t\t<pubDate>Thu, 25 Jul 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>SUSE asks openSUSE to consider name change</title>\n\t\t\t<link>https://lwn.net/Articles/981018/</link>\n\t\t\t<guid>https://lwn.net/Articles/981018/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;&lt;a href=\"https://www.suse.com/\"&gt;SUSE&lt;/a&gt; has, in a somewhat clumsy\nfashion, asked &lt;a href=\"https://www.opensuse.org/\"&gt;openSUSE&lt;/a&gt;\nto consider rebranding to clear up confusion over the\nrelationship between SUSE the company and openSUSE as a community\nproject. That, in turn, has opened conversations about revising\nopenSUSE governance and more. So far, there is no concrete proposal to\nconsider, no timeline, or even a process for the community and company\nto follow to make any decisions.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 25 Jul 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Changing the filesystem-maintenance model</title>\n\t\t\t<link>https://lwn.net/Articles/981854/</link>\n\t\t\t<guid>https://lwn.net/Articles/981854/</guid>\n\t\t\t<dc:creator>jake</dc:creator>\n\t\t\t<description>Maintenance of the kernel is a difficult, often thankless, task; how it is\nbeing handled, the role of maintainers, burnout, and so on are recurring\ntopics at kernel-related conferences.  At\nthe 2024 &lt;a\nhref=\"https://events.linuxfoundation.org/lsfmmbpf/\"&gt;Linux Storage,\nFilesystem, Memory Management, and BPF Summit&lt;/a&gt;, Josef Bacik and\nChristian Brauner led a session to discuss possible changes to the way\nfilesystems are maintained, though Bacik took the lead role (and the podium).  There are a number of interrelated topics,\nincluding merging new filesystems, removing old ones, making and testing changes\nthroughout the filesystem tree, and more.\n</description>\n\t\t\t<pubDate>Thu, 25 Jul 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for July 18, 2024</title>\n\t\t\t<link>https://lwn.net/Articles/981628/</link>\n\t\t\t<guid>https://lwn.net/Articles/981628/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The LWN.net Weekly Edition for July 18, 2024 is available.\n</description>\n\t\t\t<pubDate>Thu, 25 Jul 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Restricting execution of scripts — the third approach</title>\n\t\t\t<link>https://lwn.net/Articles/982085/</link>\n\t\t\t<guid>https://lwn.net/Articles/982085/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The kernel will not consent to execute just any file that happens to be\nsitting in a filesystem; there are formalities, such as the checking of\nexecute permission and consulting security policies, to get through first.\nOn some systems, security policies have been established to limit execution\nto specifically approved programs.  But there are files that are not\nexecuted directly by the kernel; these include scripts fed to language\ninterpreters like Python, Perl, or a shell.  An attacker who is able to get\nan interpreter to execute a file may be able to bypass a system's security\npolicies.  Mickaël Salaün has been working on closing this hole for years;\nthe &lt;a href=\"https://lwn.net/ml/all/20240704190137.696169-1-mic@digikod.net\"&gt;latest\nattempt&lt;/a&gt; takes the form of a new flag to the &lt;a\nhref=\"https://man7.org/linux/man-pages/man2/execveat.2.html\"&gt;&lt;tt&gt;execveat()&lt;/tt&gt;&lt;/a&gt;\nsystem call.\n</description>\n\t\t\t<pubDate>Thu, 01 Aug 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>A look inside the BPF verifier</title>\n\t\t\t<link>https://lwn.net/Articles/982077/</link>\n\t\t\t<guid>https://lwn.net/Articles/982077/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nLWN has covered BPF\n&lt;a href=\"https://lwn.net/1998/0212/#kernel\"&gt;\nsince its initial introduction to Linux&lt;/a&gt;, usually through the lens of the newest\ndevelopments; this can make it hard to view the whole picture. BPF provides\na way to extend a running kernel, without having to recompile and reboot.\nIt does this in a safe way, so that malicious BPF\nprograms cannot crash a running kernel, thanks to the BPF verifier. So how does\nthe verifier actually work, what are its limits, and how has it changed since\nthe early days of BPF?\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 01 Aug 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Imitation, not artificial, intelligence</title>\n\t\t\t<link>https://lwn.net/Articles/982289/</link>\n\t\t\t<guid>https://lwn.net/Articles/982289/</guid>\n\t\t\t<dc:creator>jake</dc:creator>\n\t\t\t<description>Simon Willison, co-creator of the popular &lt;a\nhref=\"https://www.djangoproject.com/\"&gt;Django web framework&lt;/a&gt; for Python,\ngave a keynote presentation at &lt;a\nhref=\"https://us.pycon.org/2024/\"&gt;PyCon&amp;nbsp;2024&lt;/a&gt; on a topic that is\nunrelated to that work: large language models (LLMs).\nThe topic grew out of some other work that he is doing on &lt;a\nhref=\"https://datasette.io/\"&gt;Datasette&lt;/a&gt;, which is a Python-based\n\"&lt;q&gt;tool for exploring and publishing data&lt;/q&gt;\".  The talk was a look\nbeyond the hype to try to discover what useful things you can actually do\ntoday using these models.  Unsurprisingly, there were some\ncautionary notes from Willison, as well.\n</description>\n\t\t\t<pubDate>Thu, 01 Aug 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for July 25, 2024</title>\n\t\t\t<link>https://lwn.net/Articles/982336/</link>\n\t\t\t<guid>https://lwn.net/Articles/982336/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The LWN.net Weekly Edition for July 25, 2024 is available.\n</description>\n\t\t\t<pubDate>Thu, 01 Aug 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Large folios, swap, and FS-Cache</title>\n\t\t\t<link>https://lwn.net/Articles/982887/</link>\n\t\t\t<guid>https://lwn.net/Articles/982887/</guid>\n\t\t\t<dc:creator>jake</dc:creator>\n\t\t\t<description>David Howells wanted to discuss swap handling in light of multi-page folios\nin a combined storage, filesystem, and memory-management session at\nthe 2024 &lt;a\nhref=\"https://events.linuxfoundation.org/lsfmmbpf/\"&gt;Linux Storage,\nFilesystem, Memory Management, and BPF Summit&lt;/a&gt;.  Swapping has always been\ndone with a one-to-one mapping of memory pages to swap slots, he said, but\nswapping multi-page folios breaks that assumption.  He wondered if it would\nmake sense to use filesystem techniques to track swapped-out folios.\n</description>\n\t\t\t<pubDate>Thu, 01 Aug 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>The rest of the 6.11 merge window</title>\n\t\t\t<link>https://lwn.net/Articles/982605/</link>\n\t\t\t<guid>https://lwn.net/Articles/982605/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The release of &lt;a\nhref=\"https://lwn.net/ml/all/CAHk-=wiyNokz0d3b=GRORij=mGvwoYHy=+bv6m2Hu_VqNdg66g@mail.gmail.com/\"&gt;6.11-rc1&lt;/a&gt;\nmarked the end of the 6.11 merge window on July&amp;nbsp;28.  By that time,\n12,102 non-merge changesets had been pulled into the mainline repository;\nabout 8,000 of those came in after &lt;a href=\"https://lwn.net/Articles/982034/\"&gt;the\nfirst-half summary&lt;/a&gt; was written.  Quite a few significant changes were\nto be found in those changesets; there is also one big change that did not\nmake it.\n</description>\n\t\t\t<pubDate>Thu, 08 Aug 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for August 1, 2024</title>\n\t\t\t<link>https://lwn.net/Articles/983267/</link>\n\t\t\t<guid>https://lwn.net/Articles/983267/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The LWN.net Weekly Edition for August 1, 2024 is available.\n</description>\n\t\t\t<pubDate>Thu, 08 Aug 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Showing up for Python in GNOME</title>\n\t\t\t<link>https://lwn.net/Articles/983897/</link>\n\t\t\t<guid>https://lwn.net/Articles/983897/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;A few years ago, &lt;a\nhref=\"https://pygobject.gnome.org/\"&gt;PyGObject&lt;/a&gt;&amp;mdash;the Python\npackage that provides bindings for &lt;a\nhref=\"https://www.gtk.org/\"&gt;GTK&lt;/a&gt; and &lt;a\nhref=\"https://www.gnome.org/\"&gt;GNOME&lt;/a&gt; applications&amp;mdash;was not\nfaring particularly well. Several maintainers had left the project and its\ndevelopment was not keeping pace with changes in GTK. At this year's\nGUADEC, Dan Yeaw presented a &lt;a\nhref=\"https://events.gnome.org/event/209/contributions/757/\"&gt;talk&lt;/a&gt;\nabout the project's decline, improvements in the last year, and his\nexperience getting involved in an undermaintained project.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 08 Aug 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Famfs: a filesystem interface to shareable memory</title>\n\t\t\t<link>https://lwn.net/Articles/983105/</link>\n\t\t\t<guid>https://lwn.net/Articles/983105/</guid>\n\t\t\t<dc:creator>jake</dc:creator>\n\t\t\t<description>At the 2024 &lt;a href=\"https://events.linuxfoundation.org/lsfmmbpf/\"&gt;Linux\nStorage, Filesystem, Memory Management, and BPF Summit&lt;/a&gt;, John Groves led\na session on famfs, which is a filesystem he has developed that uses the\nkernel's &lt;a\nhref=\"https://docs.kernel.org/filesystems/dax.html\"&gt;direct-access (DAX)&lt;/a&gt;\nmechanism to access memory that is shareable between hosts.  The discussion\nwas aimed at whether a different approach should be taken and, in\nparticular, whether FUSE should be used instead of implementing as an\nin-kernel filesystem.  As noted in the &lt;a\nhref=\"https://lwn.net/ml/all/20240229002020.85535-1-john@groves.net/\"&gt;thread&lt;/a&gt; about his\nproposal for an LSFMM+BPF session, and the mailing-list discussions on &lt;a\nhref=\"https://lwn.net/ml/all/cover.1708709155.git.john%40groves.net/\"&gt;the first&lt;/a&gt; and &lt;a\nhref=\"https://lwn.net/ml/linux-fsdevel/cover.1714409084.git.john@groves.net/\"&gt;second\nversion&lt;/a&gt; of his patch set, there is some skepticism that a new in-kernel\nfilesystem is warranted for the use case.\n</description>\n\t\t\t<pubDate>Thu, 08 Aug 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Pulling Linux up by its bootstraps</title>\n\t\t\t<link>https://lwn.net/Articles/983340/</link>\n\t\t\t<guid>https://lwn.net/Articles/983340/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nA &lt;a href=\"https://lwn.net/Articles/841797/\"&gt;\nbootstrappable build&lt;/a&gt; is one that builds existing\nsoftware from scratch — for example, building GCC without relying on an existing\ncopy of GCC. In 2023, the Guix project\n&lt;a href=\"https://lwn.net/Articles/930650/\"&gt;announced&lt;/a&gt; that the project had reduced the size\nof the binary bootstrap seed needed to build its operating system to just 357-bytes —\nnot counting the Linux kernel required to run the build process. Now, the\n&lt;a href=\"https://github.com/fosslinux/live-bootstrap\"&gt;live-bootstrap&lt;/a&gt; project\nhas gone a step further and removed the need for an existing kernel at all.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 08 Aug 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Maximal min() and max()</title>\n\t\t\t<link>https://lwn.net/Articles/983965/</link>\n\t\t\t<guid>https://lwn.net/Articles/983965/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>Like many projects written in C, the kernel makes extensive use of the C\npreprocessor; indeed, the kernel's use is rather more extensive than most.\nThe preprocessor famously has a number of sharp edges associated with it.\nOne might not normally think of increased compilation time as one of them,\nthough.  It turns out that some changes to a couple of conceptually simple\npreprocessor macros — &lt;tt&gt;min()&lt;/tt&gt; and &lt;tt&gt;max()&lt;/tt&gt; — led to some truly\npathological, but hidden, behavior where those macros were used.\n</description>\n\t\t\t<pubDate>Thu, 15 Aug 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for August 8, 2024</title>\n\t\t\t<link>https://lwn.net/Articles/984216/</link>\n\t\t\t<guid>https://lwn.net/Articles/984216/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The LWN.net Weekly Edition for August 8, 2024 is available.\n</description>\n\t\t\t<pubDate>Thu, 15 Aug 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>CRIB: checkpoint/restore in BPF</title>\n\t\t\t<link>https://lwn.net/Articles/984313/</link>\n\t\t\t<guid>https://lwn.net/Articles/984313/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The desire for the ability to checkpoint a process — to record its state in\na form that can be restarted at a future time — on Linux is almost as old as\nLinux itself.  See, for example, &lt;a\nhref=\"https://lwn.net/1998/0528/a/checkpoint.html\"&gt;this announcement&lt;/a&gt; of a checkpoint\nproject that appeared in LWN in 1998.  While working solutions exist, they\ncan be somewhat fragile and difficult to use; it is not surprising that\nsome people are interested in finding a better alternative.  A current\neffort goes by the name CRIB,\nfor Checkpoint/Restore in (naturally) BPF.  It is far from clear that CRIB\nwill replace the existing solutions, but it is an interesting look at a\ndifferent way of solving the problem.\n</description>\n\t\t\t<pubDate>Thu, 15 Aug 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Tracing the source of filesystem errors</title>\n\t\t\t<link>https://lwn.net/Articles/984556/</link>\n\t\t\t<guid>https://lwn.net/Articles/984556/</guid>\n\t\t\t<dc:creator>jake</dc:creator>\n\t\t\t<description>There are lots of places in the kernel where an &lt;tt&gt;EINVAL&lt;/tt&gt; can be\nreturned to user space, but it is often unclear what the actual underlying\nproblem is because the &lt;a\nhref=\"https://man7.org/linux/man-pages/man3/errno.3.html\"&gt;&lt;tt&gt;errno&lt;/tt&gt;&lt;/a&gt;\nerror codes are too generic.  That is the problem that Miklos Szeredi\nwanted to discuss in a filesystem session that he led remotely at the 2024 &lt;a\nhref=\"https://events.linuxfoundation.org/lsfmmbpf/\"&gt;Linux Storage,\nFilesystem, Memory Management, and BPF Summit&lt;/a&gt;.  He would like to help\nthose who are trying to debug problems trace where in the kernel a\nparticular error code is being generated.\n</description>\n\t\t\t<pubDate>Thu, 15 Aug 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Endless OS aimed at educational and offline environments</title>\n\t\t\t<link>https://lwn.net/Articles/984086/</link>\n\t\t\t<guid>https://lwn.net/Articles/984086/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\n&lt;a href=\"https://www.endlessos.org/os\"&gt;\nEndless OS&lt;/a&gt; is a Linux distribution with a focus on improving access to\neducational tools by providing a simple-to-manage, full-featured desktop for\neducators and students — one that works offline, with minimal maintenance. The\ndistribution also aims to be suitable for older devices, in order to promote access to\ncomputers by ensuring those systems remain usable.\nIn pursuit of those goals, it makes some unusual technical\nchoices. But what makes the distribution really shine is its curated collection\nof software and educational resources.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 22 Aug 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Distinguishing Debian testing from unstable</title>\n\t\t\t<link>https://lwn.net/Articles/984635/</link>\n\t\t\t<guid>https://lwn.net/Articles/984635/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>Sometimes, the smallest changes create the longest discussions.  As a case\nin point, a proposal to make a one-line change in an informational text\nfile on systems running the Debian unstable distribution has blown up into\nan interminable and sometimes unfriendly debate.  At its core, though, this\ndiscussion comes down to a seemingly simple question: should a program be\nable to determine whether it is running on a Debian testing or unstable\nsystem?\n</description>\n\t\t\t<pubDate>Thu, 22 Aug 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for August 15, 2024</title>\n\t\t\t<link>https://lwn.net/Articles/984770/</link>\n\t\t\t<guid>https://lwn.net/Articles/984770/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The LWN.net Weekly Edition for August 15, 2024 is available.\n</description>\n\t\t\t<pubDate>Thu, 22 Aug 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Standards for use of unsafe Rust in the kernel</title>\n\t\t\t<link>https://lwn.net/Articles/982868/</link>\n\t\t\t<guid>https://lwn.net/Articles/982868/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nRust is intended to let programmers write safer code.\nBut compilers are\nnot omniscient, and writing Rust code that interfaces with hardware (or that\nworks with memory outside of Rust's lifetime paradigm) requires, at\nsome point, the programmer's assurance that some operations are permissible. Benno Lossin\n&lt;a href=\"https://lwn.net/ml/all/20240717221133.459589-1-benno.lossin@proton.me/\"&gt;\nsuggested adding\nsome more documentation&lt;/a&gt; to\n&lt;a href=\"https://rust-for-linux.com/\"&gt;\nthe Rust-for-Linux project&lt;/a&gt; clarifying the\nstandards for commenting uses of &lt;tt&gt;unsafe&lt;/tt&gt; in kernel code. There's general\nagreement that such standards are necessary, but less agreement on exactly when\nit is appropriate to use &lt;tt&gt;unsafe&lt;/tt&gt;.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 22 Aug 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Changes coming in PostgreSQL 17</title>\n\t\t\t<link>https://lwn.net/Articles/984599/</link>\n\t\t\t<guid>https://lwn.net/Articles/984599/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nThe\n&lt;a href=\"https://www.postgresql.org/\"&gt;\nPostgreSQL&lt;/a&gt; project has\n&lt;a href=\"https://www.postgresql.org/about/news/postgresql-164-158-1413-1316-1220-and-17-beta-3-released-2910/\"&gt;\nreleased&lt;/a&gt; beta\nversions of PostgreSQL 17 containing several interesting security and usability\nimprovements, alongside the usual performance improvements and bug fixes. If the\nrelease proceeds according to the usual timeline, the full release of version 17\nis expected in September or October.\nThe most important changes are in what PostgreSQL does when a database\nsupervisor has their credentials revoked, and added\nsupport for incremental database backups.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 22 Aug 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Zettlr: note-taking and publishing with Markdown</title>\n\t\t\t<link>https://lwn.net/Articles/984502/</link>\n\t\t\t<guid>https://lwn.net/Articles/984502/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;&lt;a href=\"https://daringfireball.net/projects/markdown/\"&gt;Markdown&lt;/a&gt; editors are a dime a dozen. Cheaper than that, actually,\nsince many of them are open&amp;#8209;source software. Despite the sheer number of\noptions, finding an editor that has all of the features that one might want can\nbe tricky. For some users, &lt;a href=\"https://www.zettlr.com/\"&gt;Zettlr&lt;/a&gt;\nmight be the right tool. It is a &lt;a\nhref=\"https://en.wikipedia.org/wiki/WYSIWYM\"&gt;What You See is What You\nMean&lt;/a&gt; (WYSIWYM) editor that stores its work locally as plain Markdown\nfiles. The project is billed as a \"&lt;q&gt;one-stop publication\nworkbench&lt;/q&gt;\", and is suitable for writing anything from blog posts to\nacademic papers, maintaining a personal journal, or keeping notes in a &lt;a\nhref=\"https://en.wikipedia.org/wiki/Zettelkasten\"&gt;Zettlekasten&lt;/a&gt;. It\nis simple to get started with, but rewards deeper exploration and\ncustomization.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 22 Aug 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Memory-management: tiered memory, huge pages, and EROFS</title>\n\t\t\t<link>https://lwn.net/Articles/984839/</link>\n\t\t\t<guid>https://lwn.net/Articles/984839/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The kernel's memory-management developers have been busy in recent times;\nit can be hard to keep up with all that has been happening in this core\narea.  In an attempt to catch up, here is a look at recent work\naffecting tiered-memory systems, underutilized huge pages, and duplicated\nfile data in the Enhanced Read-Only Filesystem (EROFS).\n</description>\n\t\t\t<pubDate>Thu, 29 Aug 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Custom string formatters in Python</title>\n\t\t\t<link>https://lwn.net/Articles/985346/</link>\n\t\t\t<guid>https://lwn.net/Articles/985346/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nPython has had\n&lt;a href=\"https://lwn.net/Articles/656898/\"&gt;formatted string literals&lt;/a&gt;\n(&lt;span style=\"white-space:nowrap\"&gt;f-strings&lt;/span&gt;), a syntactic shorthand for building\nstrings, since 2015. Recently, Jim Baker, Guido van Rossum, and Paul Everitt have\nproposed\n&lt;a href=\"https://peps.python.org/pep-0750/\"&gt;\nPEP 750&lt;/a&gt; (\"Tag Strings For Writing Domain-Specific Languages\") which would\ngeneralize and expand that mechanism to provide Python library writers with additional\nflexibility. Reactions to the proposed change were somewhat positive, although\nthere was a good deal of discussion of (and opposition to)\nthe PEP's inclusion of lazy evaluation of template parameters.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 29 Aug 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Per-call-site slab caches for heap-spraying protection</title>\n\t\t\t<link>https://lwn.net/Articles/986174/</link>\n\t\t\t<guid>https://lwn.net/Articles/986174/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>One tactic often used by attackers set on compromising a system is &lt;a\nhref=\"https://en.wikipedia.org/wiki/Heap_spraying\"&gt;heap spraying&lt;/a&gt;; in\nshort, the attacker fills as much of the heap as possible with crafted data\nin the hope of getting the target system to use that data in a bad way.  If\nheap spraying can be blocked, attackers will lose an important tool.  The\nkernel has some heap-spraying defenses now, including the &lt;a\nhref=\"https://lwn.net/Articles/965837/\"&gt;dedicated bucket allocator&lt;/a&gt; merged for the\nupcoming 6.11 release, but its author, Kees Cook, thinks that more can be\ndone.\n</description>\n\t\t\t<pubDate>Thu, 29 Aug 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Modernizing openSUSE installation with Agama</title>\n\t\t\t<link>https://lwn.net/Articles/974969/</link>\n\t\t\t<guid>https://lwn.net/Articles/974969/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;Linux installers receive a disproportionate amount of attention\ncompared to the amount of time that most users spend with them. Ideally,\na user spends only a few minutes using the installer, versus years using\nthe distribution after it is installed. Yet, the installer sets the\nfirst impression, and if it fails to do its job, little else matters.\nInstallers also have to continually evolve to keep pace with new\nhardware, changes in distribution packaging (such as image-based Linux\ndistributions), and so forth. Along those lines, the SUSE team that maintains the\nvenerable &lt;a href=\"https://yast.opensuse.org/\"&gt;YaST&lt;/a&gt; installer has\ndecided it's time to start (almost) fresh with a new Linux installer\nproject, called &lt;a href=\"https://github.com/openSUSE/agama\"&gt;Agama&lt;/a&gt;,\nfor new projects. YaST is not going away as an administration tool,\nbut it is likely to be relieved of installer duties at some point.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 29 Aug 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for August 22, 2024</title>\n\t\t\t<link>https://lwn.net/Articles/985783/</link>\n\t\t\t<guid>https://lwn.net/Articles/985783/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The LWN.net Weekly Edition for August 22, 2024 is available.\n</description>\n\t\t\t<pubDate>Thu, 29 Aug 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Python subinterpreters and free-threading</title>\n\t\t\t<link>https://lwn.net/Articles/985041/</link>\n\t\t\t<guid>https://lwn.net/Articles/985041/</guid>\n\t\t\t<dc:creator>jake</dc:creator>\n\t\t\t<description>At\n&lt;a\nhref=\"https://us.pycon.org/2024/\"&gt;PyCon&amp;nbsp;2024&lt;/a&gt; in Pittsburgh,\nPennsylvania, Anthony Shaw looked at the various kinds of parallelism\navailable to Python programs.  There have been two major developments on\nthe parallel-execution front over the last few years, with the effort to\nprovide &lt;a href=\"https://lwn.net/Articles/820424/\"&gt;subinterpreters&lt;/a&gt;, each with its own\nglobal interpreter lock (GIL), along with the work to &lt;a\nhref=\"https://lwn.net/Articles/940780/\"&gt;remove the GIL entirely&lt;/a&gt;.  In the talk, he\nexplored the two approaches to try to give attendees a sense of how to make\nthe right choice for their applications.\n</description>\n\t\t\t<pubDate>Thu, 29 Aug 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>A new version of modversions</title>\n\t\t\t<link>https://lwn.net/Articles/986892/</link>\n\t\t\t<guid>https://lwn.net/Articles/986892/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The &lt;tt&gt;genksyms&lt;/tt&gt; tool has long been buried deeply within the kernel's\nbuild system; it is one of the two C-code parsers shipped with the kernel\n(the other being &lt;a\nhref=\"https://elixir.bootlin.com/linux/v6.11-rc4/source/scripts/kernel-doc\"&gt;the\nhorrifying &lt;tt&gt;kernel-doc&lt;/tt&gt; script&lt;/a&gt;).  It is a key part of how the\nkernel's module-loading infrastructure works.  While &lt;tt&gt;genksyms&lt;/tt&gt; has\nquietly done its job for decades, that period may soon be coming to an end.\nIt would seem that &lt;tt&gt;genksyms&lt;/tt&gt; is not up to the task of handling Rust\ncode, so Sami Tolvanen is &lt;a\nhref=\"https://lwn.net/ml/all/20240815173903.4172139-21-samitolvanen@google.com/\"&gt;proposing\na new tool&lt;/a&gt; to handle this task going forward.\n</description>\n\t\t\t<pubDate>Thu, 05 Sep 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>NIST finalizes post-quantum encryption standards</title>\n\t\t\t<link>https://lwn.net/Articles/973231/</link>\n\t\t\t<guid>https://lwn.net/Articles/973231/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nOn August 13, the US National Institute of Standards and Technology (NIST)\n&lt;a href=\"https://csrc.nist.gov/news/2024/postquantum-cryptography-fips-approved\"&gt;\npublished&lt;/a&gt; the final form of its new post-quantum cryptographic standards. One\nkey-exchange mechanism and two digital-signature schemes are now officially\nsanctioned by the institute. Adopting the new standards should be fairly\npainless for most developers, but the overhead added by the schemes could pose\nchallenges for some applications.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 05 Sep 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Debian discusses principles for package maintenance</title>\n\t\t\t<link>https://lwn.net/Articles/986480/</link>\n\t\t\t<guid>https://lwn.net/Articles/986480/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;Achieving consensus among Debian Developers on technical topics and\nprocedures can be, to put it mildly, challenging. Nevertheless, that\nis exactly what Otto Kekäläinen has tried to do with a &lt;a\nhref=\"https://salsa.debian.org/dep-team/deps/-/raw/798bfa5a1e1609afd4e48ee20aff80a82bcd4a2f/web/deps/dep18.mdwn\"&gt;proposal&lt;/a&gt; that\nwould set up \"&lt;q&gt;principles all Debian packages should follow to be\nopen for collaboration in package maintenance&lt;/q&gt;\". In the near term,\nit seems unlikely that the proposal will be accepted, but the\ndiscussion may be effective at improving collaboration nonetheless.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 05 Sep 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>MemHive: sharing immutable data between Python subinterpreters</title>\n\t\t\t<link>https://lwn.net/Articles/987238/</link>\n\t\t\t<guid>https://lwn.net/Articles/987238/</guid>\n\t\t\t<dc:creator>jake</dc:creator>\n\t\t\t<description>Immutable data makes concurrent access easier, since it\neliminates the data-race conditions that can plague multithreaded programs. At\n&lt;a\nhref=\"https://us.pycon.org/2024/\"&gt;PyCon&amp;nbsp;2024&lt;/a&gt;, Yury Selivanov\nintroduced an early-stage project called &lt;a\nhref=\"https://github.com/edgedb/memhive\"&gt;MemHive&lt;/a&gt;, which uses Python\n&lt;a href=\"https://lwn.net/Articles/820424/\"&gt;subinterpreters&lt;/a&gt; and immutable data to\novercome the problems of thread serialization that are caused by the\nlanguage's Global Interpreter Lock (GIL).  Recent &lt;a\nhref=\"https://lwn.net/Articles/985041/\"&gt;developments in the Python world&lt;/a&gt; have opened\nup different strategies for avoiding the longstanding problems with the\nGIL.\n</description>\n\t\t\t<pubDate>Thu, 05 Sep 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for August 29, 2024</title>\n\t\t\t<link>https://lwn.net/Articles/986853/</link>\n\t\t\t<guid>https://lwn.net/Articles/986853/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The LWN.net Weekly Edition for August 29, 2024 is available.\n</description>\n\t\t\t<pubDate>Thu, 05 Sep 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for September 5, 2024</title>\n\t\t\t<link>https://lwn.net/Articles/987605/</link>\n\t\t\t<guid>https://lwn.net/Articles/987605/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The LWN.net Weekly Edition for September 5, 2024 is available.\n</description>\n\t\t\t<pubDate>Thu, 12 Sep 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Whither the Apple AGX graphics driver?</title>\n\t\t\t<link>https://lwn.net/Articles/988438/</link>\n\t\t\t<guid>https://lwn.net/Articles/988438/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>Much of the early Rust code for the kernel has taken the form of\nreimplementations of existing drivers as a proof of concept.  One project,\nthough, is entirely new: the driver for Apple GPUs written by Asahi Lina.\nThis driver has shipped with &lt;a href=\"https://asahilinux.org/\"&gt;Asahi\nLinux&lt;/a&gt; for some time and, by many accounts, is stable, usable, and a\nshining example of how Rust can be used in a complex kernel subsystem.\nThat driver remains outside of the mainline kernel, though, and merging\ncurrently looks like a distant prospect.  The reasons for that state of\naffairs highlight some of the difficulties inherent in integrating a new\nlanguage (and its associated development style) into the Linux kernel.\n</description>\n\t\t\t<pubDate>Thu, 12 Sep 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for September 12, 2024</title>\n\t\t\t<link>https://lwn.net/Articles/988984/</link>\n\t\t\t<guid>https://lwn.net/Articles/988984/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The LWN.net Weekly Edition for September 12, 2024 is available.\n</description>\n\t\t\t<pubDate>Thu, 19 Sep 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>A mess in the Python community</title>\n\t\t\t<link>https://lwn.net/Articles/988894/</link>\n\t\t\t<guid>https://lwn.net/Articles/988894/</guid>\n\t\t\t<dc:creator>jake</dc:creator>\n\t\t\t<description>The Python community has been roiled, to a certain extent, by an &lt;a\nhref=\"https://discuss.python.org/t/three-month-suspension-for-a-core-developer/60250\"&gt;action\ntaken by\nthe steering council&lt;/a&gt; (SC): the three-month suspension\nof a unnamed—weirdly—Python core developer.  Tim Peters is the developer\nin question, as he has &lt;a\nhref=\"https://www.theregister.com/2024/08/09/core_python_developer_suspended_coc/\"&gt;acknowledged&lt;/a&gt;,\nthough it could easily be deduced from the SC message. Peters has been\ninvolved in the\nproject from its early days and, among many other things, is the author of\n&lt;a href=\"https://peps.python.org/pep-0020/\"&gt;PEP&amp;nbsp;20&lt;/a&gt; (\"The Zen of\nPython\").  The suspension was due to violations of the project's &lt;a\nhref=\"https://policies.python.org/python.org/code-of-conduct/\"&gt;code of\nconduct&lt;/a&gt; that stem from the discussion around a somewhat controversial &lt;a\nhref=\"https://discuss.python.org/t/for-your-consideration-proposed-bylaws-changes-to-improve-our-membership-experience/55696\"&gt;set\nof proposed changes to the bylaws&lt;/a&gt; for the &lt;a\nhref=\"https://www.python.org/psf-landing/\"&gt;Python Software Foundation&lt;/a&gt;\n(PSF) back in mid-June.\n</description>\n\t\t\t<pubDate>Thu, 19 Sep 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>The trouble with iowait</title>\n\t\t\t<link>https://lwn.net/Articles/989272/</link>\n\t\t\t<guid>https://lwn.net/Articles/989272/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>CPU scheduling is a challenging job; since it inherently requires making\nguesses about what the demands on the system will be in the future, it\nremains reliant on heuristics, despite ongoing efforts to remove them.\nSome of those heuristics take special note of tasks that are (or appear to\nbe) waiting for fast I/O operations.  There is some unhappiness, though,\nwith how this factor is used, leading to a couple of patches taking rather\ndifferent approaches to improve the situation.\n</description>\n\t\t\t<pubDate>Thu, 19 Sep 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Debating ifupdown replacements for Debian trixie</title>\n\t\t\t<link>https://lwn.net/Articles/989055/</link>\n\t\t\t<guid>https://lwn.net/Articles/989055/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;Debian does not have an official way to configure\nnetworking. Instead, it has &lt;a\nhref=\"https://wiki.debian.org/NetworkConfiguration\"&gt;four&lt;/a&gt;\nrecommended ways to configure networking, one of which is the\nvenerable &lt;a\nhref=\"https://salsa.debian.org/debian/ifupdown\"&gt;ifupdown&lt;/a&gt;, which\nhas been part of Debian since the turn of the century and is showing its\nage. A conversation about its maintainability and possible replacement with &lt;a\nhref=\"https://github.com/ifupdown-ng/ifupdown-ng\"&gt;ifupdown&amp;#8209;ng&lt;/a&gt; has\nled to discussions about the default network-management tools for\nDebian \"&lt;a href=\"https://www.debian.org/releases/trixie/\"&gt;trixie&lt;/a&gt;\"\n(Debian 13, which is expected in 2025) and beyond. No route to consensus\nhas been found, yet.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 26 Sep 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>The RCU API, 2024 edition</title>\n\t\t\t<link>https://lwn.net/Articles/988638/</link>\n\t\t\t<guid>https://lwn.net/Articles/988638/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>Read-copy-update (RCU) is a synchronization mechanism that was added to the\nLinux kernel in October 2002.  RCU is most frequently used as a &lt;a\nhref=\"https://linuxfoundation.org/webinars/unraveling-rcu-usage-mysteries/\"&gt;replacement\nfor reader-writer locking&lt;/a&gt;, but is also used in &lt;a\nhref=\"https://linuxfoundation.org/webinars/unraveling-rcu-usage-mysteries-additional-use-cases/\"&gt;a\nnumber of other ways&lt;/a&gt;.  This article covers recent changes to the RCU\nAPI; it was contributed by Paul McKenney, Boqun Feng, Frederic Weisbecker,\nJoel Fernandes, Neeraj Upadhyay, and Uladzislau Rezki.\n</description>\n\t\t\t<pubDate>Thu, 26 Sep 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Some 6.11 development statistics</title>\n\t\t\t<link>https://lwn.net/Articles/989528/</link>\n\t\t\t<guid>https://lwn.net/Articles/989528/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The 6.11 kernel was &lt;a\nhref=\"https://lwn.net/ml/all/CAHk-=whVpSHw9+4ov=oLevfv8sPYbh59T_9VKif-6Vqkr41jQA@mail.gmail.com/\"&gt;released&lt;/a&gt;\non September&amp;nbsp;15 after a typical nine-week development cycle.  This\nrelease integrates 13,890 non-merge changesets, so it was a moderately busy\ncycle, slightly more so that 6.10 was.  With a new release comes a new round\nof development statistics; read on for the details.\n</description>\n\t\t\t<pubDate>Thu, 26 Sep 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Fedora evicts WolfSSL</title>\n\t\t\t<link>https://lwn.net/Articles/989687/</link>\n\t\t\t<guid>https://lwn.net/Articles/989687/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;The &lt;a href=\"https://docs.fedoraproject.org/en-US/fesco/\"&gt;Fedora\nEngineering Steering Committee&lt;/a&gt; (FESCo) has voted to\nimmediately remove the &lt;a href=\"https://www.wolfssl.com\"&gt;WolfSSL&lt;/a&gt; package from all of Fedora's\nrepositories due to its maintainer failing to gain approval to package\na new cryptography library for Fedora. Its brief travels through\nFedora's package system highlights gaps in documentation, as well as\nin the package&amp;#8209;review process. The good news is that this may stir\nFedora to improve its documentation and revive a formal security\nteam.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 26 Sep 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Vanilla OS 2: an immutable distribution to run all software</title>\n\t\t\t<link>https://lwn.net/Articles/989629/</link>\n\t\t\t<guid>https://lwn.net/Articles/989629/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;&lt;a href=\"https://vanillaos.org\"&gt;Vanilla OS&lt;/a&gt;, an immutable desktop\nLinux distribution designed for developers and advanced users, has\nrecently published its &lt;a\nhref=\"https://vanillaos.org/blog/article/2024-07-28/vanilla-os-2-orchid---stable-release\"&gt;2.0\n\"Orchid\" release&lt;/a&gt;. Previously based on Ubuntu, Vanilla OS has now\nshifted to Debian unstable (\"sid\"). The release has made it easier to\ninstall software from other distributions' package repositories, and it\nis now theoretically possible to install and run Android applications as well.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 26 Sep 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for September 19, 2024</title>\n\t\t\t<link>https://lwn.net/Articles/989982/</link>\n\t\t\t<guid>https://lwn.net/Articles/989982/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The LWN.net Weekly Edition for September 19, 2024 is available.\n</description>\n\t\t\t<pubDate>Thu, 26 Sep 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>RPM 4.20 is coming</title>\n\t\t\t<link>https://lwn.net/Articles/988927/</link>\n\t\t\t<guid>https://lwn.net/Articles/988927/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;The &lt;a href=\"https://rpm.org/\"&gt;RPM Package Manager&lt;/a&gt; (RPM) project is\nnearing the release of RPM&amp;nbsp;4.20, the last major planned update for the RPM 4.x\nseries. It has few user-facing changes, but\nseveral additions and enhancements for developers&amp;mdash;as well as\nsome small incompatibilities that will likely require RPM packagers to\nrevise their &lt;a\nhref=\"https://rpm-packaging-guide.github.io/#what-is-a-spec-file\"&gt;spec\nfiles&lt;/a&gt;. 4.20 will be rolling out to many users soon, in\nFedora&amp;nbsp;41, which is scheduled for October. RPM&amp;nbsp;6.0 is\nalready in the works, with a new package format and opening the door\nto enabling C++ use in the RPM codebase.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 03 Oct 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Best practices for error handling in kernel Rust</title>\n\t\t\t<link>https://lwn.net/Articles/990489/</link>\n\t\t\t<guid>https://lwn.net/Articles/990489/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nDirk Behme led a session discussing the use of Rust's question-mark operator in\nthe kernel at Kangrejos 2024. He was particularly concerned with the concept of\n\"silent\" errors that don't print any messages to the console.\nOther attendees were less convinced that this was a problem, but his presentation\nsparked a lot of discussion about whether the Rust-for-Linux project could\nimprove error handling in kernel Rust code.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 03 Oct 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>The 6.12 merge window begins</title>\n\t\t\t<link>https://lwn.net/Articles/990750/</link>\n\t\t\t<guid>https://lwn.net/Articles/990750/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>As of this writing, 6,778 non-merge changesets have been pulled into the\nmainline kernel for the 6.12 release — over half of the work that had been\nstaged in linux-next prior to the opening of the merge window.  There has\nbeen a lot of refactoring and cleanup work this time around, but also some\nsignificant changes.  Read on for a summary of the first half of the 6.12\nmerge window.\n</description>\n\t\t\t<pubDate>Thu, 03 Oct 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Tools for kernel developers</title>\n\t\t\t<link>https://lwn.net/Articles/991033/</link>\n\t\t\t<guid>https://lwn.net/Articles/991033/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>Konstantin Ryabitsev started a session on development tooling at the 2024\nMaintainers Summit by saying that he does not want to be a \"wrecking ball\".\nIf a given workflow is working for people, he does not want to try to force\nany sort of change.  That said, he has ideas for how he can continue his\nwork on providing better tooling for the development community.\n</description>\n\t\t\t<pubDate>Thu, 03 Oct 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Committing to Rust in the kernel</title>\n\t\t\t<link>https://lwn.net/Articles/991062/</link>\n\t\t\t<guid>https://lwn.net/Articles/991062/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The project to enable the writing of kernel code in Rust has been underway\nfor several years, and each kernel release includes more Rust code.  Even\nso, some developers have expressed frustration at the time it takes to get\nnew functionality merged, and an air of uncertainty still hangs over\nthe project.  At the 2024 Maintainers Summit, Miguel Ojeda led a discussion\non the status of Rust in the kernel and whether the time had come to stop\nconsidering it an experimental project.  There were not answers to all of the\nquestions, but it seems clear that Rust in the kernel will continue\nsteaming ahead.\n</description>\n\t\t\t<pubDate>Thu, 03 Oct 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>KDE sets its goals through 2026</title>\n\t\t\t<link>https://lwn.net/Articles/990604/</link>\n\t\t\t<guid>https://lwn.net/Articles/990604/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;Almost a decade ago &lt;a href=\"https://ev.kde.org/\"&gt;KDE&amp;nbsp;e.V.&lt;/a&gt;,\nthe non-profit organization that supports &lt;a\nhref=\"http://kde.org/\"&gt;KDE&lt;/a&gt;, started a &lt;a href=\"https://community.kde.org/Goals/Goals_Process\"&gt;process&lt;/a&gt; for\nselecting &lt;a href=\"https://kde.org/goals/\"&gt;goals&lt;/a&gt; to help the community unite behind a common vision for where the\nproject should go in the near future. KDE\nrecently wrapped up its 2022-2024 &lt;a\nhref=\"https://community.kde.org/Goals\"&gt;cycle&lt;/a&gt; and announced the goals for 2024-2026 at &lt;a\nhref=\"https://akademy.kde.org/2024/\"&gt;Akademy&lt;/a&gt; on September&amp;nbsp;7, in Würzburg,\nGermany. This time around, KDE will be looking to streamline its\napplication-development experience, improve support for input devices,\nand bring in new contributors.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 03 Oct 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>What the Nova GPU driver needs</title>\n\t\t\t<link>https://lwn.net/Articles/990736/</link>\n\t\t\t<guid>https://lwn.net/Articles/990736/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nIn March, Danilo Krummrich &lt;a href=\"https://lwn.net/Articles/966129\"&gt;announced&lt;/a&gt; the new\nNova GPU driver — a successor to Nouveau for controlling NVIDIA GPUs.\nAt Kangrejos 2024, Krummrich gave a\npresentation about what it is, why it's needed, and where it's\ngoing next. Hearing about the needs of the driver provoked extended discussion\non related topics, including what level of safety is reasonable to expect from\ndrivers, given that they must interact with the hardware.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 03 Oct 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for September 26, 2024</title>\n\t\t\t<link>https://lwn.net/Articles/990791/</link>\n\t\t\t<guid>https://lwn.net/Articles/990791/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The LWN.net Weekly Edition for September 26, 2024 is available.\n</description>\n\t\t\t<pubDate>Thu, 03 Oct 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Linus and Dirk on succession, Rust, and more</title>\n\t\t\t<link>https://lwn.net/Articles/990534/</link>\n\t\t\t<guid>https://lwn.net/Articles/990534/</guid>\n\t\t\t<dc:creator>jake</dc:creator>\n\t\t\t<description>The \"Linus and Dirk show\" has been a fixture at Open Source Summit for as\nlong as the conference has existed; it started back when the conference was\ncalled LinuxCon.  Since Linus Torvalds famously does not like to give\ntalks, as he said during this year's edition at &lt;a href=\"https://events.linuxfoundation.org/open-source-summit-europe/\"&gt;Open Source Summit Europe&lt;/a&gt;\n(OSSEU) in Vienna, Austria, he and Dirk Hohndel have been sitting down for an\ninformal chat on a wide range of topics as a keynote session.  That way,\nTorvalds does not need to prepare, but also does not know what topics\nwill be brought up, which makes it \"so much more fun for one of us\", Hohndel\nsaid with a grin.   The topics this time ranged from the just-released&amp;nbsp;6.11\nkernel and the upcoming Linux&amp;nbsp;6.12, through Rust for the kernel, to the recurring topic of succession and\nthe graying of Linux maintainers.\n</description>\n\t\t\t<pubDate>Thu, 03 Oct 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Sched_ext at LPC 2024</title>\n\t\t\t<link>https://lwn.net/Articles/991205/</link>\n\t\t\t<guid>https://lwn.net/Articles/991205/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The &lt;a href=\"https://lwn.net/Articles/922405/\"&gt;extensible scheduler class (sched_ext)&lt;/a&gt;\nenables the implementation of CPU schedulers as a set of BPF programs\nloaded from user space; it first hit the mailing lists in late 2022.\nSched_ext has engendered its share of controversy since, but is currently\nslated to be part of the 6.12 kernel release.  At the 2024 &lt;a\nhref=\"https://lpc.events/\"&gt;Linux Plumbers Conference&lt;/a&gt;, the growing\nsched_ext community held one of its first public gatherings; sched_ext\nwould appear to have launched a new burst of creativity in scheduler\ndesign.\n</description>\n\t\t\t<pubDate>Thu, 10 Oct 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Getting PCI driver abstractions upstream</title>\n\t\t\t<link>https://lwn.net/Articles/990918/</link>\n\t\t\t<guid>https://lwn.net/Articles/990918/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nDanilo Krummrich gave a talk at Kangrejos 2024 focusing on the question of how\nthe Rust-for-Linux project could improve at getting device and driver\nabstractions upstream. As a case study, he used some of his recent work that\nattempts to make it possible to write a PCI driver entirely in Rust. There\nwasn't time to go into as much detail as he would have liked, but he did\ndemonstrate that it is possible to interface with the kernel's module loader in\na way that is much harder to\nscrew up than the current standard approach in C.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 10 Oct 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>The WordPress mess</title>\n\t\t\t<link>https://lwn.net/Articles/991906/</link>\n\t\t\t<guid>https://lwn.net/Articles/991906/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;&lt;a href=\"https://wordpress.org/\"&gt;WordPress&lt;/a&gt; is the &lt;a href=\"https://w3techs.com/technologies/history_overview/content_management\"&gt;world's most\npopular&lt;/a&gt; open&amp;#8209;source blogging and content&amp;#8209;management platform. In its\n20&amp;#8209;plus years of existence, WordPress has been something of a poster\nchild for open source, similar to Linux and Firefox. It introduced the\nconcept of open source to millions of bloggers, small&amp;#8209;business owners,\nand others who have deployed WordPress to support their web&amp;#8209;publishing\nneeds. Unfortunately, it is now in the spotlight due to an increasingly\nugly dispute between two companies, &lt;a\nhref=\"https://automattic.com/\"&gt;Automattic&lt;/a&gt; and &lt;a\nhref=\"https://wpengine.com/\"&gt;WP&amp;nbsp;Engine&lt;/a&gt;, that has spilled over into\nthe WordPress community.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 10 Oct 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>The rest of the 6.12 merge window</title>\n\t\t\t<link>https://lwn.net/Articles/991301/</link>\n\t\t\t<guid>https://lwn.net/Articles/991301/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>Linus Torvalds &lt;a\nhref=\"https://lwn.net/ml/all/CAHk-=wiwVOCZsC6a4dLdb1UjL2fS_CnLNjrPL0XGFbDd9C26Cg@mail.gmail.com/\"&gt;released\n6.12-rc1&lt;/a&gt; and closed the 6.12 merge window on September&amp;nbsp;29; at that\npoint, 11,260 non-merge change sets had been pulled into the mainline for\nthe 6.12 release.  That is the lowest number of merge-window changes since\n5.17-rc1 in January 2022, which brought in 11,068 changesets.  Nonetheless,\n6.12 brings a number of interesting changes, many of which were included in\nthe roughly 4,500 changes merged since &lt;a href=\"https://lwn.net/Articles/990750/\"&gt;the\nsummary of the first half of the 6.12 merge window&lt;/a&gt; was written.\n</description>\n\t\t\t<pubDate>Thu, 10 Oct 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for October 3, 2024</title>\n\t\t\t<link>https://lwn.net/Articles/991771/</link>\n\t\t\t<guid>https://lwn.net/Articles/991771/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The LWN.net Weekly Edition for October 3, 2024 is available.\n</description>\n\t\t\t<pubDate>Thu, 10 Oct 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Inkscape 1.4 coming soon</title>\n\t\t\t<link>https://lwn.net/Articles/991732/</link>\n\t\t\t<guid>https://lwn.net/Articles/991732/</guid>\n\t\t\t<dc:creator>jake</dc:creator>\n\t\t\t<description>The open-source vector-graphics editor, &lt;a\nhref=\"https://inkscape.org/\"&gt;Inkscape&lt;/a&gt;, is expected to release &lt;a\nhref=\"https://wiki.inkscape.org/wiki/Release_notes/1.4\"&gt;version&amp;nbsp;1.4&lt;/a&gt;\nin October. The release represents an evolutionary step for the program, which\nbrings new features, user-interface improvements, new and improved\nfile-format support, and important changes to the code base. The changes in\nthis release should improve the user experience for both casual and\nprofessional designers, and make Inkscape more compatible with proprietary\nvector-graphics software, including Adobe Illustrator and Affinity\nDesigner.\n</description>\n\t\t\t<pubDate>Thu, 10 Oct 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>BTF, Rust, and the kernel toolchain</title>\n\t\t\t<link>https://lwn.net/Articles/991719/</link>\n\t\t\t<guid>https://lwn.net/Articles/991719/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\n&lt;a href=\"https://www.kernel.org/doc/html/latest/bpf/btf.html\"&gt;\nBPF Type Format&lt;/a&gt; (BTF),\nBPF's debugging information format, has undergone rapid evolution to match\nthe evolving needs of BPF programs. José Marchesi spoke at Kangrejos about some\nof that work — and how it could impact Rust, specifically. He discussed debug\ninformation, kernel-specific relocations, and the planned changes to kernel\nstack unwinding. Each of these will require some amount of work to fully\nsupport in Rust, but preliminary signs look promising.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 10 Oct 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>An update on gccrs development</title>\n\t\t\t<link>https://lwn.net/Articles/991199/</link>\n\t\t\t<guid>https://lwn.net/Articles/991199/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>One concern that has often been expressed about the Rust language is that\nthere is only one compiler for it.  That makes it hard to say what the\nstandard version of the language is and restricts the architectures that\ncan be targeted by Rust code to those that the available compiler supports.\nAdding a Rust frontend to GCC would do much to address those concerns; at\nthe &lt;a href=\"https://gcc.gnu.org/wiki/cauldron2024\"&gt;2024 GNU Tools\nCauldron&lt;/a&gt;, Pierre-Emmanuel Patry gave an update on the state of that\nwork and what its objectives are.\n</description>\n\t\t\t<pubDate>Thu, 10 Oct 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Coping with complex cameras</title>\n\t\t\t<link>https://lwn.net/Articles/992411/</link>\n\t\t\t<guid>https://lwn.net/Articles/992411/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>Cameras were never the simplest of devices for Linux to support; they have\na wide range of operating parameters and can generate high rates of data.\nIn recent years, though, they have become increasingly complex, stressing\nthe ability of the kernel's &lt;a\nhref=\"https://docs.kernel.org/userspace-api/media/index.html\"&gt;media\nsubsystem&lt;/a&gt; to manage them.  At the 2024 &lt;a\nhref=\"https://lpc.events/\"&gt;Linux Plumbers Conference&lt;/a&gt;, developers from\nthat subsystem and beyond gathered to discuss the state of affairs and how\ncomplex camera devices should be supported in the future.\n</description>\n\t\t\t<pubDate>Thu, 17 Oct 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Smart pointers for the kernel</title>\n\t\t\t<link>https://lwn.net/Articles/992055/</link>\n\t\t\t<guid>https://lwn.net/Articles/992055/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nRust has a plethora of smart-pointer types, including reference-counted\npointers, which have special support in the compiler to make them\neasier to use. The Rust-for-Linux project would like to reap those same benefits\nfor its smart pointers, which need to be written by hand to conform to\nthe\n&lt;a href=\"https://lwn.net/Articles/718628/\"&gt;\nLinux kernel\nmemory model&lt;/a&gt;. Xiangfei Ding\npresented at Kangrejos about the work to enable custom\nsmart pointers to function the same as built-in smart pointers.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 17 Oct 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>ClassicPress: WordPress without the block editor</title>\n\t\t\t<link>https://lwn.net/Articles/992219/</link>\n\t\t\t<guid>https://lwn.net/Articles/992219/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;The &lt;a href=\"https://lwn.net/Articles/991906/\"&gt;recent WordPress\ncontroversy&lt;/a&gt; is not the first time there's been tension between the\n&lt;a\nhref=\"https://wordpress.org/\"&gt;WordPress&lt;/a&gt; community, the interests of &lt;a\nhref=\"https://automattic.com/\"&gt;Automattic&lt;/a&gt; as a business, and Matt\nMullenweg's leadership as WordPress's benevolent dictator for\nlife (BDFL). In particular, Mullenweg's focus on pushing WordPress to use a new\n\"editing experience\" called &lt;a\nhref=\"https://wordpress.org/gutenberg/\"&gt;Gutenberg&lt;/a&gt; caused significant\nfriction&amp;mdash;and led to the &lt;a\nhref=\"https://www.classicpress.net/\"&gt;ClassicPress&lt;/a&gt; fork. Users who\nwant to preserve the \"classic\" WordPress experience without straying\ntoo far from the WordPress fold may want to look into ClassicPress.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 17 Oct 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for October 10, 2024</title>\n\t\t\t<link>https://lwn.net/Articles/992718/</link>\n\t\t\t<guid>https://lwn.net/Articles/992718/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The LWN.net Weekly Edition for October 10, 2024 is available.\n</description>\n\t\t\t<pubDate>Thu, 17 Oct 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Improving bindgen for the kernel</title>\n\t\t\t<link>https://lwn.net/Articles/992693/</link>\n\t\t\t<guid>https://lwn.net/Articles/992693/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\n&lt;a href=\"https://rust-lang.github.io/rust-bindgen/\"&gt;\nBindgen&lt;/a&gt; is a widely used tool that automatically generates Rust bindings from C\nheaders. The\n&lt;a href=\"https://rust-for-linux.com/\"&gt;\nRust-for-Linux&lt;/a&gt; project uses it to create some of\nthe bindings between Rust code and the rest of the kernel. John Baublitz\npresented at Kangrejos about the improvements that he has made to the tool in\norder to make the generated bindings easier to use, including improved support\nfor macros, bitfields, and enums.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 17 Oct 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>The Open Source Pledge: peer pressure to pay maintainers</title>\n\t\t\t<link>https://lwn.net/Articles/993073/</link>\n\t\t\t<guid>https://lwn.net/Articles/993073/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;In the early days of open source, it was a struggle to get companies\nto accept the concept and trust its development model.\nNow, companies have few qualms about using it, but do tend to &lt;a\nhref=\"https://www.goodtechthings.com/oss-sos/\"&gt;take open source and\nthose who maintain it for granted&lt;/a&gt;. The struggle now is to find ways\nto compensate producers of the software, sustain the open&amp;#8209;source\ncommons, and avoid burning out maintainers. The &lt;a\nhref=\"https://opensourcepledge.com/\"&gt;Open Source Pledge&lt;/a&gt; project is\nan effort to persuade companies to pay maintainers by making it a social\nnorm. On October&amp;nbsp;8, the project is launching a marketing campaign to raise\nawareness and try to get a larger conversation started around paying\nmaintainers.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 17 Oct 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Efficient Rust tracepoints</title>\n\t\t\t<link>https://lwn.net/Articles/992455/</link>\n\t\t\t<guid>https://lwn.net/Articles/992455/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nAlice Ryhl has been working to enable\n&lt;a href=\"https://www.kernel.org/doc/html/latest/trace/tracepoints.html\"&gt;\ntracepoints&lt;/a&gt; — which are widely used\nthroughout the kernel — to be seamlessly placed in Rust code as well. She spoke\nabout her approach at Kangrejos. Her\n&lt;a href=\"https://lwn.net/ml/all/20241001-tracepoint-v9-0-1ad3b7d78acb@google.com/\"&gt;\npatch set&lt;/a&gt;\nenables efficient use of static\ntracepoints, but supporting dynamic tracepoints will take some additional effort.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 17 Oct 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Debian's \"secret\" sauce</title>\n\t\t\t<link>https://lwn.net/Articles/990177/</link>\n\t\t\t<guid>https://lwn.net/Articles/990177/</guid>\n\t\t\t<dc:creator>jake</dc:creator>\n\t\t\t<description>While Debian's \"sauce\" is not actually all that secret, it is not particularly\nwell-known either, Samuel Henrique said at the start of his &lt;a\nhref=\"https://debconf24.debconf.org/\"&gt;DebConf24&lt;/a&gt; talk.  There is a lot\nof software-engineering effort that has been put in place by the\ndistribution in order to create and maintain its releases, but \"&lt;q&gt;loads of\npeople are not aware&lt;/q&gt;\" of it.  That may be due to the fact that all of\nthat is\nnot really documented anywhere in a central location that he can just point\nsomeone to.  Recognizing that is what led him to give the talk;\nhopefully it will be a \"&lt;q&gt;first step toward&lt;/q&gt;\" helping solve the problem.\n</description>\n\t\t\t<pubDate>Thu, 24 Oct 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>WordPress retaliation impacts community</title>\n\t\t\t<link>https://lwn.net/Articles/993895/</link>\n\t\t\t<guid>https://lwn.net/Articles/993895/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;It is too early to say what the outcome will be in the &lt;a\nhref=\"https://lwn.net/Articles/991906/\"&gt;ongoing fight&lt;/a&gt; between &lt;a\nhref=\"https://automattic.com/\"&gt;Automattic&lt;/a&gt; and &lt;a\nhref=\"https://wpengine.com/\"&gt;WP&amp;nbsp;Engine&lt;/a&gt;, but the &lt;a\nhref=\"https://wordpress.org\"&gt;WordPress&lt;/a&gt; community at large is already the\nloser. Automattic founder and CEO Matt Mullenweg has been using\nhis control of the project, and the WordPress.org infrastructure, to\npunish WP&amp;nbsp;Engine and remove some dissenting contributors from discussion\nchannels. Most recently, Mullenweg has instituted a hostile fork of a\nWP&amp;nbsp;Engine plugin and the forked plugin is replacing the original\nvia WordPress updates.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 24 Oct 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Two pidfd tweaks: PIDFD_GET_INFO and PIDFD_SELF</title>\n\t\t\t<link>https://lwn.net/Articles/992991/</link>\n\t\t\t<guid>https://lwn.net/Articles/992991/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The pidfd mechanism, which uses file descriptors to refer to processes in\nan unambiguous and race-free way, &lt;a href=\"https://lwn.net/Articles/773459/\"&gt;was first\nintroduced&lt;/a&gt; in 2018.  Since then, the interface has &lt;a\nhref=\"https://lwn.net/Articles/794707/\"&gt;gained a number of new features&lt;/a&gt;, but \ndevelopment has slowed over time as the interface has matured.  There are,\nhowever, a couple of patches in circulation that are meant to make working\nwith pidfds simpler in some situations.\n</description>\n\t\t\t<pubDate>Thu, 24 Oct 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for October 17, 2024</title>\n\t\t\t<link>https://lwn.net/Articles/993610/</link>\n\t\t\t<guid>https://lwn.net/Articles/993610/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The LWN.net Weekly Edition for October 17, 2024 is available.\n</description>\n\t\t\t<pubDate>Thu, 24 Oct 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Using LKMM atomics in Rust</title>\n\t\t\t<link>https://lwn.net/Articles/993785/</link>\n\t\t\t<guid>https://lwn.net/Articles/993785/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nRust, like C, has its own memory model describing how concurrent access to the\nsame data by multiple threads can behave.\nThe Linux kernel, however, has its own\nideas. The\n&lt;a href=\"https://lwn.net/Articles/718628/\"&gt;\nLinux kernel memory model&lt;/a&gt; (LKMM) is subtly different from both the\nstandard C memory model and Rust's model.\nAt Kangrejos, Boqun Feng gave a presentation about the\nneed to reconcile the memory models used by Rust and the kernel,\nincluding a few potential avenues for doing so. While\nno consensus was reached, it is an area of active discussion.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 24 Oct 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Zapping pointers out of thin air</title>\n\t\t\t<link>https://lwn.net/Articles/993484/</link>\n\t\t\t<guid>https://lwn.net/Articles/993484/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nPaul McKenney gave a presentation at Kangrejos this year that wasn't (directly)\nrelated to Rust. Instead, he spoke about the work he has been doing in concert\nwith many other contributors on improving the handling of subtle concurrency\nproblems in C++.\nAlthough he cautioned that his talk was only an overview, and not a\nsubstitute for reading the relevant papers, he hoped that the things the C++\ncommunity is working on would be of interest to the Rust developers present as\nwell, and potentially inform future work on the language. McKenney's talk was,\nas is his style, full of subtle examples of weird multithreaded behavior.\nInterested readers may wish to refer to\n&lt;a href=\"https://kangrejos.com/2024/Lifetime-End%20Pointer%20Zap%20&amp;amp;%20How%20to%20Avoid%20OOTA%20Without%20Really%20Trying.pdf\"&gt;\nhis slides&lt;/a&gt; in an attempt to follow along.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 24 Oct 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Toward safe transmutation in Rust</title>\n\t\t\t<link>https://lwn.net/Articles/994334/</link>\n\t\t\t<guid>https://lwn.net/Articles/994334/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nCurrently in Rust, there is no efficient and safe way to turn an array of bytes\ninto a structure that corresponds to the array. Changing that was the topic of\nJack Wrenn's talk this year at\n&lt;a href=\"https://rustconf.com\"&gt;\nRustConf&lt;/a&gt;:\n&lt;a href=\"https://jack.wrenn.fyi/blog/safety-goggles-for-alchemists/\"&gt;\n\"Safety Goggles for Alchemists\"&lt;/a&gt;. The goal is to be able to \"transmute\" —\nRust's name for this kind of conversion — values into arbitrary user-defined\ntypes in a safer way. Wrenn justified the approach that the project has taken to\naccomplish this, and spoke about the future work required to stabilize it.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 31 Oct 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for October 24, 2024</title>\n\t\t\t<link>https://lwn.net/Articles/994575/</link>\n\t\t\t<guid>https://lwn.net/Articles/994575/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The LWN.net Weekly Edition for October 24, 2024 is available.\n</description>\n\t\t\t<pubDate>Thu, 31 Oct 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Free-software foundations face fundraising problems</title>\n\t\t\t<link>https://lwn.net/Articles/993665/</link>\n\t\t\t<guid>https://lwn.net/Articles/993665/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;In July, at the GNOME &lt;a\nhref=\"https://lwn.net/Articles/983203/\"&gt;annual general meeting&lt;/a&gt; (AGM),\nheld at &lt;a\nhref=\"https://foundation.gnome.org/2023/12/20/guadec-2024-in-denver-colorado/\"&gt;GUADEC\n2024&lt;/a&gt;,\nthe message from the GNOME Foundation board was that all was well,\nfinancially speaking. Not &lt;em&gt;great&lt;/em&gt;, but the foundation was on a\nbreak-even budget and expected to go into its next fiscal year with a\nsimilar budget and headcount. On October&amp;nbsp;7, however, the board &lt;a\nhref=\"https://foundation.gnome.org/2024/10/07/update-from-the-board-2024-10/\"&gt;announced&lt;/a&gt;\nthat it had had to make some cuts, including reducing its staff by\ntwo people. This is not, however, strictly a GNOME problem: similar\norganizations, such as the Python Software Foundation (PSF), KDE&amp;nbsp;e.V., \nand the Free Software Foundation Europe (FSFE) are seeing declines in\nfundraising while also being affected by inflation.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 31 Oct 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>A report from the 2024 Image-Based Linux Summit</title>\n\t\t\t<link>https://lwn.net/Articles/994704/</link>\n\t\t\t<guid>https://lwn.net/Articles/994704/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nThe Image-Based Linux Summit has by now established itself as a yearly event.\nFollowing on from &lt;a href=\"https://lwn.net/Articles/946526/\"&gt;last year's edition&lt;/a&gt;,\nthe third edition was held in Berlin on September&amp;nbsp;24, the\nday before\n&lt;a href=\"https://all-systems-go.io\"&gt;\nAll Systems Go!&amp;nbsp;2024&lt;/a&gt; (ASG). The purpose of this event is to gather\nstakeholders from various engineering groups and hold friendly but lively\ndiscussions around the topic of image-based Linux — that is, Linux distributions\nbased around immutable images, instead of mutable root filesystems.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 31 Oct 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>OSI readies controversial Open AI definition</title>\n\t\t\t<link>https://lwn.net/Articles/995159/</link>\n\t\t\t<guid>https://lwn.net/Articles/995159/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;The &lt;a href=\"https://opensource.org/\"&gt;Open Source Initiative&lt;/a&gt;\n(OSI) has been working on defining &lt;a\nhref=\"https://opensource.org/ai\"&gt;Open Source AI&lt;/a&gt;&amp;mdash;that is what\nconstitutes an AI system that can be used, studied, modified, and\nshared for any purpose&amp;mdash;for almost two\nyears. Its &lt;a\nhref=\"https://opensource.org/about/board-of-directors\"&gt;board&lt;/a&gt; will\nbe voting on the &lt;a href=\"https://opensource.org/ai/drafts/the-open-source-ai-definition-1-0-rc2\"&gt;Open Source AI Definition&lt;/a&gt; (OSAID) on Sunday,\nOctober&amp;nbsp;27, with the 1.0 version slated to be published on\nOctober&amp;nbsp;28. It is never possible to please &lt;em&gt;everyone&lt;/em&gt; in\nsuch an endeavor, and it would be folly to make that a goal. However,\na number of prominent figures in the open-source community have voiced\nconcerns that OSI is setting the bar too low with the OSAID&amp;mdash;which\nwill undo decades of community work to cajole vendors into adhering to\nor respecting the original &lt;a href=\"https://opensource.org/osd\"&gt;Open Source\nDefinition&lt;/a&gt; (OSD).&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 07 Nov 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>The performance of the Rust compiler</title>\n\t\t\t<link>https://lwn.net/Articles/995125/</link>\n\t\t\t<guid>https://lwn.net/Articles/995125/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nSparrow Li presented virtually at\n&lt;a href=\"https://rustconf.com\"&gt;\nRustConf&lt;/a&gt;&amp;nbsp;2024 about the current state of and\nfuture plans for the Rust compiler's performance. The compiler is relatively slow to compile\nlarge programs, although it has been getting better over time. The next big\nperformance improvement to come will be parallelizing the compiler's parsing,\ntype-checking, and related operations, but even after that, the project has\nseveral avenues left to explore.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 07 Nov 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for October 31, 2024</title>\n\t\t\t<link>https://lwn.net/Articles/995490/</link>\n\t\t\t<guid>https://lwn.net/Articles/995490/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The LWN.net Weekly Edition for October 31, 2024 is available.\n</description>\n\t\t\t<pubDate>Thu, 07 Nov 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>An update on Apple M1/M2 GPU drivers</title>\n\t\t\t<link>https://lwn.net/Articles/995383/</link>\n\t\t\t<guid>https://lwn.net/Articles/995383/</guid>\n\t\t\t<dc:creator>jake</dc:creator>\n\t\t\t<description>The kernel graphics driver for the Apple M1 and M2 GPUs is, rather\nfamously, written in Rust, but it has achieved conformance with\nvarious graphics standards, which is also noteworthy.  At the &lt;a\nhref=\"https://indico.freedesktop.org/event/6/\"&gt;X.Org Developers Conference\n(XDC)&amp;nbsp;2024&lt;/a&gt;, Alyssa Rosenzweig gave an update on the status of the\ndriver, along with some news about the kinds of games it can support (&lt;a\nhref=\"https://www.youtube.com/watch?v=TtLP5sAXYKo\"&gt;YouTube video&lt;/a&gt;, &lt;a href=\"https://indico.freedesktop.org/event/6/contributions/284/attachments/230/310/slides.pdf \"&gt;slides&lt;/a&gt;).\nThere has been lots of progress since her talk at XDC last year (&lt;a\nhref=\"https://www.youtube.com/watch?v=O36VFNdQHsE\"&gt;YouTube video&lt;/a&gt;),\nwith, of course, still more to come.\n</description>\n\t\t\t<pubDate>Thu, 07 Nov 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>A new approach to validating test suites</title>\n\t\t\t<link>https://lwn.net/Articles/995276/</link>\n\t\t\t<guid>https://lwn.net/Articles/995276/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nThe first program that Martin Pool ever wrote, he said, had bugs; the ones he's writing\nnow most likely have bugs too. The talk Pool gave at\n&lt;a href=\"https://rustconf.com/\"&gt;RustConf&lt;/a&gt; this year was about a way to try\nto write programs with fewer bugs. He has developed a tool called\n&lt;a href=\"https://mutants.rs/\"&gt;\ncargo-mutants&lt;/a&gt; that highlights gaps in test coverage by identifying\nfunctions that can be broken without causing any tests to fail.\nThis can be a valuable complement to other testing techniques,\nhe explained.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 07 Nov 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>The OpenWrt One system</title>\n\t\t\t<link>https://lwn.net/Articles/994961/</link>\n\t\t\t<guid>https://lwn.net/Articles/994961/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>&lt;a href=\"https://openwrt.org/\"&gt;OpenWrt&lt;/a&gt; is, despite its relatively low\nprofile, one of our community's most important distributions; it runs\nuntold numbers of network routers and has served as the base on which a lot\nof network-oriented development (including the &lt;a\nhref=\"https://www.bufferbloat.net/projects/\"&gt;bufferbloat-reduction\nwork&lt;/a&gt;) has been done.  At the beginning of 2024, a few members of the\nproject &lt;a\nhref=\"https://lwn.net/ml/all/a8aaa495-da0b-4ddc-8c4f-3e1192d8b012@phrozen.org\"&gt;announced&lt;/a&gt;\na plan to design and produce a router device specifically designed to run\nOpenWrt.  This device, dubbed the \"OpenWrt One\", is now becoming available;\nthe kind folks at the &lt;a href=\"https://sfconservancy.org/\"&gt;Software Freedom\nConservancy&lt;/a&gt; were kind enough to ship one to LWN, where the desire to\nplay with a new toy is never lacking.\n</description>\n\t\t\t<pubDate>Thu, 14 Nov 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Building secure images with NixOS</title>\n\t\t\t<link>https://lwn.net/Articles/996329/</link>\n\t\t\t<guid>https://lwn.net/Articles/996329/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nImage-based Linux distributions have seen increasing popularity, recently. They\npromise reliability and security, but pose packaging problems for\nexisting distributions. Ryan Lahfa and Niklas Sturm spoke about the work that\nNixOS has done to enable an image-based workflow at this year's\n&lt;a href=\"https://all-systems-go.io/\"&gt;\nAll Systems Go!&lt;/a&gt;\nconference in Berlin.\nUnfortunately, LWN was not able to cover the conference for scheduling reasons,\nbut the\n&lt;a href=\"https://www.youtube.com/watch?v=YAl27ciB6c8&amp;list=PLWYdJViL9EipIImmvuoGFAeS-lKeHH2DD\"&gt;\nvideos of the event&lt;/a&gt; are available for anyone interested in watching the\ntalks.\nLahfa and Sturm explained that it is currently possible to create a\n&lt;a href=\"https://nixos.org/\"&gt;\nNixOS&lt;/a&gt; system that\ncryptographically verifies the kernel, initrd, and Nix store on boot — although\ndoing so still has some rough edges. Making an image-based NixOS installation is\nsimilarly possible.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 14 Nov 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for November 7, 2024</title>\n\t\t\t<link>https://lwn.net/Articles/996377/</link>\n\t\t\t<guid>https://lwn.net/Articles/996377/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The LWN.net Weekly Edition for November 7, 2024 is available.\n</description>\n\t\t\t<pubDate>Thu, 14 Nov 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Safety in an unsafe world</title>\n\t\t\t<link>https://lwn.net/Articles/995814/</link>\n\t\t\t<guid>https://lwn.net/Articles/995814/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nJoshua Liebow-Feeser took to the stage at\n&lt;a href=\"https://rustconf.com\"&gt;RustConf&lt;/a&gt; to describe the methodology\nthat his team uses to encode\narbitrary constraints in the Rust type system when working on the\n&lt;a href=\"https://en.wikipedia.org/wiki/Fuchsia_(operating_system)\"&gt;\nFuchsia operating system&lt;/a&gt;\n(&lt;a href=\"https://joshlf.com/files/talks/Safety%20in%20an%20Unsafe%20World.pdf\"&gt;slides&lt;/a&gt;).\nThe technique is not unknown to\nthe Rust community, but Liebow-Feeser did a good job of both explaining the\nmethod and making a case for why it should be used more widely. \n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 14 Nov 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>The trouble with struct sockaddr's fake flexible array</title>\n\t\t\t<link>https://lwn.net/Articles/997094/</link>\n\t\t\t<guid>https://lwn.net/Articles/997094/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>Flexible arrays — arrays that are declared as the final member of a\nstructure and which have a size determined at run time — have long drawn\nthe attention of developers seeking to harden the kernel against\nbuffer-overflow vulnerabilities.  These arrays have reliably been a source\nof bugs, so anything that can be done to ensure that operations on them\nstay within bounds is a welcome improvement.  While many improvements,\nincluding the recent &lt;a href=\"https://lwn.net/Articles/936728/\"&gt;counted-by work&lt;/a&gt;, have\nbeen made, one of the most difficult cases remains.  Now, however,\ndevelopers who are interested in using recent compiler bounds-checking\nfeatures are trying to get a handle on &lt;tt&gt;struct sockaddr&lt;/tt&gt;.\n</description>\n\t\t\t<pubDate>Thu, 21 Nov 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Back In Time back from the dead</title>\n\t\t\t<link>https://lwn.net/Articles/996720/</link>\n\t\t\t<guid>https://lwn.net/Articles/996720/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\n&lt;a href=\"https://github.com/bit-team/backintime?tab=readme-ov-file#back-in-time\"&gt;\nBack In Time&lt;/a&gt; is a GPL-2.0-licensed backup tool based on\n&lt;a href=\"https://rsync.samba.org/\"&gt;\nrsync&lt;/a&gt; and written in Python. It has both graphical and command-line interfaces, and\nsupports backups to local disks or over SSH.\nBack In Time was originally written by\nOprea Dan and released in 2009. The tool has been\nthrough some rough patches over the years, and is currently on its third set of\nmaintainers. Christian Buhtz, one of the current maintainers, explained to me\nhow he and his co-maintainers had revived the project, as well as why he thought\nBack In Time stood out from all of the existing backup solutions.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 21 Nov 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for November 14, 2024</title>\n\t\t\t<link>https://lwn.net/Articles/997293/</link>\n\t\t\t<guid>https://lwn.net/Articles/997293/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The LWN.net Weekly Edition for November 14, 2024 is available.\n</description>\n\t\t\t<pubDate>Thu, 21 Nov 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Truly portable C applications</title>\n\t\t\t<link>https://lwn.net/Articles/997238/</link>\n\t\t\t<guid>https://lwn.net/Articles/997238/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nProgramming language polyglots are files that are valid\nprograms in multiple languages, and do different things in each. While polyglots are normally\nnothing more than a curiosity, the\n&lt;a href=\"https://justine.lol/cosmopolitan/index.html\"&gt;\nCosmopolitan Libc&lt;/a&gt; project has been trying\nto put them to a novel use: producing native, multi-platform binaries that\nrun directly on several operating systems and architectures. There are still\nsome rough edges with the project's approach, but it is generally possible to\nbuild C programs into a polyglot format with with minimal\ntweaking.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 21 Nov 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Progress on toolchain security features</title>\n\t\t\t<link>https://lwn.net/Articles/996344/</link>\n\t\t\t<guid>https://lwn.net/Articles/996344/</guid>\n\t\t\t<dc:creator>jake</dc:creator>\n\t\t\t<description>Over the years, there has been steady progress in adding security features to\ncompilers and other tools to assist with hardening the Linux kernel (and, of course, other\nprograms).  In something of a tradition in the &lt;a\nhref=\"https://lpc.events/event/18/sessions/180/#20240918\"&gt;toolchains\ntrack&lt;/a&gt; at the &lt;a\nhref=\"https://linuxplumbersconf.org\"&gt;Linux\nPlumbers Conference&lt;/a&gt;, Kees Cook and Qing Zhao have led a session on that progress and\nfurther plans; this year, they were joined by Justin Stitt  (&lt;a\nhref=\"https://www.youtube.com/watch?v=68PZz_9cPms\"&gt;YouTube video&lt;/a&gt;).\n</description>\n\t\t\t<pubDate>Thu, 21 Nov 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Fedora KDE gets a promotion</title>\n\t\t\t<link>https://lwn.net/Articles/997559/</link>\n\t\t\t<guid>https://lwn.net/Articles/997559/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;The Fedora Project is set to welcome a second desktop edition to its\nlineup after months (or years, depending when one starts the clock)\nof discussions. The project recently decided to allow a new working group to\nmove forward with a KDE&amp;nbsp;Plasma&amp;nbsp;Desktop edition that will sit\nalongside the existing GNOME-based Fedora&amp;nbsp;Workstation\nedition. This puts KDE on a more equal footing within the project,\nwhich, it is hoped, will bring more contributors and users interested\nin KDE to adopt Fedora as their Linux distribution of choice.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 05 Dec 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Development statistics for 6.12</title>\n\t\t\t<link>https://lwn.net/Articles/997959/</link>\n\t\t\t<guid>https://lwn.net/Articles/997959/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>Linus Torvalds &lt;a\nhref=\"https://lwn.net/ml/all/CAHk-=wgtGkHshfvaAe_O2ntnFBH3EprNk1juieLmjcF2HBwBgQ@mail.gmail.com/\"&gt;released\nthe 6.12 kernel&lt;/a&gt; on November&amp;nbsp;17, as expected.  This development\ncycle, the last for 2024, brought 13,344 non-merge changesets into the\nmainline kernel; that made it a relatively slow cycle from this\nperspective, but 6.12 includes a long list of significant new features.\nThe time has come to look at where those changes came from, and to look at\nthe year-long LTS cycle as well.\n</description>\n\t\t\t<pubDate>Thu, 05 Dec 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for November 21, 2024</title>\n\t\t\t<link>https://lwn.net/Articles/998144/</link>\n\t\t\t<guid>https://lwn.net/Articles/998144/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The LWN.net Weekly Edition for November 21, 2024 is available.\n</description>\n\t\t\t<pubDate>Thu, 05 Dec 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>The beginning of the 6.13 merge window</title>\n\t\t\t<link>https://lwn.net/Articles/998623/</link>\n\t\t\t<guid>https://lwn.net/Articles/998623/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>As of this writing, just over 1,800 non-merge changesets have been pulled\ninto the mainline kernel for the 6.13 release.  That number may seem small,\ngiven that a typical merge window brings in at least 12,000 commits, but\nthe early pulls this time around have focused on significant core changes,\nand there are quite a few of them.  The time has come to summarize the\nchanges pulled so far, including lazy preemption, multi-grained timestamps,\nnew extended-attribute system calls, and more.\n</description>\n\t\t\t<pubDate>Thu, 12 Dec 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>NonStop discussion around adding Rust to Git</title>\n\t\t\t<link>https://lwn.net/Articles/998115/</link>\n\t\t\t<guid>https://lwn.net/Articles/998115/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nThe Linux kernel community's discussions about including Rust have\n&lt;a href=\"https://lwn.net/Kernel/Index/#Development_tools-Rust\"&gt;\ngotten a lot of attention&lt;/a&gt;, but the kernel is not the only project wrestling\nwith the question of whether to allow Rust. The Git project\n&lt;a href=\"https://lwn.net/ml/git/ZZ77NQkSuiRxRDwt@nand.local/\"&gt;\ndiscussed&lt;/a&gt; the prospect in January, and then\n&lt;a href=\"https://lwn.net/ml/all/Zu2DmS30E0kKug2a@nand.local/\"&gt;\nagain&lt;/a&gt; at the Git Contributor's Summit in September. Complicating the\ndiscussion is the Git project's lack of a policy on platform\nsupport, and the fact that it does already have tools written in other\nlanguages.\nWhile the project has not committed to using\nor avoiding Rust, it seems like only a matter of time until maintainers will\nhave to make a decision.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 12 Dec 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for December 5, 2024</title>\n\t\t\t<link>https://lwn.net/Articles/998950/</link>\n\t\t\t<guid>https://lwn.net/Articles/998950/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The LWN.net Weekly Edition for December 5, 2024 is available.\n</description>\n\t\t\t<pubDate>Thu, 12 Dec 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>The return of RWF_UNCACHED</title>\n\t\t\t<link>https://lwn.net/Articles/998783/</link>\n\t\t\t<guid>https://lwn.net/Articles/998783/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>Linux offers two broad ways of performing I/O to files.  Buffered I/O,\nwhich is the usual way of accessing a file, stores a copy of the\ntransferred data in the kernel's page cache to speed future accesses.\nDirect I/O, instead, moves data directly between the storage device and a\nuser-space buffer, avoiding the page cache.  Both modes have their\nadvantages and disadvantages.  In 2019, Jens Axboe &lt;a\nhref=\"https://lwn.net/Articles/806980/\"&gt;proposed an uncached buffered mode&lt;/a&gt; to get some\nof the advantages of both, but that effort stalled at the time.  Now, &lt;a\nhref=\"https://lwn.net/ml/all/20241203153232.92224-2-axboe@kernel.dk\"&gt;uncached buffered\nI/O is back&lt;/a&gt; with some impressive performance results behind it.\n</description>\n\t\t\t<pubDate>Thu, 12 Dec 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Debian opens a can of username worms</title>\n\t\t\t<link>https://lwn.net/Articles/1000485/</link>\n\t\t\t<guid>https://lwn.net/Articles/1000485/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;It has long been said that &lt;a\nhref=\"https://martinfowler.com/bliki/TwoHardThings.html\"&gt;naming things\nis one of the hard things to do in computer science&lt;/a&gt;. That may be\nso, but it pales in comparison to the challenge of handling\nusernames properly in applications. This is especially true when multiple\napplications are involved, and they are all supposed to agree on what\ncharacters are, and are not, allowed. The Debian project is facing\nthat problem right now, as two user-creation utilities disagreed about\nwhich names are allowable. A plan is in place to sort this out\nbefore the release of Debian&amp;nbsp;13 (\"trixie\") sometime next year.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 19 Dec 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Freezing out the page reference count</title>\n\t\t\t<link>https://lwn.net/Articles/1000654/</link>\n\t\t\t<guid>https://lwn.net/Articles/1000654/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The &lt;a\nhref=\"https://elixir.bootlin.com/linux/v6.12.1/source/include/linux/mm_types.h#L35\"&gt;&lt;tt&gt;page&lt;/tt&gt;\nstructure&lt;/a&gt; sits at the core of the kernel's memory-management subsystem\n(for now), and a key part of that structure is its reference count, stored\nin &lt;tt&gt;refcount&lt;/tt&gt;.  The page reference count tells the kernel how many\nusers a given page has and when it can be freed.  That count is not needed\nfor every page in the system, though.  Matthew Wilcox has recently &lt;a\nhref=\"https://lwn.net/ml/all/20241125210149.2976098-1-willy@infradead.org\"&gt;resurrected&lt;/a&gt;\nan &lt;a href=\"https://lwn.net/ml/linux-mm/20220809171854.3725722-1-willy@infradead.org/\"&gt;old\npatch set&lt;/a&gt; that expands the concept of a \"frozen\" page — one that lacks a\nmeaningful reference count — to the immediate benefit of the slab allocator\nbut in the service of a longer-term goal as well.\n</description>\n\t\t\t<pubDate>Thu, 19 Dec 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for December 12, 2024</title>\n\t\t\t<link>https://lwn.net/Articles/1000812/</link>\n\t\t\t<guid>https://lwn.net/Articles/1000812/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>The LWN.net Weekly Edition for December 12, 2024 is available.\n</description>\n\t\t\t<pubDate>Thu, 19 Dec 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Auto-tuning the kernel</title>\n\t\t\t<link>https://lwn.net/Articles/998576/</link>\n\t\t\t<guid>https://lwn.net/Articles/998576/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nThe Linux kernel has many tunable parameters. While there is much advice\navailable on the internet about how to set them, few people have the time to\nweed through the (often contradictory) explanations and choose appropriate\nvalues. One possible way to address this is\n&lt;a href=\"https://blogs.oracle.com/linux/post/introducing-bpftune\"&gt;\na project called bpftune&lt;/a&gt;, a\nprogram that uses BPF to track various metrics about a running system and\nadjust the sysctl knobs appropriately. The program is developed by Oracle, and\nis available under a GPLv2 license. Bpftune is currently mostly\nfocused on optimizing network settings, but the authors hope that the system is\nflexible enough to be extended to cover other settings.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 19 Dec 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>A look at CentOS Stream 10</title>\n\t\t\t<link>https://lwn.net/Articles/986792/</link>\n\t\t\t<guid>https://lwn.net/Articles/986792/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;The &lt;a\nhref=\"https://docs.redhat.com/en/documentation/red_hat_enterprise_linux/10-beta/html/10.0_beta_release_notes/index\"&gt;Red\nHat Enterprise Linux (RHEL) 10 beta&lt;/a&gt; was released in mid-November\nand, if all goes according to plan, &lt;a\nhref=\"https://www.centos.org/centos-stream/\"&gt;CentOS&amp;nbsp;Stream&lt;/a&gt;&amp;nbsp;10\nshould be released before the end of the year. While nothing is etched\nin stone just yet, it is a good time for anyone using or targeting\nRHEL (and its clones) to start taking a look at how Stream&amp;nbsp;10,\nand the corresponding &lt;a\nhref=\"https://docs.fedoraproject.org/en-US/epel/epel-about/\"&gt;EPEL&lt;/a&gt;\nrepository, is shaping up. This is not only important to RHEL and\nStream users, but anyone deploying and supporting software on\nenterprise Linux (EL) derivatives like AlmaLinux, Oracle&amp;nbsp;Linux,\nand Rocky&amp;nbsp;Linux as well.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 19 Dec 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Facing the Git commit-ID collision catastrophe</title>\n\t\t\t<link>https://lwn.net/Articles/1001526/</link>\n\t\t\t<guid>https://lwn.net/Articles/1001526/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>Commits in the Git source-code management system are identified by the\nSHA-1 hash of their contents — though the specific hash &lt;a\nhref=\"https://lwn.net/Articles/898522/\"&gt;may change someday&lt;/a&gt;.  The full hash is a\n160-bit quantity, normally written as a 40-character hexadecimal string.\nWhile those strings are convenient for computers to work with, humans find\nthem to be a bit unwieldy, so it is common to abbreviate the hash values to\nshorter strings.  Geert Uytterhoeven recently &lt;a\nhref=\"https://lwn.net/ml/all/cover.1733421037.git.geert+renesas@glider.be\"&gt;proposed&lt;/a&gt;\nincreasing the length of those abbreviated hashes as used in the kernel\ncommunity, but the problem he was working to solve may not be as urgent as\nit seems.\n</description>\n\t\t\t<pubDate>Thu, 26 Dec 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Using Guile for Emacs</title>\n\t\t\t<link>https://lwn.net/Articles/1001645/</link>\n\t\t\t<guid>https://lwn.net/Articles/1001645/</guid>\n\t\t\t<dc:creator>jake</dc:creator>\n\t\t\t<description>&lt;a href=\"https://www.gnu.org/software/emacs/\"&gt;Emacs&lt;/a&gt; is, famously, an\neditor—perhaps far more—that is extensible using its own\nvariant of the Lisp programming language, &lt;a\nhref=\"https://www.gnu.org/software/emacs/manual/html_node/eintr/\"&gt;Emacs\nLisp&lt;/a&gt; (or Elisp).  &lt;a href=\"https://emacsconf.org/2024/\"&gt;This year's\nedition of EmacsConf&lt;/a&gt;, which is an annual \"gathering\" that has been held\nonline for the past five years, had two separate talks on using a different\nvariant of Lisp, &lt;a href=\"https://www.gnu.org/software/guile/\"&gt;Guile&lt;/a&gt;,\nfor Emacs.  Both projects would preserve Elisp compatibility, which is a\nmust, but they would use Guile differently.  The first talk we will cover\nwas given by Robin Templeton, who described the relaunch of the &lt;a\nhref=\"https://guile-emacs.org/\"&gt;Guile-Emacs project&lt;/a&gt;, which would replace\nthe Elisp in Emacs with a compiler using Guile.  A subsequent article will look\nat the other talk, which is about &lt;a\nhref=\"https://emacsconf.org/2024/talks/gypsum/\"&gt;an Emacs clone&lt;/a&gt; written\nusing Guile.\n</description>\n\t\t\t<pubDate>Thu, 26 Dec 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for December 19, 2024</title>\n\t\t\t<link>https://lwn.net/Articles/1001869/</link>\n\t\t\t<guid>https://lwn.net/Articles/1001869/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The LWN.net Weekly Edition for December 19, 2024 is available.\n</description>\n\t\t\t<pubDate>Thu, 26 Dec 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Emacs code completion can cause compromise</title>\n\t\t\t<link>https://lwn.net/Articles/1002046/</link>\n\t\t\t<guid>https://lwn.net/Articles/1002046/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nEmacs has had a\n&lt;a href=\"https://lwn.net/Articles/966547/\"&gt;few bugs&lt;/a&gt; related to accidentally\npermitting the execution of untrusted code. Unfortunately, it seems as though\nanother bug of that sort has appeared — and may be harder to patch,\nbecause the problem comes from the way Emacs handles expansion of Lisp macros in\ncode being analyzed. The\nvulnerability is only practically exploitable in a non-default configuration, so\nnot every Emacs user has something to worry about. The Emacs\ndevelopers are reportedly working on a fix, but have not yet shared details\nabout it. In the meantime, every Emacs version since at least\n26.1 (released in May&amp;nbsp;2018) through the current development version is vulnerable.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 26 Dec 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>WP Engine granted preliminary injunction in WordPress case</title>\n\t\t\t<link>https://lwn.net/Articles/1001783/</link>\n\t\t\t<guid>https://lwn.net/Articles/1001783/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;Since we &lt;a href=\"https://lwn.net/Articles/993895/\"&gt;last looked&lt;/a&gt;\nat the &lt;a href=\"https://lwn.net/Articles/991906/\"&gt;WordPress\ndispute&lt;/a&gt;, &lt;a href=\"https://wpengine.com/\"&gt;WP Engine&lt;/a&gt; has sought\na preliminary injunction against &lt;a\nhref=\"https://automattic.com/\"&gt;Automattic&lt;/a&gt; and its founder Matt Mullenweg to\nrestore its access to &lt;a\nhref=\"https://wordpress.org/\"&gt;WordPress.org&lt;/a&gt;, and more. The judge\nin the case granted a preliminary injunction on December 10. The case\nis, of course, of interest to users and developers working with\nWordPress&amp;mdash;but it may also have implications for other\nopen-source projects well beyond the WordPress community.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 26 Dec 2024 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Process creation in io_uring</title>\n\t\t\t<link>https://lwn.net/Articles/1002371/</link>\n\t\t\t<guid>https://lwn.net/Articles/1002371/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>Back in 2022, Josh Triplett &lt;a href=\"https://lwn.net/Articles/908268/\"&gt;presented a\nplan&lt;/a&gt; to implement a \"spawn new process\" functionality in the io_uring\nsubsystem.  There was a fair amount of interest at the time, but developers\ngot distracted, and the work did not progress.  Now, Gabriel Krisman\nBertazi has returned with &lt;a\nhref=\"https://lwn.net/ml/all/20241209234316.4132786-1-krisman@suse.de\"&gt;a patch series&lt;/a&gt;\nupdating and improving Triplett's work.  While interest in this\nfunctionality remains, it may still take some time before it is ready for\nmerging into the mainline.\n</description>\n\t\t\t<pubDate>Thu, 09 Jan 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Tim Peters returns to the Python community</title>\n\t\t\t<link>https://lwn.net/Articles/1002340/</link>\n\t\t\t<guid>https://lwn.net/Articles/1002340/</guid>\n\t\t\t<dc:creator>jake</dc:creator>\n\t\t\t<description>In the past, suspensions of Python core developers have effectively been\npermanent because the recipients of the punishment chose not to return.\nThings have played out quite differently after Tim Peters was &lt;a\nhref=\"https://lwn.net/Articles/988894/\"&gt;suspended for three months&lt;/a&gt; back in August;\nPeters has been posting to the Python discussion forum since his suspension\nended in early November and, generally, getting back to work as usual.\nThat does not mean that he—or others in the community—have accepted the way\nhe was treated, but he has largely made his peace with it.  The incident is\nstill reverberating through the Python world, however.\n</description>\n\t\t\t<pubDate>Thu, 09 Jan 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Systemd improves image features and adds varlink API</title>\n\t\t\t<link>https://lwn.net/Articles/1002398/</link>\n\t\t\t<guid>https://lwn.net/Articles/1002398/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;The &lt;a\nhref=\"https://lwn.net/Articles/1001657/\"&gt;systemd v257&lt;/a&gt; release brings a number of incremental\nenhancements to various components and utilities for working with\nLinux systems. This includes more support for &lt;a href=\"https://varlink.org/\"&gt;varlink&lt;/a&gt;, automated\ndownloading of disk images at boot time, and a number of improvements\nto the secure-boot process for unified kernel images (UKIs), which we\nhave covered in &lt;a href=\"https://lwn.net/Articles/1001730/\"&gt;a separate\narticle&lt;/a&gt;.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 09 Jan 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Preventing data races with Pony</title>\n\t\t\t<link>https://lwn.net/Articles/1001224/</link>\n\t\t\t<guid>https://lwn.net/Articles/1001224/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nThe\n&lt;a href=\"https://www.ponylang.io/\"&gt;Pony&lt;/a&gt; programming language is dedicated to\nexploring how to make high-performance\n&lt;a href=\"https://en.wikipedia.org/wiki/Actor_model\"&gt;\nactor-based&lt;/a&gt; systems. Started in 2014,\nthe language's most notable feature is probably\n&lt;a href=\"https://tutorial.ponylang.io/reference-capabilities/\"&gt;\nreference capabilities&lt;/a&gt;, a system of pointer annotations that gives the developer\nfine manual control over how data is shared between actors, while simultaneously\nensuring that Pony programs don't have data races. The language is not likely to\novertake other more popular programming languages, but its ideas could be useful for\nother languages or frameworks struggling with concurrent data access.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 16 Jan 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Emacs in Scheme</title>\n\t\t\t<link>https://lwn.net/Articles/1001929/</link>\n\t\t\t<guid>https://lwn.net/Articles/1001929/</guid>\n\t\t\t<dc:creator>jake</dc:creator>\n\t\t\t<description>During &lt;a href=\"https://emacsconf.org/2024/\"&gt;EmacsConf&amp;nbsp;2024&lt;/a&gt;, which\nwas held online in early December&amp;nbsp;2024, Ramin Honary gave a &lt;a\nhref=\"https://emacsconf.org/2024/talks/gypsum/\"&gt;talk&lt;/a&gt; about &lt;a\nhref=\"https://codeberg.org/ramin_hal9001/gypsum#project-gypsum\"&gt;Project\nGypsum&lt;/a&gt;, which is his effort to rewrite Emacs in &lt;a\nhref=\"https://www.scheme.org/\"&gt;Scheme&lt;/a&gt;.  Unlike most other Emacs clones,\nwhich simply replicate the key bindings, Gypsum is also implementing &lt;a\nhref=\"https://www.gnu.org/software/emacs/manual/html_node/eintr/\"&gt;Emacs\nLisp&lt;/a&gt; (or Elisp).  Honary is initially targeting &lt;a\nhref=\"https://www.gnu.org/software/guile/\"&gt;Guile&lt;/a&gt;, which is an\nimplementation of Scheme, but wants to make the code &lt;a\nhref=\"https://codeberg.org/ramin_hal9001/gypsum/wiki/Portability.md\"&gt;portable&lt;/a&gt;\nto any implementation of &lt;a href=\"https://r7rs.org/\"&gt;R7RS&lt;/a&gt; Scheme.\n</description>\n\t\t\t<pubDate>Thu, 16 Jan 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>2024 Linux and free software timeline</title>\n\t\t\t<link>https://lwn.net/Articles/1004204/</link>\n\t\t\t<guid>https://lwn.net/Articles/1004204/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;In the past, LWN had a tradition of &lt;a\nhref=\"https://lwn.net/op/TimelineIdx.lwn\"&gt;publishing a timeline&lt;/a&gt; of\nnotable events from the previous year in early January. We thought we\nmight try reviving that tradition in 2025 to see if our readers find\nit useful. While we have covered these events as they\nhappened, it's interesting to see how much has taken place in just\n12 months.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 16 Jan 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for January 9, 2025</title>\n\t\t\t<link>https://lwn.net/Articles/1003479/</link>\n\t\t\t<guid>https://lwn.net/Articles/1003479/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>Inside this week's LWN.net Weekly Edition:\n        &lt;p&gt;\n        &lt;ul&gt;\n&lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1003479/\"&gt;Front&lt;/a&gt;: What to expect in 2025; Sequoia; Emacs in Scheme; Pony; Homa; 2024 Timeline.\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1003481/\"&gt;Briefs&lt;/a&gt;: Colliding SHAs; netdev in 2024; Gentoo retrospective; LineageOS 22.1; pkgsrc-2024Q4; RIP Steve Langasek; Firefox 134.0; Algol 68; Ruby 3.4; Quotes; ...\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1003482/\"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.\n            &lt;/ul&gt;\n\n        </description>\n\t\t\t<pubDate>Thu, 16 Jan 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>A look at the Sequoia command-line interface</title>\n\t\t\t<link>https://lwn.net/Articles/1003243/</link>\n\t\t\t<guid>https://lwn.net/Articles/1003243/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nThe\n&lt;a href=\"https://sequoia-pgp.org/\"&gt;\nSequoia&lt;/a&gt; OpenPGP library has been in development for some time. LWN\n&lt;a href=\"https://lwn.net/Articles/830902/\"&gt;covered&lt;/a&gt; the library in 2020. Now the project's\ncommand-line interface has\n&lt;a href=\"https://lwn.net/Articles/1002411/\"&gt;been released&lt;/a&gt;. The &lt;tt&gt;sq&lt;/tt&gt; tool offers a\npromising alternative to the venerable\n&lt;a href=\"https://gnupg.org/\"&gt;\nGNU Privacy Guard&lt;/a&gt; (GPG) tool — albeit one with a\ndifferent interface, set of terminology, and approach to the web of\ntrust. Several distributions are making increasing use of the tool\nbehind the scenes.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 16 Jan 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for January 16, 2025</title>\n\t\t\t<link>https://lwn.net/Articles/1004544/</link>\n\t\t\t<guid>https://lwn.net/Articles/1004544/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>Inside this week's LWN.net Weekly Edition:\n        &lt;p&gt;\n        &lt;ul&gt;\n&lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1004544/\"&gt;Front&lt;/a&gt;: Chimera Linux; Vim; Page-table hardening; Modifying system calls; Ghostty 1.0; TuxFamily.\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1004546/\"&gt;Briefs&lt;/a&gt;: rsync vulnerabilities; Linux Mint 22.1; Git v2.48.0; Libvirt v11.0.0; Rust 1.84.0; RIP Helen Borrie, Paolo Mantegazza, and Bill Gianopoulos; SFC lawsuit; Quotes; ...\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1004547/\"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.\n            &lt;/ul&gt;\n\n        </description>\n\t\t\t<pubDate>Thu, 23 Jan 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Ghostty 1.0 has been summoned</title>\n\t\t\t<link>https://lwn.net/Articles/1004377/</link>\n\t\t\t<guid>https://lwn.net/Articles/1004377/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;The &lt;a href=\"https://ghostty.org/\"&gt;Ghostty&lt;/a&gt; terminal emulator\nproject has generated a surprising amount of interest, even before\ncode was released to the public. This is in part due to the high\nprofile of its creator, &lt;a\nhref=\"https://en.wikipedia.org/wiki/HashiCorp\"&gt;HashiCorp&lt;/a&gt; founder\nMitchell Hashimoto. Its development was conducted behind closed doors\nfor beta testing, until version&amp;nbsp;1.0 was &lt;a\nhref=\"https://github.com/ghostty-org/ghostty/releases/tag/v1.0.0\"&gt;released&lt;/a&gt;\non December 26 under the &lt;a\nhref=\"https://github.com/ghostty-org/ghostty?tab=MIT-1-ov-file#readme\"&gt;MIT\nlicense&lt;/a&gt;. While far from finished, Ghostty is ready for day-to-day\nuse and might be of interest to those who spend significant amounts of\ntime at the command line.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 23 Jan 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>[$] LWN.net Weekly Edition for January 23, 2025</title>\n\t\t\t<link>https://lwn.net/Articles/1005296/</link>\n\t\t\t<guid>https://lwn.net/Articles/1005296/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>Inside this week's LWN.net Weekly Edition:\n        &lt;p&gt;\n        &lt;ul&gt;\n&lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1005296/\"&gt;Front&lt;/a&gt;: Rsync vulnerability; Going mouseless; Commit IDs; 6.13 Development statistics; Python string formating; Python None-aware operators.\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1005298/\"&gt;Briefs&lt;/a&gt;: Kernel 6.13; Dillo 3.2.0; GDB 16.1; OpenVox; Wine 10.0; Quotes; ...\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1005299/\"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.\n            &lt;/ul&gt;\n\n        </description>\n\t\t\t<pubDate>Thu, 30 Jan 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>[$] A revamped Python string-formatting proposal</title>\n\t\t\t<link>https://lwn.net/Articles/1005000/</link>\n\t\t\t<guid>https://lwn.net/Articles/1005000/</guid>\n\t\t\t<dc:creator>jake</dc:creator>\n\t\t\t<description>The proposal to add a more general facility for string formatting to\nPython, which we &lt;a href=\"https://lwn.net/Articles/985346/\"&gt;looked at&lt;/a&gt; in August 2024,\nhas changed a great deal since, so it merits another look.  The\nchanges take multiple forms: a new title for &lt;a\nhref=\"https://peps.python.org/pep-0750/\"&gt;PEP\n750&lt;/a&gt; (\"Template Strings\"), a different mechanism for creating and using templates,\na new &lt;tt&gt;Template&lt;/tt&gt; type to hold them, and several additional authors for the PEP.\nMeanwhile, one controversial part of the original proposal, lazy evaluation\nof the interpolated values, has been changed so that it requires an\nexplicit opt-in (via &lt;a\nhref=\"https://docs.python.org/3.8/tutorial/controlflow.html#lambda-expressions\"&gt;&lt;tt&gt;lambda&lt;/tt&gt;&lt;/a&gt;);\ntemplate strings are a generalization of &lt;a\nhref=\"https://lwn.net/Articles/919426/\"&gt;f-strings&lt;/a&gt; and lazy evaluation was seen by some\nas a potentially confusing departure from their behavior.\n</description>\n\t\t\t<pubDate>Thu, 30 Jan 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>[$] A mouseless tale: trying for a keyboard-driven desktop</title>\n\t\t\t<link>https://lwn.net/Articles/1005332/</link>\n\t\t\t<guid>https://lwn.net/Articles/1005332/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;The computer mouse is a wonderful invention, but for the past few\nmonths I've been working to use mine as little as possible for\nproductivity and ergonomic reasons. It should not be surprising that\nthere are quite a few open-source applications, utilities, and\nconfiguration options that are either designed to or incidentally\nassist in creating a keyboard-driven desktop. This includes tiling window\nmanagement with &lt;a\nhref=\"https://github.com/paperwm/PaperWM?tab=readme-ov-file#paperwm\"&gt;PaperWM&lt;/a&gt;, the &lt;a\nhref=\"https://vimium.github.io/\"&gt;Vimium&lt;/a&gt; browser extension, &lt;a\nhref=\"https://github.com/sezanzeb/input-remapper?tab=readme-ov-file#input-remapper\"&gt;Input Remapper&lt;/a&gt;, and more.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 30 Jan 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>A look at the recent rsync vulnerability</title>\n\t\t\t<link>https://lwn.net/Articles/1005302/</link>\n\t\t\t<guid>https://lwn.net/Articles/1005302/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nOn January&amp;nbsp;14, Nick Tait\n&lt;a href=\"https://lwn.net/ml/all/CALDM2HfAOzs+zr3XLCDAKH8oOosigdaNooUANDf=Ez5mLSvQcQ@mail.gmail.com/\"&gt;\nannounced&lt;/a&gt; the discovery of six vulnerabilities in\n&lt;a href=\"https://rsync.samba.org/\"&gt;\nrsync&lt;/a&gt;, the popular file-synchronization tool. While software vulnerabilities are\nnot uncommon, the\n&lt;a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-12084\"&gt;\nmost serious one&lt;/a&gt; he announced allows for remote code execution\non servers that run &lt;tt&gt;rsyncd&lt;/tt&gt; — and possibly other configurations.\nThe bug itself is fairly simple, but this event provides a nice opportunity to\ndig into it, show why it is so serious, and consider ways\nthe open-source community can prevent such mistakes in the\nfuture.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 30 Jan 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>[$] LWN.net Weekly Edition for January 30, 2025</title>\n\t\t\t<link>https://lwn.net/Articles/1005953/</link>\n\t\t\t<guid>https://lwn.net/Articles/1005953/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>Inside this week's LWN.net Weekly Edition:\n        &lt;p&gt;\n        &lt;ul&gt;\n&lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1005953/\"&gt;Front&lt;/a&gt;: Go vendoring in Fedora; Rust 2024 edition; 6.14 Merge window; uretprobe(); FOSDEM keynote; Earthstar.\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1005955/\"&gt;Briefs&lt;/a&gt;: Git security; Ubuntu discussion; LWN EPUBs; Facebook moderation; Quotes; ...\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1005956/\"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.\n            &lt;/ul&gt;\n\n        </description>\n\t\t\t<pubDate>Thu, 06 Feb 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for February 6, 2025</title>\n\t\t\t<link>https://lwn.net/Articles/1007000/</link>\n\t\t\t<guid>https://lwn.net/Articles/1007000/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>Inside this week's LWN.net Weekly Edition:\n        &lt;p&gt;\n        &lt;ul&gt;\n&lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1007000/\"&gt;Front&lt;/a&gt;: Finding concurrency bugs with sched_ext; Rust abstractions; 6.14 Merge window; Sealed system mappings; OpenSUSE board; Julia; Site tour.\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1007002/\"&gt;Briefs&lt;/a&gt;: Binutils 2.44; Firefox 135.0; Freedesktop GitLab; GNU C Library 2.41; GTK; Servo; Thunderbird updates; Sanctions; Quotes; ...\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1007003/\"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.\n            &lt;/ul&gt;\n\n        </description>\n\t\t\t<pubDate>Thu, 13 Feb 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Exposing concurrency bugs with a custom scheduler</title>\n\t\t\t<link>https://lwn.net/Articles/1007689/</link>\n\t\t\t<guid>https://lwn.net/Articles/1007689/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nJake Hillion gave\n&lt;a href=\"https://fosdem.org/2025/schedule/event/fosdem-2025-4489-concurrency-testing-using-custom-linux-schedulers/\"&gt;\na presentation&lt;/a&gt; at\n&lt;a href=\"https://fosdem.org/2025/\"&gt;\nFOSDEM&lt;/a&gt; about using\n&lt;a href=\"https://www.kernel.org/doc/html/next/scheduler/sched-ext.html\"&gt;\nsched_ext&lt;/a&gt;, the BPF\nscheduling framework that was introduced in kernel version 6.12, to help find\nelusive concurrency problems. In collaboration with Johannes Bechberger, he has\nbuilt a scheduler that can reveal theoretically possible but unobserved\nconcurrency bugs in test code in a few minutes. Since their scheduler only\nrelies on mainline kernel features, it can theoretically be applied to any\napplication that runs on Linux — although there are a number of caveats since\nthe project is still in its early days.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 13 Feb 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>An update on sealed system mappings</title>\n\t\t\t<link>https://lwn.net/Articles/1006375/</link>\n\t\t\t<guid>https://lwn.net/Articles/1006375/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nJeff Xu has been working on\n&lt;a href=\"https://lwn.net/ml/all/20241125202021.3684919-1-jeffxu@google.com/\"&gt;\na patch set&lt;/a&gt; that makes certain mappings in a process's address space\nimpossible to change, sealing them against tampering. This has some potential\nsecurity benefits — mainly, making\nsure that someone cannot relocate the\n&lt;a href=\"https://lwn.net/Articles/446528/\"&gt;vsyscall and\nvDSO mappings&lt;/a&gt; — but some kernel developers haven't\nbeen impressed with the patches.\nWhile the core functionality (sealing the mappings) is sound, some of the\nsupporting code for enabling and disabling the new feature caused concern by\ngoing against the normal design for such things. Reviewers also questioned\nhow this feature would interact with checkpointing and with sandboxing.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 13 Feb 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for February 13, 2025</title>\n\t\t\t<link>https://lwn.net/Articles/1008279/</link>\n\t\t\t<guid>https://lwn.net/Articles/1008279/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>Inside this week's LWN.net Weekly Edition:\n        &lt;p&gt;\n        &lt;ul&gt;\n&lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1008279/\"&gt;Front&lt;/a&gt;: BPF load-time checking; IRQ suspension; Rust for Linux; Rewriting coreutils; Selfish contributors; emlearn.\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1008281/\"&gt;Briefs&lt;/a&gt;: RfL policy; OpenWrt 24.10.0; Arti 1.4.0; LibreOffice 25.2; OpenInfra; Plasma 6.3; Attacks on Codeberg; Quotes; ...\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1008282/\"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.\n            &lt;/ul&gt;\n\n        </description>\n\t\t\t<pubDate>Thu, 20 Feb 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Milliwatt machine learning with emlearn</title>\n\t\t\t<link>https://lwn.net/Articles/1009011/</link>\n\t\t\t<guid>https://lwn.net/Articles/1009011/</guid>\n\t\t\t<dc:creator>jake</dc:creator>\n\t\t\t<description>While large language models and the expensive hardware they require are all\nthe rage now, other areas of artificial intelligence work within much more\nconstrained hardware environments. At &lt;a\nhref=\"https://fosdem.org/2025/\"&gt;FOSDEM&amp;nbsp;2025&lt;/a&gt;, Jon Nordby presented\nhis open-source machine-learning inference engine for microcontrollers,\nnamed &lt;a href=\"https://emlearn.readthedocs.io\"&gt;emlearn&lt;/a&gt;. The project\nalso boasts bindings for &lt;a href=\"https://micropython.org\"&gt;MicroPython&lt;/a&gt;,\nthus making machine-learning applications even more accessible.\n</description>\n\t\t\t<pubDate>Thu, 20 Feb 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Rewriting essential Linux packages in Rust</title>\n\t\t\t<link>https://lwn.net/Articles/1007907/</link>\n\t\t\t<guid>https://lwn.net/Articles/1007907/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;Most Linux systems depend on a suite of core utilities that the &lt;a\nhref=\"https://www.gnu.org/\"&gt;GNU Project&lt;/a&gt; started development on\ndecades ago and are, of course, written in C. At &lt;a\nhref=\"https://fosdem.org/2025/\"&gt;FOSDEM&amp;nbsp;2025&lt;/a&gt;, Sylvestre Ledru\nmade the case in &lt;a\nhref=\"https://fosdem.org/2025/schedule/event/fosdem-2025-6196-rewriting-the-future-of-the-linux-essential-packages-in-rust-/\"&gt;his\nmain stage talk&lt;/a&gt; that modern systems require safer, more\nmaintainable tools. Over the past few years, Ledru has led the charge\nof rewriting the &lt;a href=\"https://www.gnu.org/software/coreutils/\"&gt;GNU\nCore Utilities&lt;/a&gt; (coreutils) in Rust, as the MIT-licensed &lt;a\nhref=\"https://github.com/uutils/\"&gt;uutils&lt;/a&gt; project. The goal is to\noffer what he said are more secure, and more performant drop-in\nreplacements for the tools Linux users depend on. At FOSDEM, Ledru\nannounced that the uutils project is setting its sights even\nhigher.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 20 Feb 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Smarter IRQ suspension in the networking stack</title>\n\t\t\t<link>https://lwn.net/Articles/1008399/</link>\n\t\t\t<guid>https://lwn.net/Articles/1008399/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>High-performance networking is a highly tuned activity; the amount of time\navailable to deal with each packet may be measured in nanoseconds, so care\nmust be taken to avoid anything that might slow the process down.\nRecently, there has been a fair amount of attention given to &lt;a\nhref=\"https://lwn.net/ml/all/20241021015311.95468-1-jdamato@fastly.com/\"&gt;a patch set\nmerged for 6.13&lt;/a&gt; that, it is claimed, can improve processing efficiency\n(and, thus, power savings)\nin data centers by as much as 30%.  The change itself, contributed by Joe\nDamato and Martin Karsten, is a relatively small tweak to existing\noptimization techniques; it shows just how much care is needed to optimize\na high-bandwidth server.\n</description>\n\t\t\t<pubDate>Thu, 20 Feb 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for February 20, 2025</title>\n\t\t\t<link>https://lwn.net/Articles/1009456/</link>\n\t\t\t<guid>https://lwn.net/Articles/1009456/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>Inside this week's LWN.net Weekly Edition:\n        &lt;p&gt;\n        &lt;ul&gt;\n&lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1009456/\"&gt;Front&lt;/a&gt;: Systemd; AI scraperbots; Time-slice extension; FUSE regression; Multi-size THPs; Memcached; Meshtastic.\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1009458/\"&gt;Briefs&lt;/a&gt;: Asahi leadership; Debian images; RISC-V Fedora; OpenSUSE; Mesa 25.0.0; Pi-hole v6; Quotes; ...\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1009459/\"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.\n            &lt;/ul&gt;\n\n        </description>\n\t\t\t<pubDate>Thu, 27 Feb 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Extending time slices for user-space locks</title>\n\t\t\t<link>https://lwn.net/Articles/1009509/</link>\n\t\t\t<guid>https://lwn.net/Articles/1009509/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nSteven Rostedt recently posted\n&lt;a href=\"https://lwn.net/ml/all/20250131225837.972218232@goodmis.org/\"&gt;\na patch set&lt;/a&gt; that could help improve the performance of certain user-space\napplications by giving the scheduler more context about when they are safe to\ninterrupt. The patch set lets programs request a small grace window\nbefore they can be interrupted so that they can relinquish any locks, decreasing the\namount of time that other threads have to spend waiting. Rostedt shared\nperformance numbers suggesting that the patch might cut the amount of time spent\nacquiring locks in half for some programs — although, since his test was\nspecifically tuned for this case, real-world projects should expect a somewhat\nless dramatic improvement. The change received some pushback from scheduler\nmaintainer Peter Zijlstra, who objected to the patch set's approach.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 27 Feb 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Meshtastic: decentralized communication with low-power devices</title>\n\t\t\t<link>https://lwn.net/Articles/1009782/</link>\n\t\t\t<guid>https://lwn.net/Articles/1009782/</guid>\n\t\t\t<dc:creator>jake</dc:creator>\n\t\t\t<description>Many of us enjoy uninterrupted access to mobile networks. However, in\nremote areas or during emergencies, that connectivity may not always be\navailable. For such scenarios, &lt;a\nhref=\"https://meshtastic.org\"&gt;Meshtastic&lt;/a&gt; offers a decentralized\nwireless mesh network with open-source firmware that runs on affordable,\nlow-power devices.\nAt &lt;a href=\"https://fosdem.org/2025/\"&gt;FOSDEM 2025&lt;/a&gt;, the Meshtastic\nproject was represented by one of its core developers, Thomas Göttgens, who\ngave a talk, \"&lt;a\nhref=\"https://fosdem.org/2025/schedule/event/fosdem-2025-4375-meshtastic-off-grid-communication-for-everyone/\"&gt;Meshtastic\n- off-grid communication for everyone&lt;/a&gt;\", in the &lt;a\nhref=\"https://fosdem.org/2025/schedule/track/radio/\"&gt;Radio&lt;/a&gt; developer\nroom (devroom).\n</description>\n\t\t\t<pubDate>Thu, 27 Feb 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for February 27, 2025</title>\n\t\t\t<link>https://lwn.net/Articles/1011011/</link>\n\t\t\t<guid>https://lwn.net/Articles/1011011/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>Inside this week's LWN.net Weekly Edition:\n        &lt;p&gt;\n        &lt;ul&gt;\n&lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1011011/\"&gt;Front&lt;/a&gt;: Tail calls in CPython; BPF cancellation; Slabs, sheaves, and barns; Atomic block writes; Large filesystem block sizes; EPEL 10 for older CPUs; pytest-mh; Open-source battery.\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1011013/\"&gt;Briefs&lt;/a&gt;: DMA discussion; Armbian 25.2; Gentoo qcow2; Aqualung 2.0; Emacs 30.1; Rust 1.85.0; Quotes; ...\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1011014/\"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.\n            &lt;/ul&gt;\n\n        </description>\n\t\t\t<pubDate>Thu, 06 Mar 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Building an open-source battery</title>\n\t\t\t<link>https://lwn.net/Articles/1011730/</link>\n\t\t\t<guid>https://lwn.net/Articles/1011730/</guid>\n\t\t\t<dc:creator>jake</dc:creator>\n\t\t\t<description>&lt;a href=\"https://fosdem.org/2025/\"&gt;FOSDEM 2025&lt;/a&gt; featured the usual talks\nabout open-source software, but, as always, the conference also offered the\nopportunity to discover some more exotic and less software-centric\ntopics. That's how I learned about the &lt;a href=\"https://fbrc.dev\"&gt;Flow\nBattery Research Collective&lt;/a&gt; (FBRC), which is building what will\neventually become an open-source home battery.\nDaniel Fernández Pinto represented the collective at\nFOSDEM with his talk \"&lt;a\nhref=\"https://fosdem.org/2025/schedule/event/fosdem-2025-6003-flow-battery-research-collective-building-an-open-source-battery-for-stationary-storage/\"&gt;Building\nan Open-Source Battery for Stationary Storage&lt;/a&gt;\" in the \"&lt;a\nhref=\"https://fosdem.org/2025/schedule/track/energy/\"&gt;Energy: Accelerating\nthe Transition through Open Source&lt;/a&gt;\" developer room (devroom).\n</description>\n\t\t\t<pubDate>Thu, 06 Mar 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for March 6, 2025</title>\n\t\t\t<link>https://lwn.net/Articles/1012147/</link>\n\t\t\t<guid>https://lwn.net/Articles/1012147/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>Inside this week's LWN.net Weekly Edition:\n        &lt;p&gt;\n        &lt;ul&gt;\n&lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1012147/\"&gt;Front&lt;/a&gt;: Firefox forks; Bend and Vine; FineIBT; Guard pages; Fedora's Flatpak packaging; Zotero.\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1012149/\"&gt;Briefs&lt;/a&gt;: LFS 12.3; FerretDB 2.0; Firefox; Fish 4.0; Incus 6.10; Thunderbird 136.0; Xen 4.20; Quotes; ...\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1012150/\"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.\n            &lt;/ul&gt;\n\n        </description>\n\t\t\t<pubDate>Thu, 13 Mar 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Two new graph-based functional programming languages</title>\n\t\t\t<link>https://lwn.net/Articles/1011803/</link>\n\t\t\t<guid>https://lwn.net/Articles/1011803/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nFunctional programming languages have a long association with graphs. In the\n1990s, it was even thought that parallel graph-reduction\narchitectures could make functional programming languages much faster than their\nimperative counterparts. Alas, that prediction mostly failed to materialize.\nEven though graphs are still used as a theoretical formalism in order to define\nand optimize functional languages (such as Haskell's\n&lt;a href=\"https://www.microsoft.com/en-us/research/publication/implementing-lazy-functional-languages-on-stock-hardware-the-spineless-tagless-g-machine/\"&gt;\nspineless tagless graph-machine&lt;/a&gt;), they are still mostly compiled down to the same old\nnon-parallel assembly code that every other language uses. Now, two\nprojects —\n&lt;a href=\"https://higherorderco.com/\"&gt;\nBend&lt;/a&gt; and\n&lt;a href=\"https://vine.dev/\"&gt;\nVine&lt;/a&gt; — have sprung up attempting to change that, and prove that\nparallel graph reduction can be a useful technique for real programs.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 13 Mar 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for March 13, 2025</title>\n\t\t\t<link>https://lwn.net/Articles/1013184/</link>\n\t\t\t<guid>https://lwn.net/Articles/1013184/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>Inside this week's LWN.net Weekly Edition:\n        &lt;p&gt;\n        &lt;ul&gt;\n&lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1013184/\"&gt;Front&lt;/a&gt;: PyPI terms of service; Zig 0.14; Matrix; Timer IDs and ABI; Module integrity checking; Capability analysis.\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1013186/\"&gt;Briefs&lt;/a&gt;: Path traversal; Below vulnerability; Ubuntu 25.04; Flang; Gstreamer 1.26.0; Framework Mono 6.14.0; Quotes; ...\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1013187/\"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.\n            &lt;/ul&gt;\n\n        </description>\n\t\t\t<pubDate>Thu, 20 Mar 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>New terms of service for PyPI</title>\n\t\t\t<link>https://lwn.net/Articles/1012954/</link>\n\t\t\t<guid>https://lwn.net/Articles/1012954/</guid>\n\t\t\t<dc:creator>jake</dc:creator>\n\t\t\t<description>On February 25, the &lt;a href=\"https://www.python.org/psf-landing/\"&gt;Python\nSoftware Foundation&lt;/a&gt; (PSF), which runs the &lt;a\nhref=\"https://pypi.org/\"&gt;Python Package Index&lt;/a&gt; (PyPI), &lt;a\nhref=\"https://blog.pypi.org/posts/2025-02-25-terms-of-service/\"&gt;announced&lt;/a&gt;\nnew &lt;a href=\"https://policies.python.org/pypi.org/Terms-of-Service/\"&gt;terms\nof service&lt;/a&gt; (ToS) for the repository.  That has led to some questions\nabout the new ToS, and the process of coming up with them.  For one thing, the previous &lt;a\nhref=\"https://policies.python.org/pypi.org/Terms-of-Use/\"&gt;terms\nof use&lt;/a&gt; for the service were shorter and simpler, but there are other\nconcerns with specific wording in the new agreement.\n</description>\n\t\t\t<pubDate>Thu, 20 Mar 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Zig's 0.14 release inches the project toward stability</title>\n\t\t\t<link>https://lwn.net/Articles/1012809/</link>\n\t\t\t<guid>https://lwn.net/Articles/1012809/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nThe &lt;a href=\"https://ziglang.org/\"&gt;Zig&lt;/a&gt; project has\n&lt;a href=\"https://ziglang.org/download/0.14.0/release-notes.html\"&gt;\nannounced&lt;/a&gt; the release of the 0.14 version of the language,\nincluding changes from more than 250 contributors. Zig is a low-level,\nmemory-unsafe programming language that aims to compete with C instead of\ndepending on it. Even though the language has not yet had a stable release,\nthere are a number of projects using it as an alternative to C with better\nmetaprogramming.\nWhile the project's release\nschedule has been a bit inconsistent, with the release of version 0.14 being\n&lt;a href=\"https://ziglang.org/news/0.14.0-delayed/\"&gt;\ndelayed&lt;/a&gt;\nseveral times, the release contains a number of new convenience features,\nbroader architecture support, and the next steps toward removing Zig's\ndependency on LLVM.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 20 Mar 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for March 20, 2025</title>\n\t\t\t<link>https://lwn.net/Articles/1013956/</link>\n\t\t\t<guid>https://lwn.net/Articles/1013956/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>Inside this week's LWN.net Weekly Edition:\n        &lt;p&gt;\n        &lt;ul&gt;\n&lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1013956/\"&gt;Front&lt;/a&gt;: Oxidizr; Spectre mitigations; Frozen pages; Mapcount madness; Open-source risks; /e/OS.\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1013958/\"&gt;Briefs&lt;/a&gt;: Supply chain attacks; SystemRescue 12.00; Casual Make; GIMP 3.0; Git 2.49.0; GNOME 48; PeerTube 7.1; Quotes; ...\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1013959/\"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.\n            &lt;/ul&gt;\n\n        </description>\n\t\t\t<pubDate>Thu, 27 Mar 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Better CPU vulnerability mitigation configuration</title>\n\t\t\t<link>https://lwn.net/Articles/1013640/</link>\n\t\t\t<guid>https://lwn.net/Articles/1013640/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nModern CPUs all have multiple hardware vulnerabilities that the kernel needs to mitigate;\nthe 6.13 kernel has workarounds for 14 security-sensitive CPU bugs just on x86_64.\nSeveral of those have multiple variants,\nor multiple mitigations that apply on different microarchitectures. There are\ndifferent kernel command-line options for each of these mitigations, which leads\nto a confusing situation for users trying to figure out how to configure their\nsystems. David Kaplan recently posted\n&lt;a href=\"https://lwn.net/ml/all/20250310164023.779191-1-david.kaplan@amd.com/\"&gt;\na patch set&lt;/a&gt; that adds a single, unified command-line option for controlling\nmitigations and\nsimplifies the logic for detecting, configuring, and\napplying them as well.\nIf it is merged, the patch set could\nmake it much easier for users to navigate the complicated web of CPU\nvulnerabilities and their mitigations.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 27 Mar 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>A look at /e/OS on tablet hardware</title>\n\t\t\t<link>https://lwn.net/Articles/1006557/</link>\n\t\t\t<guid>https://lwn.net/Articles/1006557/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;&lt;a href=\"https://e.foundation/e-os/\"&gt;/e&amp;#8288;/&amp;#8288;OS&lt;/a&gt; is a\nprivacy-centric, open-source mobile operating system that\nhas primarily been targeted at mobile phones, with only a few\ncommunity supported images available for tablet devices. In December,\n&lt;a href=\"https://murena.com/\"&gt;Murena&lt;/a&gt;&amp;mdash;a company that sells devices with /&amp;#8288;e&amp;#8288;/&amp;#8288;OS\npreinstalled&amp;mdash;&lt;a\nhref=\"https://murena.com/finally-here-the-long-awaited-murena-pixel-tablet-is-now-on-pre-sale/\"&gt;announced&lt;/a&gt;\nthat /&amp;#8288;e&amp;#8288;/&amp;#8288;OS now officially supports tablets as well, starting with the\nPixel tablet. The user experience is close enough to\nmainstream alternatives to make it attractive, but there are some\nunder-the-hood problems that may give users pause.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 27 Mar 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for March 27, 2025</title>\n\t\t\t<link>https://lwn.net/Articles/1014881/</link>\n\t\t\t<guid>https://lwn.net/Articles/1014881/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>Inside this week's LWN.net Weekly Edition:\n        &lt;p&gt;\n        &lt;ul&gt;\n&lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1014881/\"&gt;Front&lt;/a&gt;: Open source in government; OSI election; Memory-management medley; Address-space isolation; CMA; 6.14 Development stats; State of the page.\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1014883/\"&gt;Briefs&lt;/a&gt;: Asahi Linux progress; Reproducible Debian; rpi-image-gen; Neovim 0.11; OpenH264; Quotes; ...\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1014884/\"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.\n            &lt;/ul&gt;\n\n        </description>\n\t\t\t<pubDate>Thu, 03 Apr 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>The state of the page in 2025</title>\n\t\t\t<link>https://lwn.net/Articles/1015320/</link>\n\t\t\t<guid>https://lwn.net/Articles/1015320/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The &lt;a href=\"https://lwn.net/Articles/849538/\"&gt;folio transition&lt;/a&gt; is one of the most\nfundamental kernel changes ever made; it can be thought of as being similar\nto replacing the foundation of a building while it remains open for\nbusiness.  So it is not surprising that, for some years, the annual Linux\nStorage, Filesystem, Memory-Management, and BPF Summit has included a\nsession on the state of this transition.  The 2025 Summit was no exception,\nwith Matthew Wilcox updating the group on what has been accomplished, what\nremains to be done, and where some of the significant problems are.\n</description>\n\t\t\t<pubDate>Thu, 03 Apr 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for April 3, 2025</title>\n\t\t\t<link>https://lwn.net/Articles/1015512/</link>\n\t\t\t<guid>https://lwn.net/Articles/1015512/</guid>\n\t\t\t<dc:creator>jake</dc:creator>\n\t\t\t<description>Inside this week's LWN.net Weekly Edition:\n        &lt;p&gt;\n        &lt;ul&gt;\n&lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1015512/\"&gt;Front&lt;/a&gt;: Calibre 8.0; Fedora reproducibility; OpenWrt One; 6.15 Merge Window; LSFMM+BPF coverage including BPF in GCC, Rust merging process, and more.\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1015514/\"&gt;Briefs&lt;/a&gt;: Ubuntu namespaces; New FPL; PorteuX 2.0; Firefox 137.0; GCC Rust; Rockbox 4.0; Rust specification; Thundermail; Dave Täht RIP; Quotes; ...\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1015515/\"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.\n            &lt;/ul&gt;\n\n        </description>\n\t\t\t<pubDate>Thu, 10 Apr 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Catching up with calibre</title>\n\t\t\t<link>https://lwn.net/Articles/1015226/</link>\n\t\t\t<guid>https://lwn.net/Articles/1015226/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;Saying that &lt;a href=\"https://calibre-ebook.com/\"&gt;calibre&lt;/a&gt; is\nebook-management software undersells the application by a fair\nmargin. Calibre is an open-source Swiss Army knife for ebooks that can\nbe used for everything from creating ebooks, converting ebooks from\nobscure formats to modern formats like EPUB, to serving up an ebook\nlibrary over the web. The most recent major release, &lt;a\nhref=\"https://calibre-ebook.com/new-in/seventeen\"&gt;calibre&amp;#160;8.0&lt;/a&gt;,\nbrings a better text-to-speech engine, a tool for creating audio\noverlays when authoring ebooks, support for profiles in the ebook\nviewer, and more.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 10 Apr 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>An update on GCC BPF support</title>\n\t\t\t<link>https://lwn.net/Articles/1015747/</link>\n\t\t\t<guid>https://lwn.net/Articles/1015747/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nJosé Marchesi and David Faust kicked off the BPF track at the 2025 Linux Storage,\nFilesystem, Memory-Management, and BPF Summit with an extra-long session on what\nthey have been doing to support compiling to BPF in GCC. Overall, the project is slowly working\ntoward full support for BPF, with most of the self-tests now passing using\nFaust's in-progress patches. However, the progress toward that goal has turned up\na number of problems with how Clang supports BPF that needed to be discussed at\nlength to find a path forward for both projects.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 10 Apr 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for April 10, 2025</title>\n\t\t\t<link>https://lwn.net/Articles/1016366/</link>\n\t\t\t<guid>https://lwn.net/Articles/1016366/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>Inside this week's LWN.net Weekly Edition:\n        &lt;p&gt;\n        &lt;ul&gt;\n&lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1016366/\"&gt;Front&lt;/a&gt;: Debian project leader election; 6.15 Merge window; Lots of LSFMM coverage; Joplin.\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1016368/\"&gt;Briefs&lt;/a&gt;: Firefox hardening; OpenSSH 10.0; Supply chain security; FreeDOS 1.4; OpenSSL 3.5.0; Rust 1.86.0; Quotes; ...\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1016369/\"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.\n            &lt;/ul&gt;\n\n        </description>\n\t\t\t<pubDate>Thu, 17 Apr 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>An update on torn-write protection</title>\n\t\t\t<link>https://lwn.net/Articles/1016406/</link>\n\t\t\t<guid>https://lwn.net/Articles/1016406/</guid>\n\t\t\t<dc:creator>jake</dc:creator>\n\t\t\t<description>In a combined storage and filesystem track session at the \n2025 Linux Storage, Filesystem, Memory Management, and BPF Summit, John\nGarry continued the theme of \"untorn\" (or atomic) writes that started in &lt;a\nhref=\"https://lwn.net/Articles/1016015/\"&gt;the previous session&lt;/a&gt;.  It was also\nan update on where things have gone for untorn writes since his &lt;a\nhref=\"https://lwn.net/Articles/974578/\"&gt;session at last year's summit&lt;/a&gt;.  Beyond that,\nhe looked at some of the plans and challenges for the feature in the future.\n</description>\n\t\t\t<pubDate>Thu, 17 Apr 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Debian Project Leader election 2025 edition</title>\n\t\t\t<link>https://lwn.net/Articles/1016107/</link>\n\t\t\t<guid>https://lwn.net/Articles/1016107/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;Four candidates have stepped up to run in the &lt;a\nhref=\"https://www.debian.org/vote/2025/vote_001\"&gt;2025 Debian Project\nLeader&lt;/a&gt; (DPL) election. &lt;a\nhref=\"https://www.debian.org/vote/2025/platforms/tille\"&gt;Andreas\nTille&lt;/a&gt;, who is in his first term as DPL, is running again. &lt;a\nhref=\"https://www.debian.org/vote/2025/platforms/srud\"&gt;Sruthi\nChandran&lt;/a&gt;, &lt;a\nhref=\"https://www.debian.org/vote/2025/platforms/locutusofborg\"&gt;Gianfranco\nCostamagna&lt;/a&gt;, and &lt;a\nhref=\"https://www.debian.org/vote/2025/platforms/jak\"&gt;Julian Andres\nKlode&lt;/a&gt; are the other candidates running for a chance to serve a\nterm as DPL. The campaigning phase ended on April&amp;#160;5, and Debian\nmembers began voting on April&amp;#160;6. Voting ends on\nApril&amp;#160;19. This year, the campaign period has been lively and\nsometimes contentious, touching on problems with Debian team\ndelegations and finances.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 17 Apr 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>A new type of spinlock for the BPF subsystem</title>\n\t\t\t<link>https://lwn.net/Articles/1016674/</link>\n\t\t\t<guid>https://lwn.net/Articles/1016674/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nThe 6.15 merge window saw the inclusion of a new type of lock for BPF programs:\na resilient queued spinlock that Kumar Kartikeya Dwivedi has been working on\nfor some time. Eventually, he hopes to convert all of the spinlocks currently\nused in the BPF subsystem to his new lock.\nHe gave a remote presentation about the design of the lock at the\n2025 Linux Storage, Filesystem,\nMemory-Management, and BPF summit.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 17 Apr 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for April 17, 2025</title>\n\t\t\t<link>https://lwn.net/Articles/1017012/</link>\n\t\t\t<guid>https://lwn.net/Articles/1017012/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>Inside this week's LWN.net Weekly Edition:\n        &lt;p&gt;\n        &lt;ul&gt;\n&lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1017012/\"&gt;Front&lt;/a&gt;: APT 3.0; Fedora 42; Lots more LSFMM+BPF coverage.\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1017014/\"&gt;Briefs&lt;/a&gt;: CVE funding; Yelp vulnerability; Fedora 42; Manjaro 25.0; GCC 15; Pinta 3.0; Quotes; ...\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1017015/\"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.\n            &lt;/ul&gt;\n\n        </description>\n\t\t\t<pubDate>Thu, 24 Apr 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>What's new in APT 3.0</title>\n\t\t\t<link>https://lwn.net/Articles/1017315/</link>\n\t\t\t<guid>https://lwn.net/Articles/1017315/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;Debian's &lt;a href=\"https://salsa.debian.org/apt-team/apt#apt\"&gt;Advanced Package Tool&lt;/a&gt; (APT) is the suite of utilities that handle package\nmanagement on Debian and Debian-derived operating systems. APT recently received a\nmajor upgrade to 3.0 just in time for inclusion in &lt;a\nhref=\"https://www.debian.org/releases/trixie/releasenotes\"&gt;Debian&amp;#160;13&lt;/a&gt;\n(\"trixie\"), which is planned for release sometime in 2025. The version bump is\nwarranted; the latest APT has user-interface improvements, switches to &lt;a\nhref=\"https://sequoia-pgp.org/projects/\"&gt;Sequoia&lt;/a&gt; to verify package\nsignatures, and includes solver3&amp;mdash;a new &lt;a\nhref=\"https://en.wikipedia.org/wiki/Solver\"&gt;solver&lt;/a&gt; that is designed to improve\nhow it evaluates and resolves package dependencies.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 24 Apr 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Parallel directory operations</title>\n\t\t\t<link>https://lwn.net/Articles/1017477/</link>\n\t\t\t<guid>https://lwn.net/Articles/1017477/</guid>\n\t\t\t<dc:creator>jake</dc:creator>\n\t\t\t<description>Allowing directories to be modified in parallel was the topic of Jeff\nLayton's filesystem-track session at the 2025 Linux Storage, Filesystem,\nMemory Management, and BPF Summit (LSFMM+BPF).  There are certain use\ncases, including for the NFS and Lustre filesystems, as mentioned in a &lt;a\nhref=\"https://lwn.net/ml/all/20241220030830.272429-1-neilb%40suse.de/\"&gt;patch set&lt;/a&gt;\nreferenced in the &lt;a\nhref=\"https://lwn.net/ml/all/f78f4a5e86c10d723fd60d51a52dd727924fed3a.camel%40kernel.org/\"&gt;topic\nproposal&lt;/a&gt;, where contention in creating multiple files in a directory is\ncausing noticeable performance problems.  In some testing, Layton has found\nthat the inode read-write semaphore (&lt;tt&gt;i_rwsem&lt;/tt&gt;) for the directory is\nserializing operations; he wanted to discuss alternatives.\n</description>\n\t\t\t<pubDate>Thu, 24 Apr 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Taking BPF programs beyond one-million instructions</title>\n\t\t\t<link>https://lwn.net/Articles/1017116/</link>\n\t\t\t<guid>https://lwn.net/Articles/1017116/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nThe BPF verifier is not magic; it cannot solve the\n&lt;a href=\"https://en.wikipedia.org/wiki/Halting_problem\"&gt;\nhalting problem&lt;/a&gt;. Therefore,\nit has to err on the side of assuming that a program will run too long if it\ncannot prove that the program will not.\nThe ultimate check on the size of a BPF program is the\none-million-instruction limit — the verifier will refuse to process more than\none-million instructions, no matter what a BPF program does. Alexei Starovoitov gave\na talk at the 2025 Linux Storage, Filesystem,\nMemory-Management, and BPF Summit about that limit,\nwhy correctly written BPF programs shouldn't hit it, and how to make the user\nexperience of large BPF programs better in the future.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 24 Apr 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for April 24, 2025</title>\n\t\t\t<link>https://lwn.net/Articles/1017842/</link>\n\t\t\t<guid>https://lwn.net/Articles/1017842/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>Inside this week's LWN.net Weekly Edition:\n        &lt;p&gt;\n        &lt;ul&gt;\n&lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1017842/\"&gt;Front&lt;/a&gt;: Owen Le Blanc and MCC; UID/GID drift; DMA for UIO; More LSFMM+BPF 2025 coverage.\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1017844/\"&gt;Briefs&lt;/a&gt;: EU OS; RISC-V Fedora; Ubuntu 25.04; NLnet funding; Template strings; Tor Browser 14.5; Quotes; ...\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1017845/\"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.\n            &lt;/ul&gt;\n\n        </description>\n\t\t\t<pubDate>Thu, 01 May 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Addressing UID/GID drift in rpm-ostree and bootc</title>\n\t\t\t<link>https://lwn.net/Articles/1018082/</link>\n\t\t\t<guid>https://lwn.net/Articles/1018082/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;The Fedora Project is looking for solutions to an interesting\nproblem with its image-based editions and spins, such as the &lt;a\nhref=\"https://fedoraproject.org/atomic-desktops/\"&gt;Atomic Desktops&lt;/a&gt;\nor &lt;a href=\"https://fedoraproject.org/coreos/\"&gt;CoreOS&lt;/a&gt;, that are\ncreated with &lt;a\nhref=\"https://coreos.github.io/rpm-ostree/\"&gt;rpm-ostree&lt;/a&gt; or &lt;a\nhref=\"https://bootc-dev.github.io/bootc/\"&gt;bootc&lt;/a&gt;. If a package that\nis part of a image-based version has a user or group created\ndynamically on installation, and it owns files installed on the\nsystem, the system may be subject to user ID (UID) and group ID (GID) \"drift\"\non updates. This  \"&lt;span class=\"nobreak\"&gt;UID/GID drift&lt;/span&gt;\" may come about when a new image with\nupdates is generated, and therefore files may have the wrong\nownership. This can have side-effects ranging from mildly inconvenient to\nserious. No solutions have been adopted just yet, but there are a few\nideas on how to deal with the problem.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 01 May 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>VFS write barriers</title>\n\t\t\t<link>https://lwn.net/Articles/1017947/</link>\n\t\t\t<guid>https://lwn.net/Articles/1017947/</guid>\n\t\t\t<dc:creator>jake</dc:creator>\n\t\t\t<description>In the filesystem track at the 2025 Linux Storage, Filesystem, Memory\nManagement, and BPF Summit (LSFMM+BPF), Amir Goldstein wanted to resume\ndiscussing\na feature that he had briefly introduced at the end of a &lt;a\nhref=\"https://lwn.net/Articles/932415/\"&gt;2023 summit session&lt;/a&gt;: filesystem \"write\nbarriers\".  The idea is to have an operation that would wait for any\nin-flight &lt;a\nhref=\"https://www.man7.org/linux/man-pages/man2/write.2.html\"&gt;&lt;tt&gt;write()&lt;/tt&gt;&lt;/a&gt;\nsystem calls, but not block any new &lt;tt&gt;write()&lt;/tt&gt; calls as bigger\nhammers, such as freezing the filesystem,\nwould do.  His prototype implementation is used by a &lt;a\nhref=\"https://en.wikipedia.org/wiki/Hierarchical_storage_management\"&gt;hierarchical\nstorage management&lt;/a&gt; (HSM) system to create a crash-consistent\nchange log, but there may be other use cases to consider.  He &lt;a\nhref=\"https://lwn.net/ml/all/CAOQ4uxj00D_fP3nRUBjAry6vwUCNjYuUpCZg2Uc8hwMk6n%2B2HA%40mail.gmail.com/\"&gt;wanted\nto discuss&lt;/a&gt; implementation options and the possibility of providing an\nAPI for user-space applications.\n</description>\n\t\t\t<pubDate>Thu, 01 May 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for May 1, 2025</title>\n\t\t\t<link>https://lwn.net/Articles/1018680/</link>\n\t\t\t<guid>https://lwn.net/Articles/1018680/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>Inside this week's LWN.net Weekly Edition:\n        &lt;p&gt;\n        &lt;ul&gt;\n&lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1018680/\"&gt;Front&lt;/a&gt;: Mailman 2 vulnerabilities; AI in Debian; __nonstring__; Cache-aware scheduling; Freezing filesystems; Socket-level storage; Debugging information; LWN in 2025.\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1018682/\"&gt;Briefs&lt;/a&gt;: Debian election; Kali Linux key; OpenBSD 7.7; Firefox 138.0; GCC 15.1; Meson 1.8.0; Valgrind 3.25.0; FSF review; OSI retrospective; Mastodon; Quotes; ...\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1018683/\"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.\n            &lt;/ul&gt;\n\n        </description>\n\t\t\t<pubDate>Thu, 08 May 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>The mystery of the Mailman 2 CVEs</title>\n\t\t\t<link>https://lwn.net/Articles/1019149/</link>\n\t\t\t<guid>https://lwn.net/Articles/1019149/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;Many eyebrows were raised recently when three vulnerabilities were announced\nthat allegedly impact &lt;a\nhref=\"https://www.gnu.org/software/mailman/\"&gt;GNU&amp;#160;Mailman&lt;/a&gt; 2.1,\nsince many folks assumed that it was no longer being supported. That's\nnot quite the case. Even though &lt;a\nhref=\"https://wiki.list.org/DEV/Mailman%203.0\"&gt;version&amp;#160;3&lt;/a&gt; of\nthe GNU Mailman mailing-list manager has been available\nsince&amp;#160;2015, and version&amp;#160;2 was declared (mostly) end of life\n(EOL) in&amp;#160;2020, there are still plenty of users and projects still\nusing version&amp;#160;2.1.x. There is, as it turns out, a big difference between\n&lt;em&gt;mostly&lt;/em&gt; EOL and &lt;em&gt;actually&lt;/em&gt; EOL. For example: &lt;a\nhref=\"https://www.webpros.com/\"&gt;WebPros&lt;/a&gt;, the company behind the &lt;a\nhref=\"https://cpanel.net/\"&gt;cPanel&lt;/a&gt; server and web-site-management\nplatform, still maintains a &lt;a\nhref=\"https://github.com/cpanel/mailman2-python3\"&gt;port of\nMailman&amp;#160;2.1.x&lt;/a&gt; to Python&amp;#160;3 for its customers and was\nquick to respond to reports of vulnerabilities. However, the\ncompany and upstream Mailman project dispute that the CVEs are\nvalid.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 08 May 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Better debugging information for inlined kernel functions</title>\n\t\t\t<link>https://lwn.net/Articles/1018475/</link>\n\t\t\t<guid>https://lwn.net/Articles/1018475/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nModern compilers perform a lot of optimizations, which can complicate debugging.\nSong Liu and Thierry Treyer spoke about a potential improvement to\n&lt;a href=\"https://www.kernel.org/doc/html/latest/bpf/btf.html\"&gt;\nBPF Type Format&lt;/a&gt; (BTF) debugging information that could partially combat that\nproblem at the 2025 Linux Storage, Filesystem,\nMemory-Management, and BPF Summit.\nThey want to add information on selectively inlined functions to BTF in order to\nbetter support tracing tools.\nTreyer participated remotely.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 08 May 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for May 8, 2025</title>\n\t\t\t<link>https://lwn.net/Articles/1019557/</link>\n\t\t\t<guid>https://lwn.net/Articles/1019557/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>Inside this week's LWN.net Weekly Edition:\n        &lt;p&gt;\n        &lt;ul&gt;\n&lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1019557/\"&gt;Front&lt;/a&gt;: Debian and essential packages; Custom BPF OOM killers; Speculation barriers for BPF programs; More LSFMM+BPF 2025 coverage.\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1019559/\"&gt;Briefs&lt;/a&gt;: Deepin on openSUSE; AUTOSEL; Mission Center 1.0.0; OASIS ODF; Redis license; USENIX ATC; Quotes; ...\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1019560/\"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.\n            &lt;/ul&gt;\n\n        </description>\n\t\t\t<pubDate>Thu, 15 May 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Hash table memory usage and a BPF interpreter bug</title>\n\t\t\t<link>https://lwn.net/Articles/1019667/</link>\n\t\t\t<guid>https://lwn.net/Articles/1019667/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nAnton Protopopov led a short discussion at the 2025 Linux Storage, Filesystem,\nMemory-Management, and BPF Summit about amount of memory used\nby hash tables in BPF programs. He thinks that the current memory layout is\ninefficient, and wants to split the structure that holds table entries into two\nvariants for different kinds of maps. When that proposal proved\nuncontroversial, he also took the chance to talk about a bug in BPF's call\ninstruction.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 15 May 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Debian's AWKward essential set</title>\n\t\t\t<link>https://lwn.net/Articles/1019898/</link>\n\t\t\t<guid>https://lwn.net/Articles/1019898/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;The Debian project has the concept of &lt;a\nhref=\"https://www.debian.org/doc/debian-policy/ch-binary.html#essential-packages\"&gt;essential\npackages&lt;/a&gt;, which provide the bare minimum functionality considered\nabsolutely necessary (or \"essential\") for a system to\nfunction. Packages tagged as essential, and the packages that are\nrequired by the set of essential packages, are always installed as\npart of a Debian system. However, Debian's packaging rules do not\nrequire developers to explicitly declare dependencies on that set of\npackages (the essential set) but they can simply rely on the fact that those\nwill always be present. That means that changing the essential set, as\nthe project may wish to do occasionally, is more complicated than it\nshould be. This came to light recently when a Debian developer asked\nwhat might be required to remove &lt;a\nhref=\"https://linux.die.net/man/1/mawk\"&gt;&lt;tt&gt;mawk&lt;/tt&gt;&lt;/a&gt; to slim down\nthe project's container images.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 15 May 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for May 15, 2025</title>\n\t\t\t<link>https://lwn.net/Articles/1020448/</link>\n\t\t\t<guid>https://lwn.net/Articles/1020448/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>Inside this week's LWN.net Weekly Edition:\n        &lt;p&gt;\n        &lt;ul&gt;\n&lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1020448/\"&gt;Front&lt;/a&gt;: Home Assistant; YaST; bpfilter; Flatpak; More LSFMM+BPF 2025 coverage.\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1020450/\"&gt;Briefs&lt;/a&gt;: Screen security; Guix on Codeberg; Postgres I/O; GNOME executive director; Nextcloud blog; Podman 5.5.0; OSL sustainability; Quotes; ...\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1020451/\"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.\n            &lt;/ul&gt;\n\n        </description>\n\t\t\t<pubDate>Thu, 22 May 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>The future of Flatpak</title>\n\t\t\t<link>https://lwn.net/Articles/1020571/</link>\n\t\t\t<guid>https://lwn.net/Articles/1020571/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;At the &lt;a href=\"https://linuxappsummit.org/\"&gt;Linux Application\nSummit&lt;/a&gt; (LAS) in April, Sebastian Wick said that, by many metrics, &lt;a\nhref=\"https://flatpak.org/\"&gt;Flatpak&lt;/a&gt; is doing great. The Flatpak\napplication-packaging format is popular with upstream developers, and\nwith many users. More and more applications are being published in the\n&lt;a href=\"https://flathub.org/\"&gt;Flathub&lt;/a&gt; application store, and the\nformat is even being adopted by Linux distributions like\nFedora. However, he worried that work on the Flatpak project itself\nhad stagnated, and that there were too few developers able to review\nand merge code beyond basic maintenance.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 22 May 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Faster firewalls with bpfilter</title>\n\t\t\t<link>https://lwn.net/Articles/1017705/</link>\n\t\t\t<guid>https://lwn.net/Articles/1017705/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nFrom\nservers in a data center to desktop computers, many devices\ncommunicating on a network will eventually have to filter network\ntraffic, whether it's for security or performance reasons. As a result,\nthis is a domain where a lot of work is put into improving performance:\na tiny performance improvement can have considerable gains.\n&lt;a href=\"https://bpfilter.io/\"&gt;\nBpfilter&lt;/a&gt; is a\nproject that allows for packet filtering to easily be done with BPF, which can\nbe faster than other mechanisms.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 22 May 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>A look at what's possible with BPF arenas</title>\n\t\t\t<link>https://lwn.net/Articles/1019885/</link>\n\t\t\t<guid>https://lwn.net/Articles/1019885/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\n&lt;a href=\"https://lwn.net/Articles/961941/\"&gt;\nBPF arenas&lt;/a&gt; are areas of memory where the verifier can safely relax its checking of\npointers, allowing programmers to write arbitrary data structures in BPF. Emil\nTsalapatis reported on how his team has used arenas in writing\n&lt;a href=\"https://lwn.net/Articles/922405/\"&gt;\nsched_ext schedulers&lt;/a&gt; at the 2025 Linux Storage, Filesystem,\nMemory-Management, and BPF Summit. His biggest complaint was about the fact that\nkernel pointers can't be stored in BPF arenas — something that the BPF\ndevelopers hope to address, although there are some implementation problems that\nmust be sorted out first.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 22 May 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for May 22, 2025</title>\n\t\t\t<link>https://lwn.net/Articles/1021258/</link>\n\t\t\t<guid>https://lwn.net/Articles/1021258/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>Inside this week's LWN.net Weekly Edition:\n        &lt;p&gt;\n        &lt;ul&gt;\n&lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1021258/\"&gt;Front&lt;/a&gt;: Home Assistant; Setuptools; Debian AI GR; DMA-mapping API; BPF CI; OSPM 2025\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1021260/\"&gt;Briefs&lt;/a&gt;: Go audit; Oniux; Asahi progress; Rust in FreeBSD; RHEL 10; Rust 1.87.0; RIP John L. Young; Quote; ...\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1021261/\"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.\n            &lt;/ul&gt;\n\n        </description>\n\t\t\t<pubDate>Thu, 29 May 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Recent disruptive changes from Setuptools</title>\n\t\t\t<link>https://lwn.net/Articles/1020576/</link>\n\t\t\t<guid>https://lwn.net/Articles/1020576/</guid>\n\t\t\t<dc:creator>jake</dc:creator>\n\t\t\t<description>In late March, &lt;a\nhref=\"https://pypi.org/project/setuptools/78.0.1/\"&gt;version 78.0.1&lt;/a&gt; of &lt;a\nhref=\"https://setuptools.pypa.io/en/latest/\"&gt;Setuptools&lt;/a&gt; — an important\nPython packaging tool — was released. It was scarcely half an hour before\n&lt;a href=\"https://github.com/pypa/setuptools/issues/4910\"&gt;the first bug\nreport&lt;/a&gt; came in, and it quickly became clear that the change was far\nmore disruptive than anticipated. Within only about five hours &lt;a\nhref=\"https://setuptools.pypa.io/en/latest/history.html#v78-0-2\"&gt;78.0.2 was\npublished to roll back the change&lt;/a&gt;, and multiple discussions were\nstarted about how to limit the damage caused by future breaking\nchanges. Nevertheless, many users still felt the response was\ninadequate. Some previous Setuptools releases have also caused problems on a smaller but still notable scale, and hopefully the developers will be more cautious going forward. But there are also lessons here for the developers of Python package installers, ordinary Python developers and end users, and even Linux distribution maintainers.\n</description>\n\t\t\t<pubDate>Thu, 29 May 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>An update on continuous testing of BPF kernel patches</title>\n\t\t\t<link>https://lwn.net/Articles/1020266/</link>\n\t\t\t<guid>https://lwn.net/Articles/1020266/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nIhor Solodrai has been working on the BPF subsystem's continuous-integration\n(CI) testing for the last six months. At the 2025 Linux Storage, Filesystem,\nMemory-Management, and BPF Summit, he remotely shared\nan update on his work, and solicited feedback on how the tests could be further\nimproved. Much of the work he's done has been specific to the BPF subsystem, but\nsome is more generic and could potentially be of use to other subsystems. He\nalso shared some general lessons learned from working on the BPF CI tests.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 29 May 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Debian AI General Resolution withdrawn</title>\n\t\t\t<link>https://lwn.net/Articles/1020968/</link>\n\t\t\t<guid>https://lwn.net/Articles/1020968/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;Despite careful planning and months of warning, Debian developer Mo\nZhou has acknowledged that the project needs more time to grapple with\nthe questions around AI models and the Debian Free Software Guidelines\n(DFSG). For now, he has withdrawn his proposed General Resolution (GR)\nthat would have required the original training data for AI models to\nbe released in order to be considered DFSG-compliant&amp;mdash;though the\ndebates on the topic continue.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 29 May 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for May 29, 2025</title>\n\t\t\t<link>https://lwn.net/Articles/1022134/</link>\n\t\t\t<guid>https://lwn.net/Articles/1022134/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>Inside this week's LWN.net Weekly Edition:\n        &lt;p&gt;\n        &lt;ul&gt;\n&lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1022134/\"&gt;Front&lt;/a&gt;: Glibc security; How we lost the Internet; Encrypted DNS; 6.15 Development statistics; Filesystem stress-testing; BPF verifier; Network access from BPF; OSPM 2025.\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1022136/\"&gt;Briefs&lt;/a&gt;: AlmaLinux 10.0; FESCo decision overturned; NixOS 25.05; Pocket, Launchpad retired; Quotes; ...\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1022137/\"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.\n            &lt;/ul&gt;\n\n        </description>\n\t\t\t<pubDate>Thu, 05 Jun 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Glibc project revisits infrastructure security</title>\n\t\t\t<link>https://lwn.net/Articles/1021837/</link>\n\t\t\t<guid>https://lwn.net/Articles/1021837/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;The &lt;a href=\"https://sourceware.org/glibc/\"&gt;GNU C Library&lt;/a&gt;\n(glibc) is the core C library for most Linux distributions, so it is a \ncrucial part of the open-source &lt;span class=\"nobreak\"&gt;ecosystem&amp;mdash;and&lt;/span&gt; an attractive\ntarget for any attackers looking to carry out supply-chain\nattacks. With that being the case, securing the project's\ninfrastructure using industry best practices and improving the\nsecurity of its development practices are a frequent topic among glibc\ndevelopers. A recent discussion suggests that improvements are not\nhappening as quickly as some would like.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 05 Jun 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Allowing BPF programs more access to the network</title>\n\t\t\t<link>https://lwn.net/Articles/1022034/</link>\n\t\t\t<guid>https://lwn.net/Articles/1022034/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nMahé Tardy led two sessions about some of the challenges that he, Kornilios Kourtis,\nand John Fastabend have run into in their work on\n&lt;a href=\"https://tetragon.io/\"&gt;\nTetragon&lt;/a&gt; (Apache-licensed BPF-based security monitoring software)\nat the Linux Storage, Filesystem, Memory Management, and BPF Summit. The session\nprompted discussion about the feasibility of letting BPF programs\nsend data over the network, as well as potential new kfuncs to let BPF firewalls\nsend TCP reset packets. Tardy presented several possible ways that these could\nbe accomplished.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 05 Jun 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>System-wide encrypted DNS</title>\n\t\t\t<link>https://lwn.net/Articles/1021357/</link>\n\t\t\t<guid>https://lwn.net/Articles/1021357/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;The increasing sophistication of attackers has organizations\nrealizing that perimeter-based security models are inadequate. Many\nare planning to transition their internal networks to a &lt;a\nhref=\"https://en.wikipedia.org/wiki/Zero_trust_architecture\"&gt;zero-trust\narchitecture&lt;/a&gt;. This requires every communication on the network to\nbe encrypted, authenticated, and authorized. This can be achieved in\napplications and services by using modern communication\nprotocols. However, the world still depends on Domain Name System\n(DNS) services where encryption, while possible, is far from being the\nindustry standard. To address this we, as part of a working group at\nRed Hat, worked on fully integrating encrypted DNS for Linux\nsystems&amp;mdash;not only while the system is running but also during the\ninstallation and boot process, including support for a custom\ncertificate chain in the initial ramdisk. This integration is now\navailable in CentOS&amp;#160;Stream&amp;#160;9, 10, and the upcoming\nFedora&amp;#160;43 release.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 05 Jun 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for June 5, 2025</title>\n\t\t\t<link>https://lwn.net/Articles/1022979/</link>\n\t\t\t<guid>https://lwn.net/Articles/1022979/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>Inside this week's LWN.net Weekly Edition:\n        &lt;p&gt;\n        &lt;ul&gt;\n&lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1022979/\"&gt;Front&lt;/a&gt;: OpenH264 in Fedora; Wallabag; Safety certification; 6.16 Merge window; Bounce buffering; Hardening repository problems; Device-initiated I/O; Faster networking; OSPM 2025; Free software in science.\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1022981/\"&gt;Briefs&lt;/a&gt;: Kea vulnerabilities; Alpine Linux 3.22.0; Fedora strategy; Quotes; ...\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1022982/\"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.\n            &lt;/ul&gt;\n\n        </description>\n\t\t\t<pubDate>Thu, 12 Jun 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Device-initiated I/O</title>\n\t\t\t<link>https://lwn.net/Articles/1022718/</link>\n\t\t\t<guid>https://lwn.net/Articles/1022718/</guid>\n\t\t\t<dc:creator>jake</dc:creator>\n\t\t\t<description>&lt;a href=\"https://lwn.net/Articles/767281/\"&gt;Peer-to-peer DMA&lt;/a&gt; (P2PDMA) has been part of\nthe kernel since the &lt;a href=\"https://lwn.net/Articles/775487/\"&gt;4.20 release&lt;/a&gt; in 2018;\nit provides a framework that allows devices to transfer data between themselves\ndirectly, without using system RAM for the transfer.  At the 2025 Linux\nStorage, Filesystem, Memory Management, and BPF Summit (LSFMM+BPF), Stephen\nBates led a combined storage, filesystems, and memory-management session on\ndevice-initiated I/O, which is perhaps what P2PDMA is evolving toward.  Two\nyears ago, he led a &lt;a href=\"https://lwn.net/Articles/931668/\"&gt;session on P2PDMA&lt;/a&gt; at the\nsummit; this year's session was a brief update on P2PDMA with a look\nat where it may be heading.\n</description>\n\t\t\t<pubDate>Thu, 12 Jun 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Two sessions on faster networking</title>\n\t\t\t<link>https://lwn.net/Articles/1022648/</link>\n\t\t\t<guid>https://lwn.net/Articles/1022648/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nCong Wang and Daniel Borkmann each led session at the 2025 Linux Storage,\nFilesystem, Memory Management, and BPF Summit about their respective\nplans to speed up networking in the Linux kernel. Both sessions described ways\nto remove unnecessary operations in the networking stack, but they focused on\ndifferent areas. Wang spoke about using BPF to speed up socket operations,\nwhile Borkmann spoke about eliminating the overhead of networking\noperations on virtual machines.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 12 Jun 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>The importance of free software to science</title>\n\t\t\t<link>https://lwn.net/Articles/1023299/</link>\n\t\t\t<guid>https://lwn.net/Articles/1023299/</guid>\n\t\t\t<dc:creator>jake</dc:creator>\n\t\t\t<description>Free software plays a critical role in science, both in research and in\ndisseminating it. Aspects of software freedom are directly relevant to\nsimulation, analysis, document preparation and preservation, security,\nreproducibility, and usability. Free software brings practical and specific\nadvantages, beyond just its ideological roots, to science, while\nproprietary software comes with equally specific risks.  As a practicing\nscientist, I would like to help others—scientists or not—see the benefits\nfrom free software in science.\n</description>\n\t\t\t<pubDate>Thu, 12 Jun 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for June 12, 2025</title>\n\t\t\t<link>https://lwn.net/Articles/1023924/</link>\n\t\t\t<guid>https://lwn.net/Articles/1023924/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>Inside this week's LWN.net Weekly Edition:\n        &lt;p&gt;\n        &lt;ul&gt;\n&lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1023924/\"&gt;Front&lt;/a&gt;: Nyxt; Cyber Resilience Act; Unwanted file descriptors; Core-dump API; 6.16 Merge window; Uniprocessor configurations; Smatch; FUSE zero-copy; iov_iter; Fedora documentation.\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1023926/\"&gt;Briefs&lt;/a&gt;: Android tracking; /e/OS 3.0; FreeBSD laptops; Ubuntu X11 support; Netdev 0x19; OIN anniversary; Quotes; ...\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1023927/\"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.\n            &lt;/ul&gt;\n\n        </description>\n\t\t\t<pubDate>Thu, 19 Jun 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Finding locking bugs with Smatch</title>\n\t\t\t<link>https://lwn.net/Articles/1023646/</link>\n\t\t\t<guid>https://lwn.net/Articles/1023646/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\n&lt;a href=\"https://repo.or.cz/w/smatch.git\"&gt;Smatch&lt;/a&gt; is a GPL-licensed\nstatic-analysis tool for C that has a lot of specialized checks for the kernel. Smatch\nhas &lt;a href=\"https://lwn.net/Articles/691882\"&gt;been used&lt;/a&gt; in the kernel for more than 20 years; Dan\nCarpenter, its primary author, decided last year that some details of its plugin system\nwere due for a rewrite. He spoke at Linaro Connect 2025 about his work on\nSmatch, the changes to its implementation, and how those changes enabled him to easily\nadd additional checks for locking bugs in the kernel.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 19 Jun 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Improving iov_iter</title>\n\t\t\t<link>https://lwn.net/Articles/1023891/</link>\n\t\t\t<guid>https://lwn.net/Articles/1023891/</guid>\n\t\t\t<dc:creator>jake</dc:creator>\n\t\t\t<description>The &lt;a href=\"https://lwn.net/Articles/625077/\"&gt;&lt;tt&gt;iov_iter&lt;/tt&gt; interface&lt;/a&gt; is used to\ndescribe and iterate through buffers in the kernel.  David Howells led a combined storage and\nfilesystem session at \nthe 2025 Linux Storage,\nFilesystem, Memory Management, and BPF Summit (LSFMM+BPF) to discuss ways\nto improve &lt;tt&gt;iov_iter&lt;/tt&gt;.  His &lt;a\nhref=\"https://lwn.net/ml/all/886959.1737148612%40warthog.procyon.org.uk/\"&gt;topic\nproposal&lt;/a&gt; listed a few different ideas including replacing some\n&lt;tt&gt;iov_iter&lt;/tt&gt; types and possibly allowing mixed types in chains of &lt;tt&gt;iov_iter&lt;/tt&gt;\nentries; he would like to make the interface itself and the uses of &lt;tt&gt;iov_iter&lt;/tt&gt; in\nthe kernel better.\n</description>\n\t\t\t<pubDate>Thu, 19 Jun 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>An end to uniprocessor configurations</title>\n\t\t\t<link>https://lwn.net/Articles/1023575/</link>\n\t\t\t<guid>https://lwn.net/Articles/1023575/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The Linux kernel famously scales from the smallest of systems to massive\nservers with thousands of CPUs.  It was not always that way, though; the\ninitial version of the kernel could only manage a single processor.  That\nlimitation was lifted, obviously, but single-processor machines have always\nbeen treated specially in the scheduler.  That longstanding situation may\nsoon come to an end, though, if &lt;a\nhref=\"https://lwn.net/ml/all/20250528080924.2273858-1-mingo@kernel.org\"&gt;this patch\nseries&lt;/a&gt; from Ingo Molnar makes it upstream.\n</description>\n\t\t\t<pubDate>Thu, 19 Jun 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for June 19, 2025</title>\n\t\t\t<link>https://lwn.net/Articles/1025076/</link>\n\t\t\t<guid>https://lwn.net/Articles/1025076/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>Inside this week's LWN.net Weekly Edition:\n        &lt;p&gt;\n        &lt;ul&gt;\n&lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1025076/\"&gt;Front&lt;/a&gt;: GNOME a11y; hierarchical scheduler; CoMaps; GPU restore; FAIR.pm; buffered I/O writeback; NFS; Lustre\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1025078/\"&gt;Briefs&lt;/a&gt;: Rocky Linux 10.0; Git 2.50; KDE Plasma 6.4; Kubernetes Slack; Python Language Summit; Radicle Desktop; Quote; ...\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1025079/\"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.\n            &lt;/ul&gt;\n\n        </description>\n\t\t\t<pubDate>Thu, 26 Jun 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>The hierarchical constant bandwidth server scheduler</title>\n\t\t\t<link>https://lwn.net/Articles/1024757/</link>\n\t\t\t<guid>https://lwn.net/Articles/1024757/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The &lt;a\nhref=\"https://pubs.opengroup.org/onlinepubs/7908799/xsh/realtime.html\"&gt;POSIX\nrealtime model&lt;/a&gt;, which is implemented in the Linux kernel, can ensure\nthat a realtime process obtains the CPU time it needs to get its job done.\nIt can be less effective, though, when there are multiple realtime\nprocesses competing for the available CPU resources.  The &lt;a\nhref=\"https://lwn.net/ml/all/20250605071412.139240-1-yurand2000@gmail.com\"&gt;hierarchical\nconstant bandwidth server&lt;/a&gt; patch series, posted by Yuri Andriaccio with\nwork by Luca Abeni, Alessio Balsini, and Andrea Parri, is a modification to\nthe Linux scheduler intended to make it possible to configure systems with\nmultiple realtime tasks in a deterministic and correct manner.\n</description>\n\t\t\t<pubDate>Thu, 26 Jun 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Getting Lustre upstream</title>\n\t\t\t<link>https://lwn.net/Articles/1025268/</link>\n\t\t\t<guid>https://lwn.net/Articles/1025268/</guid>\n\t\t\t<dc:creator>jake</dc:creator>\n\t\t\t<description>The &lt;a href=\"https://www.lustre.org/\"&gt;Lustre filesystem&lt;/a&gt; has a long\nhistory, some of which intersects with Linux.  It was added to the staging\ntree in 2013, but was &lt;a href=\"https://lwn.net/Articles/756565/\"&gt;bounced out of\nstaging&lt;/a&gt; in 2018, due to a lack of progress and a development model\nthat was incompatible with the kernel's.  Lustre may be working its way\nback into the kernel, though.  In a filesystem-track session at\nthe 2025 Linux Storage, Filesystem, Memory Management, and BPF Summit\n(LSFMM+BPF), Timothy Day and James Simmons led a discussion on how to get\nLustre into the mainline.\n</description>\n\t\t\t<pubDate>Thu, 26 Jun 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>A parallel path for GPU restore in CRIU</title>\n\t\t\t<link>https://lwn.net/Articles/1024747/</link>\n\t\t\t<guid>https://lwn.net/Articles/1024747/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt; The fundamental concept of checkpoint/restore is elegant: capture a\nprocess's state and resurrect it later, perhaps elsewhere. Checkpointing\nmeticulously records a process's memory, open files, CPU state, and more into a\nsnapshot. Restoration then reconstructs the process from this state. This\nestablished technique faces new challenges with GPU-accelerated applications,\nwhere low-latency restoration is crucial for\n&lt;a href='https://criu.org/Usage_scenarios#Fault-tolerant_systems'&gt;fault\ntolerance&lt;/a&gt;, live migration, and\nfast startups. Recently, the restore process for AMD GPUs has been redesigned to\neliminate substantial bottlenecks. &lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 26 Jun 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Enhancing screen-reader functionality in modern GNOME</title>\n\t\t\t<link>https://lwn.net/Articles/1025127/</link>\n\t\t\t<guid>https://lwn.net/Articles/1025127/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;Accessibility features and the work that goes into developing those features\noften tend to be overlooked and are poorly understood by all but the people who actually\ndepend on such features. At Fedora's annual developer conference, &lt;a\nhref=\"https://fedoraproject.org/flock/2025/\"&gt;Flock&lt;/a&gt;, Lukáš Tyrychtr sought to\nimprove understanding and raise awareness about accessibility with his session on &lt;a\nhref=\"https://cfp.fedoraproject.org/flock-to-fedora-2025/talk/NNYFPL/\"&gt;accessibility\nbarriers and screen-reader functionality in GNOME&lt;/a&gt;. His talk provided rare insight\ninto the world of using and developing open-source software for visually-impaired\nusers&amp;mdash;including landing important accessibility improvements in\nthe latest GNOME release.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 26 Jun 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for June 26, 2025</title>\n\t\t\t<link>https://lwn.net/Articles/1025929/</link>\n\t\t\t<guid>https://lwn.net/Articles/1025929/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>Inside this week's LWN.net Weekly Edition:\n        &lt;p&gt;\n        &lt;ul&gt;\n&lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1025929/\"&gt;Front&lt;/a&gt;: Libxml2; GNOME and systemd; Rust in the kernel; Defconfigs; ngnfs, Free-threaded Python; Asterinas.\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1025931/\"&gt;Briefs&lt;/a&gt;: LSFMM+BPF book; tag2upload; PostmarketOS 25.06; Firefox 140.0; NLnet funding; Quotes; ...\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1025932/\"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.\n            &lt;/ul&gt;\n\n        </description>\n\t\t\t<pubDate>Thu, 03 Jul 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Libxml2's \"no security embargoes\" policy</title>\n\t\t\t<link>https://lwn.net/Articles/1025971/</link>\n\t\t\t<guid>https://lwn.net/Articles/1025971/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;&lt;a\nhref=\"https://gitlab.gnome.org/GNOME/libxml2/#libxml2\"&gt;Libxml2&lt;/a&gt;, an\nXML parser and toolkit, is an almost perfect example of the successes\nand failures of the open-source movement. In the 25 years since its\nfirst release, it has been widely adopted by open-source projects, for\nuse in commercial software, and for government use. It also\nillustrates that while many organizations love using open-source software,\nfar fewer have yet to see value in helping to sustain it. That has led\nlibxml2's current maintainer to reject security embargoes and sparked\na discussion about maintenance terms for free and open-source\nprojects.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 03 Jul 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Getting extensions to work with free-threaded Python</title>\n\t\t\t<link>https://lwn.net/Articles/1025893/</link>\n\t\t\t<guid>https://lwn.net/Articles/1025893/</guid>\n\t\t\t<dc:creator>jake</dc:creator>\n\t\t\t<description>One of the biggest changes to come to the Python world is the &lt;a\nhref=\"https://lwn.net/Articles/947138/\"&gt;addition of the free-threading\ninterpreter&lt;/a&gt;, which eliminates the &lt;a\nhref=\"https://docs.python.org/3/glossary.html#term-global-interpreter-lock\"&gt;global\ninterpreter lock&lt;/a&gt; (GIL) that kept the interpreter thread-safe, but also\nserialized multi-threaded Python code.  Over the years, the GIL has been a\nsource of complaints about the scalability of Python code using\nthreads, so many developers have been looking forward to the change, which\nhas been an experimental feature since &lt;a\nhref=\"https://www.python.org/downloads/release/python-3130/\"&gt;Python 3.13\nwas released&lt;/a&gt; in October 2024.  Making the free-threaded version work\nwith the rest of the Python ecosystem, especially native extensions, is an\nongoing effort, however; Nathan Goldbaum and Lysandros Nikolaou spoke at &lt;a\nhref=\"https://us.pycon.org/2025/\"&gt;PyCon US 2025&lt;/a&gt; about those efforts.\n</description>\n\t\t\t<pubDate>Thu, 03 Jul 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for July 3, 2025</title>\n\t\t\t<link>https://lwn.net/Articles/1026982/</link>\n\t\t\t<guid>https://lwn.net/Articles/1026982/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>Inside this week's LWN.net Weekly Edition:\n        &lt;p&gt;\n        &lt;ul&gt;\n&lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1026982/\"&gt;Front&lt;/a&gt;: Kernel features from Python; i686 in Fedora; Kernel development with LLMs; Rust drivers; Load balancing with machine learning; Transparent huge pages.\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1026984/\"&gt;Briefs&lt;/a&gt;: Bcachefs removal; Coccinelle for Rust; Netdev Foundation; Oracle Linux 10; GNU HHIS 5.0; Rust 1.88.0; Quotes; ...\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1026985/\"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.\n            &lt;/ul&gt;\n\n        </description>\n\t\t\t<pubDate>Thu, 10 Jul 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Accessing new kernel features from Python</title>\n\t\t\t<link>https://lwn.net/Articles/1026749/</link>\n\t\t\t<guid>https://lwn.net/Articles/1026749/</guid>\n\t\t\t<dc:creator>jake</dc:creator>\n\t\t\t<description>Every release of the Linux kernel has lots of new features, many of which\nare accessible from user space.  Usually, though, the GNU C Library (glibc)\nand tools that access the Linux user-space API lag behind the kernel\nreleases.  Geoffrey Thomas showed how Python programs can access these new\nkernel features as soon as the kernel is released in his \"What's New in the\nLinux Kernel... from Python\" talk at\n&lt;a\nhref=\"https://us.pycon.org/2025/\"&gt;PyCon US 2025&lt;/a&gt;.  While he had two\nexamples of accessing new kernel features, the real goal of the talk was to\ndemonstrate &lt;i&gt;how&lt;/i&gt; to go about connecting Python to\nthe Linux kernel.\n</description>\n\t\t\t<pubDate>Thu, 10 Jul 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Yet another way to configure transparent huge pages</title>\n\t\t\t<link>https://lwn.net/Articles/1025629/</link>\n\t\t\t<guid>https://lwn.net/Articles/1025629/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\n&lt;a href=\"https://lwn.net/Articles/423584/\"&gt;\nTransparent huge pages&lt;/a&gt; (THPs) are, theoretically, supposed to allow processes to\nbenefit from larger page sizes without changes to their code. This does work,\nbut the performance impacts from THPs are not always a benefit, so system\nadministrators with specific knowledge of their workloads may want the ability\nto fine-tune THPs to the application. On May&amp;#160;15, Usama Arif\n&lt;a href=\"https://lwn.net/ml/all/20250515133519.2779639-1-usamaarif642@gmail.com/\"&gt;\nshared&lt;/a&gt; a patch set that would add a\n&lt;a href=\"https://www.man7.org/linux/man-pages/man2/prctl.2.html\"&gt;\n&lt;tt&gt;prctl()&lt;/tt&gt;&lt;/a&gt; option for setting THP defaults for a process; that patch\nset has sparked discussion about whether such a setting is a good fit for\n&lt;tt&gt;prctl()&lt;/tt&gt;, and what alternative designs may work instead.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 10 Jul 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Improved load balancing with machine learning</title>\n\t\t\t<link>https://lwn.net/Articles/1027096/</link>\n\t\t\t<guid>https://lwn.net/Articles/1027096/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The &lt;a href=\"https://lwn.net/Articles/922405/\"&gt;extensible scheduler class&lt;/a&gt;\n(\"sched_ext\") allows the loading of a custom CPU scheduler into the kernel\nas a set of BPF functions; it was merged for the 6.12 kernel release.\nSince then, sched_ext has enabled a wide range of experimentation with\nscheduling algorithms.  At the 2025 &lt;a\nhref=\"https://events.linuxfoundation.org/open-source-summit-north-america/\"&gt;Open\nSource Summit North America&lt;/a&gt;, Ching-Chun (\"Jim\") Huang presented work\nthat has been done to apply (local) machine learning to the problem of\nscheduling processes on complex systems.\n</description>\n\t\t\t<pubDate>Thu, 10 Jul 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for July 10, 2025</title>\n\t\t\t<link>https://lwn.net/Articles/1028368/</link>\n\t\t\t<guid>https://lwn.net/Articles/1028368/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>Inside this week's LWN.net Weekly Edition:\n        &lt;p&gt;\n        &lt;ul&gt;\n&lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1028368/\"&gt;Front&lt;/a&gt;: Python packaging; Kernel API specification; Kselftests and KUnit; niri; pedalboard.\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1028370/\"&gt;Briefs&lt;/a&gt;: Git security fixes; Amarok 3.3; Bash 5.3; Thunderbird 140; tmux-rs; U-Boot 2025.07; Quotes; ...\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1028371/\"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.\n            &lt;/ul&gt;\n\n        </description>\n\t\t\t<pubDate>Thu, 17 Jul 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Reinventing the Python wheel</title>\n\t\t\t<link>https://lwn.net/Articles/1028299/</link>\n\t\t\t<guid>https://lwn.net/Articles/1028299/</guid>\n\t\t\t<dc:creator>jake</dc:creator>\n\t\t\t<description>It is no secret that the Python packaging world is at something of a\ncrossroads; there have been debates and discussions about the packaging\nlandscape that started long before our &lt;a href=\"https://lwn.net/Articles/924104/\"&gt;2023\nseries&lt;/a&gt; describing some of the difficulties.  There has been progress\nsince then—and incremental improvements all along, in truth—but a new\ninitiative is looking to overhaul packaging for the language.  At &lt;a\nhref=\"https://us.pycon.org/2025/\"&gt;PyCon US 2025&lt;/a&gt;, Barry Warsaw and\nJonathan Dekhtiar gave a presentation on the &lt;a\nhref=\"https://wheelnext.dev/\"&gt;WheelNext project&lt;/a&gt;, which is a community\neffort that aims to improve the experience for users and providers of Python\npackages while also working with toolmakers and other parts of the\necosystem to \"&lt;q&gt;reinvent the wheel&lt;/q&gt;\".  While the project's name refers\nto Python's &lt;a\nhref=\"https://packaging.python.org/en/latest/specifications/binary-distribution-format/\"&gt;wheel&lt;/a&gt;\nbinary distribution format, its goals stretch much further than simply the\nformat.\n</description>\n\t\t\t<pubDate>Thu, 17 Jul 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Toward the unification of kselftests and KUnit</title>\n\t\t\t<link>https://lwn.net/Articles/1029077/</link>\n\t\t\t<guid>https://lwn.net/Articles/1029077/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>The kernel project, for many years, lacked a formal testing setup; it was\noften joked that testing was the project's main reason for keeping users\naround.  While many types of kernel testing can only be done in the\npresence of specific hardware, there are other parts of the kernel\nthat could be more widely tested.  Over time, though, the kernel has gained\ntwo separate testing frameworks and a growing body of automated tests to go\nwith them.  These two frameworks — kselftests and KUnit — take different\napproaches to the testing problem; now &lt;a\nhref=\"https://lwn.net/ml/all/20250626-kunit-kselftests-v4-0-48760534fef5@linutronix.de\"&gt;this\npatch series&lt;/a&gt; from Thomas Weißschuh aims to bring them together.\n</description>\n\t\t\t<pubDate>Thu, 17 Jul 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for July 17, 2025</title>\n\t\t\t<link>https://lwn.net/Articles/1029426/</link>\n\t\t\t<guid>https://lwn.net/Articles/1029426/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>Inside this week's LWN.net Weekly Edition:\n        &lt;p&gt;\n        &lt;ul&gt;\n&lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1029426/\"&gt;Front&lt;/a&gt;: Python JIT; Anubis; Secure Boot certificate expiration; SFrame; Exported symbols; Python packaging in Fedora.\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1029428/\"&gt;Briefs&lt;/a&gt;: Parrot 6.4; SPI report; Quotes; ...\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1029429/\"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more. \n            &lt;/ul&gt;\n\n        </description>\n\t\t\t<pubDate>Thu, 24 Jul 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Linux and Secure Boot certificate expiration</title>\n\t\t\t<link>https://lwn.net/Articles/1029767/</link>\n\t\t\t<guid>https://lwn.net/Articles/1029767/</guid>\n\t\t\t<dc:creator>jake</dc:creator>\n\t\t\t<description>Linux users who have &lt;a\nhref=\"https://en.wikipedia.org/wiki/UEFI#Secure_Boot\"&gt;Secure Boot&lt;/a&gt;\nenabled on their systems knowingly or unknowingly rely on a key from\nMicrosoft that is set to expire in September.  After that point, Microsoft\nwill no longer use that key to sign the &lt;a\nhref=\"https://github.com/rhboot/shim#shim-a-first-stage-uefi-bootloader\"&gt;shim&lt;/a&gt;\nfirst-stage UEFI bootloader that is used by Linux distributions to boot the\nkernel with Secure Boot.  But the replacement key, which has been available\nsince 2023, may not be installed on many systems; worse yet, it may require\nthe hardware vendor to issue an update for the system firmware, which may\nor may not happen.  It seems that the vast majority of systems will not be\nlost in the shuffle, but it may require extra work from distributors and\nusers.\n</description>\n\t\t\t<pubDate>Thu, 24 Jul 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Fedora SIG changes Python packaging strategy</title>\n\t\t\t<link>https://lwn.net/Articles/1029354/</link>\n\t\t\t<guid>https://lwn.net/Articles/1029354/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;Fedora's &lt;a\nhref=\"https://docs.fedoraproject.org/en-US/neurofedora/overview/\"&gt;NeuroFedora\nspecial-interest group&lt;/a&gt; (SIG) is considering a change of strategy\nwhen it comes to packaging Python modules. The SIG, which consists of\nthree active members, is struggling to keep up with maintaining the\n&lt;a href=\"https://pagure.io/neuro-sig/NeuroFedora/blob/main/f/package-list/list.txt\"&gt;hundreds of packages&lt;/a&gt; that it has taken on. What's more, it's not\nclear that the majority of packages are even being consumed by Fedora\nusers; the group is trying to determine the right strategy to meet its\ngoals and shed unnecessary work. If its new packaging strategy is\nsuccessful, it may point the way to a more sustainable model for Linux\ndistributions to provide value to users without trying to package\neverything under the sun.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 24 Jul 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for July 24, 2025</title>\n\t\t\t<link>https://lwn.net/Articles/1030295/</link>\n\t\t\t<guid>https://lwn.net/Articles/1030295/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>Inside this week's LWN.net Weekly Edition:\n        &lt;p&gt;\n        &lt;ul&gt;\n&lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1030295/\"&gt;Front&lt;/a&gt;: Debian's security processes; Tor; Immutability for Python; CPU scheduler; QUIC; Rust abstractions.\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1030297/\"&gt;Briefs&lt;/a&gt;: Brief news items from throughout the community.\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1030298/\"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.\n            &lt;/ul&gt;\n\n        </description>\n\t\t\t<pubDate>Thu, 31 Jul 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Understanding Debian's security processes</title>\n\t\t\t<link>https://lwn.net/Articles/1030669/</link>\n\t\t\t<guid>https://lwn.net/Articles/1030669/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;Providing security updates for a Linux distribution, such as\nDebian, involves a lot of work behind the scenes&amp;mdash;and requires\nmuch more than simply shipping the latest code. On July 15, at &lt;a\nhref=\"https://debconf25.debconf.org/\"&gt;DebConf25&lt;/a&gt; in Brest, France,\nSamuel Henrique walked through the process of providing security\nupdates to users; he discussed how Debian learns about security\nvulnerabilities, decides on the best response, and the process of\nsending out updates to keep its users safe. He also provided guidance\non how others could get involved.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 31 Jul 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Deep immutability for Python</title>\n\t\t\t<link>https://lwn.net/Articles/1030291/</link>\n\t\t\t<guid>https://lwn.net/Articles/1030291/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nPython has recently seen a number of experiments to improve its parallel\nperformance, including exposing\n&lt;a href=\"https://lwn.net/Articles/820424/\"&gt;\nsubinterpreters&lt;/a&gt; as part of the standard library. These allow\nseparate threads within the same Python process to run simultaneously, as long\nas any data sent between them is copied, rather than shared.\n&lt;a href=\"https://pep-previews--4468.org.readthedocs.build/pep-0795/\"&gt;\nPEP&amp;#160;795&lt;/a&gt; (\"Deep Immutability in Python\")\nseeks to make efficient sharing of data between subinterpreters possible by\nallowing Python objects to be \"frozen\", so that they can be accessed from\nmultiple subinterpreters without copying or synchronization.\nThat task is more difficult than it\nseems, and the PEP prompted a good deal of skepticism from the Python community.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 31 Jul 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for July 31, 2025</title>\n\t\t\t<link>https://lwn.net/Articles/1031201/</link>\n\t\t\t<guid>https://lwn.net/Articles/1031201/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>Inside this week's LWN.net Weekly Edition:\n        &lt;p&gt;\n        &lt;ul&gt;\n&lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1031201/\"&gt;Front&lt;/a&gt;: Becoming a Python contributor; Graphene OS; Fedora quality team; 6.16 Development statistics; Proxy execution; Run-time verification; Confidential VMs.\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1031203/\"&gt;Briefs&lt;/a&gt;: HeliumOS 10; European Tech Funding; GNU C Library 2.42; OpenPrinting; Wayback 0.1\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1031204/\"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.\n            &lt;/ul&gt;\n\n        </description>\n\t\t\t<pubDate>Thu, 07 Aug 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Extending run-time verification for the kernel</title>\n\t\t\t<link>https://lwn.net/Articles/1030685/</link>\n\t\t\t<guid>https://lwn.net/Articles/1030685/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nThere are a lot of things people expect the Linux kernel to do correctly. Some\nof these are checked by testing or static analysis; a few are ensured by\nrun-time verification: checking a live property of a running Linux system. For\nexample, the scheduler has a handful of different correctness properties that\ncan be\nchecked in this way.\nNam Cao posted a\n&lt;a href=\"https://lwn.net/ml/all/cover.1751634289.git.namcao@linutronix.de/\"&gt;\npatch series&lt;/a&gt; that aims to extend the kinds of properties that the kernel's\n&lt;a href=\"https://docs.kernel.org/trace/rv/runtime-verification.html\"&gt;run-time\nverification system&lt;/a&gt; can check, by adding support for\n&lt;a href=\"https://en.wikipedia.org/wiki/Linear_temporal_logic\"&gt;\nlinear temporal logic&lt;/a&gt; (LTL). The patch set has seen eleven revisions since the\n&lt;a href=\"https://lwn.net/ml/all/cover.1741708239.git.namcao@linutronix.de/\"&gt;\nfirst version&lt;/a&gt; in March&amp;#160;2025, and recently made it into the linux-next\ntree, from where it seems likely to reach the mainline kernel soon.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 07 Aug 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>On becoming a Python contributor</title>\n\t\t\t<link>https://lwn.net/Articles/1030821/</link>\n\t\t\t<guid>https://lwn.net/Articles/1030821/</guid>\n\t\t\t<dc:creator>jake</dc:creator>\n\t\t\t<description>In the first keynote at\n&lt;a href=\"https://ep2025.europython.eu/\"&gt;EuroPython 2025&lt;/a&gt; in Prague,\nSavannah Bailey described her path to becoming a CPython core developer in\nNovember 2024.  She started down that path a few years earlier and her\ntalk was meant to inspire others—not to slavishly follow hers,\nbut to create their own.  In the talk, entitled \"You don't have to be a compiler engineer\nto work on Python\", she had lots of ideas for those who\nmight be thinking about contributing and are wondering how to do so.\n</description>\n\t\t\t<pubDate>Thu, 07 Aug 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>A proxy-execution baby step</title>\n\t\t\t<link>https://lwn.net/Articles/1030842/</link>\n\t\t\t<guid>https://lwn.net/Articles/1030842/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>Priority inversion comes about when a low-priority task holds a resource\nthat is also needed by a high-priority task, preventing the latter from\nrunning.  This problem is made much worse if the low-priority task is\nunable to gain access to the CPU and, as a result, cannot complete its work\nand free the resources it holds.  Proxy execution is a potential solution\nto this problem, but it is a complex solution that has been under\ndevelopment for several years; LWN first &lt;a href=\"https://lwn.net/Articles/820575/\"&gt;looked\nat it&lt;/a&gt; in 2020.  The 6.17 kernel is likely to contain an important step\nforward for this long-running project.\n</description>\n\t\t\t<pubDate>Thu, 07 Aug 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for August 7, 2025</title>\n\t\t\t<link>https://lwn.net/Articles/1032016/</link>\n\t\t\t<guid>https://lwn.net/Articles/1032016/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>Inside this week's LWN.net Weekly Edition:\n        &lt;p&gt;\n        &lt;ul&gt;\n&lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1032016/\"&gt;Front&lt;/a&gt;: Don't fear the TPM; Python performance; Offensive Debian packages; NNCPNET; 6.17 Merge window; Transparent huge pages; SilverBullet.\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1032018/\"&gt;Briefs&lt;/a&gt;: AUR malware; Secure boot; kbuild and kconfig maintenance; GPU drivers; NVIDIA on AlmaLinux; Proxmox 9.0; Quotes; ...\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1032019/\"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.\n            &lt;/ul&gt;\n\n        </description>\n\t\t\t<pubDate>Thu, 14 Aug 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Don't fear the TPM</title>\n\t\t\t<link>https://lwn.net/Articles/1032026/</link>\n\t\t\t<guid>https://lwn.net/Articles/1032026/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;There is a great deal of misunderstanding, and some misinformation, about the\n&lt;a\nhref=\"https://en.wikipedia.org/wiki/Trusted_Platform_Module\"&gt;Trusted\nPlatform Module&lt;/a&gt; (TPM); to combat this, Debian developer Jonathan\nMcDowell would like to clear the air and help users understand what it\nis good for, as well as what it's not. At &lt;a\nhref=\"https://debconf25.debconf.org/\"&gt;DebConf25&lt;/a&gt; in Brest, France,\nhe delivered &lt;a\nhref=\"https://debconf25.debconf.org/talks/31-dont-fear-the-tpm/\"&gt;a\ntalk about TPMs&lt;/a&gt; that explained what they are, why people might be\ninterested in using them, and how users might do so on a Debian\nsystem.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 14 Aug 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for August 14, 2025</title>\n\t\t\t<link>https://lwn.net/Articles/1032862/</link>\n\t\t\t<guid>https://lwn.net/Articles/1032862/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>Inside this week's LWN.net Weekly Edition:\n        &lt;p&gt;\n        &lt;ul&gt;\n&lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1032862/\"&gt;Front&lt;/a&gt;: Indico; Arch Linux wiki; StarDict; Python debugging; LLM assistants for kernel development; 6.17 Merge window; Signed BPF programs.\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1032864/\"&gt;Briefs&lt;/a&gt;: CalyxOS; ACME on NGINX; Debian 13; LVFS sustainability; Go 1.25; Radicle 1.3.0; Rust 1.89; Syncthing 2.0; Quotes; ...\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1032865/\"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.\n            &lt;/ul&gt;\n\n        </description>\n\t\t\t<pubDate>Thu, 21 Aug 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Indico: event management using Python</title>\n\t\t\t<link>https://lwn.net/Articles/1032422/</link>\n\t\t\t<guid>https://lwn.net/Articles/1032422/</guid>\n\t\t\t<dc:creator>jake</dc:creator>\n\t\t\t<description>The &lt;a href=\"https://getindico.io/\"&gt;Indico&lt;/a&gt; event-management tool has\nbeen in development at &lt;a href=\"https://home.cern/\"&gt;CERN&lt;/a&gt; for two\ndecades at this point.  The MIT-licensed web application helps organize\nconferences, meetings, workshops, and so on; it runs on Python and uses the &lt;a\nhref=\"https://flask.palletsprojects.com/en/stable/\"&gt;Flask web framework&lt;/a&gt;. Two software engineers on the project, Dominic\nHollis and Tomas Roun, came to \n&lt;a\nhref=\"https://ep2025.europython.eu/\"&gt;EuroPython&amp;#160;2025&lt;/a&gt; in Prague to talk about\nIndico, its history, and some metrics about its community.  There is a bit of a\nconnection between Indico and the conference: in 2006 and 2007,\nthe tool was used to manage EuroPython.\n</description>\n\t\t\t<pubDate>Thu, 21 Aug 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Possible paths for signing BPF programs</title>\n\t\t\t<link>https://lwn.net/Articles/1031854/</link>\n\t\t\t<guid>https://lwn.net/Articles/1031854/</guid>\n\t\t\t<dc:creator>daroc</dc:creator>\n\t\t\t<description>&lt;p&gt;\nBPF programs are loaded directly into the kernel.\nEven though the verifier protects the kernel from certain kinds of\nmisbehavior in BPF programs, some people are still justifiably concerned about\nadding unsigned code to their kernel. A fully correct BPF program can still be\nused to expose sensitive data, for example.\nTo remedy this, Blaise Boscaccy and KP Singh\nhave both shared patch sets that add ways to verify cryptographic\nsignatures of BPF programs, allowing users to configure their kernels to load\nonly pre-approved BPF programs. This work follows on from the\n&lt;a href=\"https://lwn.net/Articles/1017549/\"&gt;\ndiscussion&lt;/a&gt; at the\nLinux Storage, Filesystem, Memory-Management, and BPF Summit (LSFMM+BPF)\nin April and Boscaccy's\n&lt;a href=\"https://lwn.net/ml/all/20250502184421.1424368-1-bboscaccy@linux.microsoft.com/\"&gt;\nearlier proposal&lt;/a&gt; of a Linux Security Module (LSM) to accomplish the same goal.\nThere are\nstill some fundamental disagreements over the best approach to signing BPF\nprograms, however.\n&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 21 Aug 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Arch shares its wiki strategy with Debian</title>\n\t\t\t<link>https://lwn.net/Articles/1032604/</link>\n\t\t\t<guid>https://lwn.net/Articles/1032604/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;The &lt;a href=\"https://archlinux.org/\"&gt;Arch Linux project&lt;/a&gt; is\nespecially well-known in the Linux community for two things: its\nrolling-release model and the quality of the documentation in the &lt;a\nhref=\"https://wiki.archlinux.org/title/Main_page\"&gt;ArchWiki&lt;/a&gt;. No\nmatter which Linux distribution one uses, the odds are that eventually\nthe ArchWiki's documentation will prove useful. The Debian project\nrecognized this and has sought to improve its own documentation game\nby inviting ArchWiki maintainers Jakub Klinkovský and Vladimir\nLavallade to &lt;a href=\"https://debconf25.debconf.org/\"&gt;DebConf25&lt;/a&gt; in\nBrest, France, to speak about how Arch manages its wiki. The talk has\nalready borne fruit with the launch of an effort to revamp the Debian\nwiki.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 21 Aug 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for August 21, 2025</title>\n\t\t\t<link>https://lwn.net/Articles/1033740/</link>\n\t\t\t<guid>https://lwn.net/Articles/1033740/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>Inside this week's LWN.net Weekly Edition:\n        &lt;p&gt;\n        &lt;ul&gt;\n&lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1033740/\"&gt;Front&lt;/a&gt;: Debian; CPython; huge zero folio; kexec handover; FHS; Koka programming language\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1033742/\"&gt;Briefs&lt;/a&gt;: PyPI domain checks; Firefox 142.0; Git v2.51; Ghostty; LibreOffice 25.8; Zig 0.15.1; Quotes; ...\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1033743/\"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.\n            &lt;/ul&gt;\n\n        </description>\n\t\t\t<pubDate>Thu, 28 Aug 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Python, tail calls, and performance</title>\n\t\t\t<link>https://lwn.net/Articles/1033373/</link>\n\t\t\t<guid>https://lwn.net/Articles/1033373/</guid>\n\t\t\t<dc:creator>jake</dc:creator>\n\t\t\t<description>Ken Jin welcomed &lt;a\nhref=\"https://ep2025.europython.eu/\"&gt;EuroPython&amp;#160;2025&lt;/a&gt; attendees to\nhis talk entitled \"Building a new tail-calling interpreter for Python\", but\nnoted that the title really should be: \"Measuring the performance of\ncompilers and interpreters is really hard\".  Jin's efforts &lt;a\nhref=\"https://lwn.net/Articles/1010905/\"&gt;to switch the CPython interpreter to use tail calls&lt;/a&gt;,\nwhich can be optimized as regular jumps,\ninitially seemed to produce an almost miraculous performance improvement.\nAs his modified title suggests, the &lt;a\nhref=\"https://blog.nelhage.com/post/cpython-tail-call/\"&gt;actual improvement\nwas rather smaller&lt;/a&gt;; there is still some performance improvement and\nthere are other benefits from the change.\n</description>\n\t\t\t<pubDate>Thu, 28 Aug 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Lucky 13: a look at Debian trixie</title>\n\t\t\t<link>https://lwn.net/Articles/1033474/</link>\n\t\t\t<guid>https://lwn.net/Articles/1033474/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;After more than two years of development, the Debian Project has &lt;a\nhref=\"https://www.debian.org/News/2025/20250809\"&gt;released&lt;/a&gt; its new stable version, Debian&amp;#160;13 (\"trixie\"). The release comes with the usual bounty of\nupgraded packages and more than 14,000 new packages; it also debuts &lt;a\nhref=\"https://lwn.net/Articles/1017315/\"&gt;Advanced Package Tool\n(APT)&amp;#160;3.0&lt;/a&gt; as the default package manager and makes 64-bit\n&lt;span class=\"nobreak\"&gt;RISC-V&lt;/span&gt; a supported architecture. There are few surprises with trixie,\nwhich is exactly what many Linux users are hoping for&amp;mdash;a free\noperating system that just works as expected.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 28 Aug 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>LWN.net Weekly Edition for August 28, 2025</title>\n\t\t\t<link>https://lwn.net/Articles/1034604/</link>\n\t\t\t<guid>https://lwn.net/Articles/1034604/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>Inside this week's LWN.net Weekly Edition:\n        &lt;p&gt;\n        &lt;ul&gt;\n&lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1034604/\"&gt;Front&lt;/a&gt;: Groklaw takeover; CRL cache sharing; browsers and XSLT; Microdot; restartable sequences; shadow-stack control\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1034606/\"&gt;Briefs&lt;/a&gt;: Android restrictions; Arch services; GhostBSD 25.02; FFmpeg 8.0; PyCon videos; Quotes; ...\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1034607/\"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.\n            &lt;/ul&gt;\n\n        </description>\n\t\t\t<pubDate>Thu, 04 Sep 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>The tangled web of XSLT browser support</title>\n\t\t\t<link>https://lwn.net/Articles/1034560/</link>\n\t\t\t<guid>https://lwn.net/Articles/1034560/</guid>\n\t\t\t<dc:creator>jzb</dc:creator>\n\t\t\t<description>&lt;p&gt;The &lt;a href=\"https://en.wikipedia.org/wiki/XSLT\"&gt;Extensible\nStylesheet Language Transformations&lt;/a&gt; (XSLT) language is used by web\nbrowsers to style XML content to make it easily readable; XSLT is part of the\n&lt;a href=\"https://html.spec.whatwg.org/multipage/\"&gt;HTML living\nstandard&lt;/a&gt; that is maintained by the &lt;a\nhref=\"https://whatwg.org/\"&gt;Web Hypertext Application Technology\nWorking Group&lt;/a&gt; (WHATWG). Only a small fraction of web sites serve\ncontent that requires web browsers to support XSLT, in part because\nmajor browser implementations have neglected the technology over the past 25\nyears. Now, it seems, they would like to rid themselves of it\nentirely. A &lt;a href=\"https://issues.chromium.org/issues/435623334\"&gt;plan&lt;/a&gt;\nto disable XSLT in &lt;a href=\"https://www.chromium.org/blink/\"&gt;Blink&lt;/a&gt; (Chrome's rendering engine) and a &lt;a\nhref=\"https://github.com/whatwg/html/pull/11563\"&gt;pull request&lt;/a&gt; by\na Google Chrome developer to remove mentions of the specification from\nthe HTML standard have been met with opposition, but arguments in\nfavor of XSLT have proven ineffective.&lt;/p&gt;\n</description>\n\t\t\t<pubDate>Thu, 04 Sep 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n\t\t\t<title>Shadow-stack control in clone3()</title>\n\t\t\t<link>https://lwn.net/Articles/1034442/</link>\n\t\t\t<guid>https://lwn.net/Articles/1034442/</guid>\n\t\t\t<dc:creator>corbet</dc:creator>\n\t\t\t<description>Shadow stacks are a control-flow-integrity feature designed to defend\nagainst exploits that manipulate a thread's call stack.  The kernel first\n&lt;a href=\"https://lwn.net/Articles/926649/\"&gt;gained support for hardware-implemented shadow\nstacks&lt;/a&gt;, for the x86 architecture, in the 6.6 release; 64-bit Arm\nsupport followed in 6.13.  This feature does not give user space much\ncontrol over the allocation of shadow stacks for new threads, though; a &lt;a\nhref=\"https://lwn.net/ml/all/20250819-clone3-shadow-stack-v19-0-bc957075479b@kernel.org\"&gt;patch\nseries&lt;/a&gt; from Mark Brown may, after many attempts, finally be about\nto change that situation.\n</description>\n\t\t\t<pubDate>Thu, 04 Sep 2025 00:00:00 +0000</pubDate>\n\t\t</item>\n\t\t", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n        <title>Rug pulls, forks, and open-source feudalism</title>\n        <link>https://lwn.net/Articles/1036465/</link>\n        <guid>https://lwn.net/Articles/1036465/</guid>\n        <dc:creator>corbet</dc:creator>\n        <description>Like almost all human endeavors, open-source software development involves\na range of power dynamics.  Companies, developers, and users are all\nconcerned with the power to influence the direction of the software — and,\noften, to profit from it.  At the 2025 &lt;a\nhref=\"https://events.linuxfoundation.org/open-source-summit-europe/\"&gt;Open\nSource Summit Europe&lt;/a&gt;, Dawn Foster talked about how those dynamics can\nplay out, with an eye toward a couple of tactics — rug pulls and forks — that\nare available to try to shift power in one direction or another.\n</description>\n        <pubDate>Thu, 18 Sep 2025 00:00:00 +0000</pubDate>\n        </item>\n        ", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n        <title>The dependency tracker for complex deadlock detection</title>\n        <link>https://lwn.net/Articles/1036222/</link>\n        <guid>https://lwn.net/Articles/1036222/</guid>\n        <dc:creator>corbet</dc:creator>\n        <description>Deadlocks are a constant threat in concurrent settings with shared\ndata; it is thus not surprising that the kernel project has long since\ndeveloped tools to detect potential deadlocks so they can be fixed before\nthey affect production users.  Byungchul Park thinks that he has developed\na better tool that can detect more deadlock-prone situations.  At the 2025 &lt;a\nhref=\"https://events.linuxfoundation.org/open-source-summit-europe/\"&gt;Open\nSource Summit Europe&lt;/a&gt;, he presented an introduction to his dependency\ntracker (or \"DEPT\") tool and the kinds of problems it can detect.\n</description>\n        <pubDate>Thu, 18 Sep 2025 00:00:00 +0000</pubDate>\n        </item>\n        ", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n        <title>LWN.net Weekly Edition for September 4, 2025</title>\n        <link>https://lwn.net/Articles/1035384/</link>\n        <guid>https://lwn.net/Articles/1035384/</guid>\n        <dc:creator>corbet</dc:creator>\n        <description>Inside this week's LWN.net Weekly Edition:\n        &lt;p&gt;\n        &lt;ul&gt;\n&lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1035384/\"&gt;Front&lt;/a&gt;: Maintaining curl; GNOME governance; Guix in Debian; Tracking untrusted data in the kernel; 32-Bit support; systemd v258.\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1035386/\"&gt;Briefs&lt;/a&gt;: bcachefs maintenance; Linux from Scratch 12.4; ELF spec; Niri 25.08; Python documentary; GNOME executive director; Quotes; ...\n            &lt;li&gt; &lt;a href=\"https://lwn.net/Articles/1035387/\"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.\n            &lt;/ul&gt;\n\n        </description>\n        <pubDate>Thu, 11 Sep 2025 00:00:00 +0000</pubDate>\n        </item>\n        ", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n        <title>Tracking trust with Rust in the kernel</title>\n        <link>https://lwn.net/Articles/1034603/</link>\n        <guid>https://lwn.net/Articles/1034603/</guid>\n        <dc:creator>daroc</dc:creator>\n        <description>&lt;p&gt;\nThe Linux kernel has to handle many different sources of data that should not\nbe trusted: user space, network connections, and removable storage, to name a\nfew. The kernel has to remain secure even if one of these sends garbled (or\nmalicious) data. Benno Lossin has been working on an API for kernel Rust code\nthat makes it harder to accidentally make decisions based on data from user space. That work\nis now on its\n&lt;a href=\"https://lwn.net/ml/all/20250814124424.516191-1-lossin@kernel.org/\"&gt;\nfourth revision&lt;/a&gt;, and Lossin has asked kernel developers to experiment with\nit and see where problems remain, making this a good time to look at the proposed API.\n&lt;/p&gt;\n</description>\n        <pubDate>Thu, 11 Sep 2025 00:00:00 +0000</pubDate>\n        </item>\n        ", "<item xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n        <title>Removing Guix from Debian</title>\n        <link>https://lwn.net/Articles/1035491/</link>\n        <guid>https://lwn.net/Articles/1035491/</guid>\n        <dc:creator>jzb</dc:creator>\n        <description>&lt;p&gt;As a rule, if a package is shipped with a Debian release, users can\ncount on it being available, and updated, for the entire\nlife of the release. If package &lt;em&gt;foo&lt;/em&gt; is included in the stable\n&lt;span class=\"nobreak\"&gt;release&amp;mdash;currently&lt;/span&gt; Debian&amp;#160;13\n&lt;span class=\"nobreak\"&gt;(\"trixie\")&amp;mdash;a&lt;/span&gt; user can\nreasonably expect that it will continue to be available with security\nbackports as long as that release is supported, though it may not be\nincluded in Debian&amp;#160;14 (\"forky\"). However, it is likely that the\n&lt;a href=\"https://guix.gnu.org/en/\"&gt;Guix&lt;/a&gt; package manager will soon\nbe removed from the repositories for Debian&amp;#160;13 and\nDebian&amp;#160;12 (\"bookworm\", also called oldstable).&lt;/p&gt;\n</description>\n        <pubDate>Thu, 11 Sep 2025 00:00:00 +0000</pubDate>\n        </item>\n        "]