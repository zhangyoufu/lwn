<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:ns0="http://www.w3.org/2005/Atom" version="2.0">
	<channel>
		<title>LWN.net</title>
		<link>https://lwn.net</link>
		<description> LWN.net is a comprehensive source of news and opinions from
        and about the Linux community.  This is the main LWN.net feed,
        listing all articles which are posted to the site front page.
</description>
		<language>en-us</language>
		<pubDate>Sat, 06 Sep 2025 16:36:18 +0000</pubDate>
		<lastBuildDate>Sat, 06 Sep 2025 16:36:18 +0000</lastBuildDate>
		<docs>https://www.rssboard.org/rss-specification</docs>
		<webMaster>lwn@lwn.net</webMaster>
		<ns0:link href="https://zhangyoufu.github.io/lwn/rss.rdf" rel="self" type="application/rss+xml" />
		<ns0:link href="https://pubsubhubbub.appspot.com/" rel="hub" />
		<item>
			<title>Improving performance with SCHED_EXT and IOCost</title>
			<link>https://lwn.net/Articles/966618/</link>
			<guid>https://lwn.net/Articles/966618/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
At &lt;a href="https://www.socallinuxexpo.org/scale/21x"&gt;SCALE&lt;/a&gt;
this year Dan Schatzberg and Tejun Heo,
both from Meta, gave back-to-back talks about some
of the performance-engineering work that they do there. Schatzberg presented on
the &lt;a href="https://lwn.net/Articles/922405"&gt;extensible BPF scheduler&lt;/a&gt;, which has been
discussed extensively on the kernel mailing list.
Heo presented on IOCost — a control group (cgroup) I/O controller
optimized for solid-state disks (SSDs) — and the benchmark suite that is necessary to
make it work well on different models of disk.
&lt;/p&gt;
</description>
			<pubDate>Thu, 11 Apr 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for April 4, 2024</title>
			<link>https://lwn.net/Articles/966925/</link>
			<guid>https://lwn.net/Articles/966925/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The LWN.net Weekly Edition for April 4, 2024 is available.
</description>
			<pubDate>Thu, 11 Apr 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>A memory model for Rust code in the kernel</title>
			<link>https://lwn.net/Articles/967049/</link>
			<guid>https://lwn.net/Articles/967049/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The Rust programming language differs from C in many ways; those
differences tend to be what users admire in the language.  But those
differences can also lead to an impedance mismatch when Rust code is
integrated into a C-dominated system, and it can be even worse in the
kernel, which is not a typical C program.  Memory models are a case in
point.  A programming language's view of memory is sufficiently fundamental
and arcane that many developers never have to learn much about it.  It is
hard to maintain that sort of blissful ignorance while working in the
kernel, though, so a recent discussion of how to choose a memory model for
kernel code in Rust is of interest.
</description>
			<pubDate>Thu, 11 Apr 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>How the XZ backdoor works</title>
			<link>https://lwn.net/Articles/967192/</link>
			<guid>https://lwn.net/Articles/967192/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
Versions 5.6.0 and 5.6.1 of the
&lt;a href="https://git.tukaani.org/?p=xz.git;a=summary"&gt;XZ&lt;/a&gt;
compression utility and library
were shipped with &lt;a href="https://lwn.net/Articles/967180"&gt;a backdoor&lt;/a&gt; that targeted
&lt;a href="https://www.openssh.com/"&gt;OpenSSH&lt;/a&gt;.
Andres Freund
&lt;a href="https://lwn.net/ml/oss-security/20240329155126.kjjfduxw2yrlxgzm@awork3.anarazel.de/"&gt;
discovered&lt;/a&gt; the backdoor by
noticing that &lt;a href="https://lwn.net/Articles/967194/"&gt;failed SSH logins were taking a lot of
CPU time&lt;/a&gt; while doing some
micro-benchmarking, and tracking down the backdoor from there. It was introduced
by XZ co-maintainer "Jia Tan" — a probable alias for person or persons unknown.
The backdoor is a sophisticated attack with multiple parts, from the build
system, to link time, to run time.
&lt;/p&gt;
</description>
			<pubDate>Thu, 11 Apr 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Book review: Practical Julia</title>
			<link>https://lwn.net/Articles/966684/</link>
			<guid>https://lwn.net/Articles/966684/</guid>
			<dc:creator>jake</dc:creator>
			<description>A recent book by &lt;a
href="https://lwn.net/Archives/GuestIndex/#Phillips_Lee"&gt;LWN guest 
author Lee Phillips&lt;/a&gt; provides a nice introduction to the &lt;a
href="https://julialang.org/"&gt;Julia&lt;/a&gt; programming language.
&lt;a href="https://nostarch.com/practical-julia"&gt;&lt;i&gt;Practical Julia&lt;/i&gt;&lt;/a&gt;
does more than that, however.  As its subtitle ("A Hands-On Introduction
for Scientific Minds") implies, the book focuses on bringing Julia to
scientists, rather than programmers, which gives it something of a
different feel from most other books of this sort.
</description>
			<pubDate>Thu, 18 Apr 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>A focus on FOSS funding</title>
			<link>https://lwn.net/Articles/967001/</link>
			<guid>https://lwn.net/Articles/967001/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;Among the numerous approaches to funding the development and advancement of
open-source software, corporate sponsorship in the form of donations to umbrella
organizations is perhaps the most visible. At &lt;a href="https://www.socallinuxexpo.org/scale/21x/"&gt;SCALE21x&lt;/a&gt; in Pasadena, California, Duane O'Brien
&lt;a
href="https://www.socallinuxexpo.org/scale/21x/presentations/10-years-open-source-funding-trends-deep-dive"&gt;presented&lt;/a&gt;
a slice of his recent research into the landscape of such sponsorship arrangements,
with an overview of the identifiable trends of the past ten years and some initial
insights he hopes are valuable for sponsors and community members alike.&lt;/p&gt;
</description>
			<pubDate>Thu, 18 Apr 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>A look at the 2024 Debian Project Leader election</title>
			<link>https://lwn.net/Articles/967981/</link>
			<guid>https://lwn.net/Articles/967981/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;The nominations have closed and campaigning is underway to see who
will be the next &lt;a href="https://www.debian.org/devel/leader"&gt;Debian
Project Leader&lt;/a&gt; (DPL). This year, &lt;a
href="https://lwn.net/ml/debian-vote/Zfi3P8BgRgcNdrfW%40roeckx.be/"&gt;two
candidates&lt;/a&gt; are campaigning for the position Jonathan Carter has
held for four eventful years: Sruthi Chandran and
Andreas Tille. Topics that have emerged so far include how the
prospective DPLs would spend project money, their opinions on handling
controversial topics, and project diversity.&lt;/p&gt;
</description>
			<pubDate>Thu, 18 Apr 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for April 11, 2024</title>
			<link>https://lwn.net/Articles/968375/</link>
			<guid>https://lwn.net/Articles/968375/</guid>
			<dc:creator>daroc</dc:creator>
			<description>The LWN.net Weekly Edition for April 11, 2024 is available.
</description>
			<pubDate>Thu, 18 Apr 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Continued attacks on HTTP/2</title>
			<link>https://lwn.net/Articles/968600/</link>
			<guid>https://lwn.net/Articles/968600/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
On April 3 security researcher Bartek Nowotarski
&lt;a href="https://nowotarski.info/http2-continuation-flood-technical-details/"&gt;
published&lt;/a&gt; the details of a new denial-of-service (DoS)
attack, called a "continuation flood", against many
&lt;a href="https://en.wikipedia.org/wiki/HTTP/2"&gt;HTTP/2&lt;/a&gt;-capable web
servers. While the attack is not terribly complex, it affects many independent
implementations of the HTTP/2 protocol, even though multiple
similar vulnerabilities over the years have given implementers plenty of warning.
&lt;/p&gt;
</description>
			<pubDate>Thu, 18 Apr 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>The first Linaro Forum for Arm Linux kernel topics</title>
			<link>https://lwn.net/Articles/969031/</link>
			<guid>https://lwn.net/Articles/969031/</guid>
			<dc:creator>corbet</dc:creator>
			<description>On February 20, &lt;a href="https://linaro.org/"&gt;Linaro&lt;/a&gt; held the initial
get-together for what is intended to be a regular Linux Kernel Forum for
the Arm-focused kernel community. This gathering aims to convene
approximately a few weeks prior to the merge window opening and prior to
the release of the current kernel version under development.  Topics
covered in the first gathering include preparing 64-bit Arm kernels for
low-end embedded systems, memory errors and &lt;a
href="https://en.wikipedia.org/wiki/Compute_Express_Link"&gt;Compute Express
Link (CXL)&lt;/a&gt;, devlink objectives, and scheduler integration.
</description>
			<pubDate>Thu, 18 Apr 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Completing the EEVDF scheduler</title>
			<link>https://lwn.net/Articles/969062/</link>
			<guid>https://lwn.net/Articles/969062/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The &lt;a href="https://lwn.net/Articles/925371/"&gt;Earliest Virtual Deadline First (EEVDF)
scheduler&lt;/a&gt; was merged as an option for the 6.6 kernel.  It represents a
major change to how CPU scheduling is done on Linux systems, but the EEVDF
front has been relatively quiet since then.  Now, though, scheduler
developer Peter Zijlstra has returned from a long absence to post &lt;a
href="https://lwn.net/ml/linux-kernel/20240405102754.435410987@infradead.org/"&gt;a patch
series&lt;/a&gt; intended to finish the EEVDF work.  Beyond some fixes, this work
includes a significant behavioral change and a new feature intended to help
latency-sensitive tasks.
</description>
			<pubDate>Thu, 25 Apr 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Fedora 40 firms up for release</title>
			<link>https://lwn.net/Articles/969145/</link>
			<guid>https://lwn.net/Articles/969145/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;Fedora&amp;nbsp;40&amp;nbsp;Beta was &lt;a
href="https://fedoramagazine.org/announcing-fedora-linux-40-beta/"&gt;released&lt;/a&gt;
on March&amp;nbsp;26, and the final release is nearing completion. So far,
the release is coming together nicely with major
updates for GNOME, KDE&amp;nbsp;Plasma, and the usual cavalcade of
smaller updates and enhancements. As part of the release, the project also scuttled &lt;a href="https://fedoraproject.org/wiki/Changes/Drop_Delta_RPMs"&gt;Delta
RPMs&lt;/a&gt; and &lt;a href="https://fedoraproject.org/wiki/Changes/RemoveOpensslCompat"&gt;OpenSSL 1.1&lt;/a&gt;.&lt;/p&gt;
</description>
			<pubDate>Thu, 25 Apr 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for April 18, 2024</title>
			<link>https://lwn.net/Articles/969442/</link>
			<guid>https://lwn.net/Articles/969442/</guid>
			<dc:creator>daroc</dc:creator>
			<description>The LWN.net Weekly Edition for April 18, 2024 is available.
</description>
			<pubDate>Thu, 25 Apr 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Managing to-do lists on the command line with Taskwarrior</title>
			<link>https://lwn.net/Articles/969904/</link>
			<guid>https://lwn.net/Articles/969904/</guid>
			<dc:creator>jake</dc:creator>
			<description>Managing to-do lists is something of a universal necessity. While some
people handle them mentally or on paper, others resort to a web-based tool or
a mobile 
application. For those preferring the command line, the MIT-licensed &lt;a
href="https://taskwarrior.org"&gt;Taskwarrior&lt;/a&gt; offers a flexible solution
with a healthy community and lots of extensions.
</description>
			<pubDate>Thu, 25 Apr 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Identifying dependencies used via dlopen()</title>
			<link>https://lwn.net/Articles/969908/</link>
			<guid>https://lwn.net/Articles/969908/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
&lt;a href="https://lwn.net/Articles/967180"&gt;
The recent XZ backdoor&lt;/a&gt; has sparked a lot of discussion about how the open-source
community links and packages software. One possible
security improvement being discussed
is changing how
projects like systemd link to dynamic libraries that are only used for
optional functionality: using
&lt;a href="https://man7.org/linux/man-pages/man3/dlopen.3.html"&gt;
&lt;tt&gt;dlopen()&lt;/tt&gt;&lt;/a&gt; to load those libraries only
when required. This could
shrink the attack surface exposed by dependencies, but the approach is not
without downsides — most prominently, it makes discovering which dynamic
libraries a program depends on harder.
On April 11, Lennart Poettering proposed one way to eliminate that problem
&lt;a href="https://github.com/systemd/systemd/pull/32234"&gt;
in a systemd RFC on GitHub&lt;/a&gt;.
&lt;/p&gt;
</description>
			<pubDate>Thu, 25 Apr 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Warning about WARN_ON()</title>
			<link>https://lwn.net/Articles/969923/</link>
			<guid>https://lwn.net/Articles/969923/</guid>
			<dc:creator>corbet</dc:creator>
			<description>Kernel developers, like conscientious developers for many projects, will
often include checks in the code for conditions that are never expected to
occur, but which would indicate a serious problem should that expectation
turn out to be incorrect.  For years, developers have been encouraged (to
put it politely) to avoid using assertions that crash the machine for such
conditions unless there is truly no alternative.  Increasingly, though, use
of the kernel's &lt;tt&gt;WARN_ON()&lt;/tt&gt; family of macros, which developers were
told to use instead, is also being discouraged.
</description>
			<pubDate>Thu, 02 May 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>A change in direction for security-module stacking?</title>
			<link>https://lwn.net/Articles/970070/</link>
			<guid>https://lwn.net/Articles/970070/</guid>
			<dc:creator>jake</dc:creator>
			<description>The long-running effort to complete the work on stacking (or composing) the
Linux security modules (LSMs) recently encountered a barrier—in the form of
a "suggestion" to discontinue it from Linus Torvalds.  His complaint
revolved around the indirect function calls that are used to implement
LSMs, but he also did not think much of the effort to switch away from
those calls.  While it does not appear that a major course-change is in store
for LSMs, it is clear that Torvalds is not happy with the direction of that
subsystem.
</description>
			<pubDate>Thu, 02 May 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Existential types in Rust</title>
			<link>https://lwn.net/Articles/970186/</link>
			<guid>https://lwn.net/Articles/970186/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
For several years, contributors to the Rust project have
been working to improve support for asynchronous
code. The benefits of these efforts are not confined to asynchronous code,
however. Members of the Rust community have been working toward adding explicit
&lt;a href="https://en.wikipedia.org/wiki/Type_system#Existential_types"&gt;
existential types&lt;/a&gt; to Rust since 2017. Existential types are not a common feature
of programming languages (something
&lt;a href="https://rust-lang.github.io/rfcs/2515-type_alias_impl_trait.html"&gt;
the RFC&lt;/a&gt; acknowledges), so the motivation for their inclusion might be somewhat
obscure.
&lt;/p&gt;
</description>
			<pubDate>Thu, 02 May 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Rust for embedded Linux kernels</title>
			<link>https://lwn.net/Articles/970216/</link>
			<guid>https://lwn.net/Articles/970216/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The Rust programming language, it is hoped, will bring a new level of
safety to the Linux kernel.  At the moment, though, there are still a
number of impediments to getting useful Rust code into the kernel.  In the
Embedded Open Source Summit track of the &lt;a
href="https://events.linuxfoundation.org/open-source-summit-north-america/"&gt;Open
Source Summit North America&lt;/a&gt;, Fabien Parent provided an overview of his
work aimed at improving the infrastructure needed to write the device
drivers needed by embedded systems in Rust; there is still some work to be
done.
</description>
			<pubDate>Thu, 02 May 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Linus and Dirk chat about AI, XZ, hardware, and more</title>
			<link>https://lwn.net/Articles/970293/</link>
			<guid>https://lwn.net/Articles/970293/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;One of the mainstays of the the Linux Foundation's Open Source Summit is the "fireside chat"
(sans fire) between Linus Torvalds and Dirk Hohndel to discuss open source and
Linux kernel topics of the day. On April 17, at &lt;a href="https://events.linuxfoundation.org/open-source-summit-north-america/"&gt;Open Source Summit
North America&lt;/a&gt; (OSSNA) in Seattle, Washington, they held with tradition
and discussed a range of topics including proper whitespace parsing,
security, and the current AI craze.&lt;/p&gt;
</description>
			<pubDate>Thu, 02 May 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for April 25, 2024</title>
			<link>https://lwn.net/Articles/970328/</link>
			<guid>https://lwn.net/Articles/970328/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The LWN.net Weekly Edition for April 25, 2024 is available.
</description>
			<pubDate>Thu, 02 May 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Python JIT stabilization</title>
			<link>https://lwn.net/Articles/970397/</link>
			<guid>https://lwn.net/Articles/970397/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
On April 11, Brandt Bucher posted
&lt;a href="https://peps.python.org/pep-0744"&gt;PEP 744&lt;/a&gt; ("JIT Compilation"),
which summarizes the current state of Python's new &lt;a href="https://lwn.net/Articles/958350/"&gt;
copy-and-patch just-in-time (JIT) compiler&lt;/a&gt;. The JIT is currently
experimental, but the PEP proposes some criteria for the circumstances under which it
should become a non-experimental part of Python.
&lt;a href="https://discuss.python.org/t/pep-744-jit-compilation/50756"&gt;
The discussion&lt;/a&gt; of the PEP hasn't
reached a conclusion, but
several members of the community have already raised questions
about how the JIT would fit into future iterations of the Python language.
&lt;/p&gt;
</description>
			<pubDate>Thu, 09 May 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>The state of realtime and embedded Linux</title>
			<link>https://lwn.net/Articles/970555/</link>
			<guid>https://lwn.net/Articles/970555/</guid>
			<dc:creator>corbet</dc:creator>
			<description>Linux, famously, appears in a wide range of systems.  While servers and
large data centers get a lot of the attention, and this year will always be
the year of the Linux desktop, there is also a great deal of Linux to be
found in realtime and embedded applications.  Two talks held in the
realtime and embedded tracks of the 2024 &lt;a
href="https://events.linuxfoundation.org/open-source-summit-north-america/"&gt;Open
Source Summit North America&lt;/a&gt; provided listeners with an update on how
Linux is doing in those areas.  Work on realtime Linux appears to be nearing
completion, while the embedded community is still pushing forward at full
speed.
</description>
			<pubDate>Thu, 09 May 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Security patterns and anti-patterns in embedded development</title>
			<link>https://lwn.net/Articles/970818/</link>
			<guid>https://lwn.net/Articles/970818/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;When it comes to security, telling developers to do (or not do)
something can be ineffective. Helping them understand the why behind
instructions, by illustrating good and bad practices using stories, can be
much more effective. With several such stories Marta
Rybczyńska fashioned an interesting &lt;a
href="https://eoss24.sched.com/event/1aBEg/patterns-and-anti-patterns-in-embedded-development-what-security-incidents-of-2023-teach-us-marta-rybczynska-syslinbit"&gt;talk&lt;/a&gt;
about patterns and anti-patterns in embedded Linux security at the
&lt;a
href="https://events.linuxfoundation.org/embedded-open-source-summit/"&gt;Embedded
Open Source Summit&lt;/a&gt; (EOSS), co-located with &lt;a
href="https://events.linuxfoundation.org/open-source-summit-north-america/"&gt;Open
Source Summit North America&lt;/a&gt; (OSSNA), on April 16 in Seattle, Washington.&lt;/p&gt;
</description>
			<pubDate>Thu, 09 May 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>A leadership crisis in the Nix community</title>
			<link>https://lwn.net/Articles/970824/</link>
			<guid>https://lwn.net/Articles/970824/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
On April 21, a group of anonymous authors and non-anonymous signatories published
&lt;a href="https://save-nix-together.org/"&gt;a lengthy open letter&lt;/a&gt; to the
&lt;a href="https://nixos.org/"&gt;
Nix&lt;/a&gt; community
and Nix founder Eelco Dolstra calling for his resignation from the project. They
claimed ongoing problems with the project's leadership, primarily focusing on the
way his actions have allegedly
undermined people nominally empowered to perform various
moderation and governance tasks. Since its release, the letter has gained
more than 100 signatures.
&lt;/p&gt;
</description>
			<pubDate>Thu, 09 May 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Support for the TSO memory model on Arm CPUs</title>
			<link>https://lwn.net/Articles/970907/</link>
			<guid>https://lwn.net/Articles/970907/</guid>
			<dc:creator>corbet</dc:creator>
			<description>At the CPU level, a memory model describes, among other things, the amount
of freedom the processor has to reorder memory operations.  If low-level
code does not take the memory model into account, unpleasant surprises are
likely to follow.  Naturally, different CPUs offer different memory models,
complicating the portability of certain types of concurrent software.  To
make life easier, some Arm CPUs offer the ability to emulate the x86 memory
model, but efforts to make that feature available in the kernel are running
into opposition.
</description>
			<pubDate>Thu, 09 May 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for May 2, 2024</title>
			<link>https://lwn.net/Articles/971093/</link>
			<guid>https://lwn.net/Articles/971093/</guid>
			<dc:creator>daroc</dc:creator>
			<description>The LWN.net Weekly Edition for May 2, 2024 is available.
</description>
			<pubDate>Thu, 09 May 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>A look at Ubuntu Desktop LTS 24.04</title>
			<link>https://lwn.net/Articles/971143/</link>
			<guid>https://lwn.net/Articles/971143/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;Ubuntu&amp;nbsp;24.04&amp;nbsp;LTS, code-named "Noble&amp;nbsp;Numbat", was &lt;a
href="https://lwn.net/Articles/971175/"&gt;released&lt;/a&gt; on April&amp;nbsp;25. This release includes &lt;a
href="https://release.gnome.org/46/"&gt;GNOME&amp;nbsp;46&lt;/a&gt;, installer updates,
security enhancements, a lot of updated packages, and a new App Center
that puts a heavy emphasis on using Snaps to install software. It is not an ambitious release, but it brings enough to the table that it's a worthwhile update.&lt;/p&gt;
</description>
			<pubDate>Thu, 09 May 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>A proposal to switch Fedora Workstation's desktop</title>
			<link>https://lwn.net/Articles/970929/</link>
			<guid>https://lwn.net/Articles/970929/</guid>
			<dc:creator>jake</dc:creator>
			<description>A proposal to switch the default desktop for Fedora Workstation from GNOME
to KDE Plasma largely went over like the proverbial lead balloon—unsurprisingly.
But the 
conversation about the proposal did surface some areas where the
distribution could 
perhaps be more inclusive with regard to the other desktop choices
available.  The project believes that it
benefits from being opinionated and not requiring users to make
multiple decisions before they can even install the distribution, but there
is a balance 
to be found.
</description>
			<pubDate>Thu, 16 May 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Inheritable credentials for directory file descriptors</title>
			<link>https://lwn.net/Articles/971825/</link>
			<guid>https://lwn.net/Articles/971825/</guid>
			<dc:creator>corbet</dc:creator>
			<description>In Unix-like systems, an open file descriptor carries the right to access
the opened object in specific ways.  As a general rule, that file
descriptor does &lt;i&gt;not&lt;/i&gt; enable access to any other objects.  The
recently merged &lt;a href="https://lwn.net/Articles/947173/"&gt;BPF token feature&lt;/a&gt; runs
counter to this practice by creating file descriptors that carry specific
BPF-related access rights.  A similar but different approach to
capability-carrying file descriptors, in the form of directory file
descriptors that include their own credentials, is currently under
consideration in the kernel community.
</description>
			<pubDate>Thu, 16 May 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Systemd heads for a big round-number release</title>
			<link>https://lwn.net/Articles/971866/</link>
			<guid>https://lwn.net/Articles/971866/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
The
&lt;a href="https://systemd.io/"&gt;
systemd project&lt;/a&gt; is preparing for a new release.
&lt;a href="https://github.com/systemd/systemd/releases/tag/v256-rc1"&gt;
Version&amp;nbsp;256-rc1&lt;/a&gt; was released
on April&amp;nbsp;25 with a large number of changes and new features. Most of the
changes relate to security, easier configuration, unprivileged access to system
resources, or all three of these. Users of systemd will find setting up
containers — even without root access — much simpler and more secure.
&lt;/p&gt;
</description>
			<pubDate>Thu, 16 May 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for May 9, 2024</title>
			<link>https://lwn.net/Articles/972160/</link>
			<guid>https://lwn.net/Articles/972160/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The LWN.net Weekly Edition for May 9, 2024 is available.
</description>
			<pubDate>Thu, 16 May 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Securing Git repositories with gittuf</title>
			<link>https://lwn.net/Articles/972467/</link>
			<guid>https://lwn.net/Articles/972467/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;The so-called software supply chain starts with source code. But most security measures and tooling
don't kick in until source is turned into an artifact&amp;mdash;a source
tarball, binary build, container image, or other method of delivering a
release to users. The &lt;a href="https://gittuf.dev/"&gt;gittuf&lt;/a&gt; project
is an attempt to provide a security layer for &lt;a
href="https://git-scm.com/"&gt;Git&lt;/a&gt; that can handle key management,
enforce security policies for repositories, and guard against attacks
at the version-control layer. At Open Source Summit North America (OSSNA), Aditya Sirish A
Yelgundhalli and Billy Lynch &lt;a
href="https://ossna2024.sched.com/event/1aBPF/securing-git-repositories-with-gittuf-aditya-sirish-a-yelgundhalli-new-york-university-billy-lynch-chainguard"&gt;presented&lt;/a&gt;
an introduction to gittuf with an overview of its goals and
status.&lt;/p&gt;
</description>
			<pubDate>Thu, 16 May 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Debian dismisses AI-contributions policy</title>
			<link>https://lwn.net/Articles/972331/</link>
			<guid>https://lwn.net/Articles/972331/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;In April, the Gentoo Linux project &lt;a
href="https://lwn.net/Articles/970072/"&gt;banned&lt;/a&gt; the use of
generative AI/ML tools due to copyright, ethical, and quality
concerns. This means contributors cannot use tools like ChatGPT or GitHub Copilot to
create content for the distribution such as code, documentation,
bug reports, and forum posts. A proposal for Debian to adopt a similar
policy revealed a distinct lack of love for those kinds of tools,
though it would also seem few contributors support
banning them outright. &lt;/p&gt;
</description>
			<pubDate>Thu, 23 May 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Another push for sched_ext</title>
			<link>https://lwn.net/Articles/972710/</link>
			<guid>https://lwn.net/Articles/972710/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The extensible scheduler class (or "sched_ext") is a comprehensive
framework that enables the implementation of CPU schedulers as a set of BPF
programs that can be loaded at run time.  Despite having attracted a fair
amount of interest from the development community, sched_ext has run into
considerable opposition and seems far from acceptance into the mainline.
The posting by Tejun Heo of &lt;a
href="https://lwn.net/ml/linux-kernel/20240501151312.635565-1-tj@kernel.org/"&gt;a new
version of the sched_ext series&lt;/a&gt; at the beginning of May has restarted
this long-running discussion, but it is not clear what the end result will
be.
</description>
			<pubDate>Thu, 23 May 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for May 16, 2024</title>
			<link>https://lwn.net/Articles/973073/</link>
			<guid>https://lwn.net/Articles/973073/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The LWN.net Weekly Edition for May 16, 2024 is available.
</description>
			<pubDate>Thu, 23 May 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>The state of the page in 2024</title>
			<link>https://lwn.net/Articles/973565/</link>
			<guid>https://lwn.net/Articles/973565/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The advent of the &lt;a href="https://lwn.net/Articles/849538/"&gt;folio&lt;/a&gt; structure to
describe groups of pages has been one of the most fundamental
transformations within the kernel in recent years.  Since the folio
transition affects many subsystems, it is fitting that the subject was
covered at the beginning of the 2024 &lt;a
href="https://events.linuxfoundation.org/lsfmmbpf/"&gt;Linux Storage,
Filesystem, Memory Management, and BPF Summit&lt;/a&gt; in a joint session of the
storage, filesystem, and memory-management tracks.  Matthew Wilcox used the
session to review the work that has been done in this area and to discuss
what comes next.
</description>
			<pubDate>Thu, 23 May 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>The first half of the 6.10 merge window</title>
			<link>https://lwn.net/Articles/973687/</link>
			<guid>https://lwn.net/Articles/973687/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The merge window for the 6.10 kernel release opened on May&amp;nbsp;12; between
then and the time of this writing, 6,819 non-merge commits were pulled into
the mainline kernel for that release.  Your editor has taken some time out
from &lt;a href="https://lwn.net/Articles/lsfmmbpf2024/"&gt;LSFMM+BPF&lt;/a&gt; in an attempt to keep
up with the commit flood.  Read on for an overview of the most significant
changes that were pulled in the early part of the 6.10 merge window.
</description>
			<pubDate>Thu, 30 May 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>The KeePassXC kerfuffle</title>
			<link>https://lwn.net/Articles/973782/</link>
			<guid>https://lwn.net/Articles/973782/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;&lt;a href="https://keepassxc.org/"&gt;KeePassXC&lt;/a&gt; is an open-source (GPLv3),
cross-platform password manager with local-only data storage. The
project comes with a number of &lt;a
href="https://github.com/keepassxreboot/keepassxc/wiki/Building-KeePassXC#build-options"&gt;build
options&lt;/a&gt; that can be used to toggle optional features, such as &lt;a
href="https://keepassxc.org/docs/KeePassXC_GettingStarted#_setup_browser_integration"&gt;browser
integration&lt;/a&gt; and &lt;a
href="https://keepassxc.org/docs/KeePassXC_UserGuide#_database_sharing_with_keeshare"&gt;password
database sharing&lt;/a&gt;. However, controversy ensued when Debian Developer Julian Klode decided to
make use of these compile flags to disable these features to improve security in the
&lt;tt&gt;keepassxc&lt;/tt&gt; package uploaded to Debian unstable for the
upcoming Debian 13 ("Trixie") release.&lt;/p&gt;
</description>
			<pubDate>Thu, 30 May 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for May 23, 2024</title>
			<link>https://lwn.net/Articles/973888/</link>
			<guid>https://lwn.net/Articles/973888/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The LWN.net Weekly Edition for May 23, 2024 is available.
</description>
			<pubDate>Thu, 30 May 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Extending the mempolicy interface for heterogeneous systems</title>
			<link>https://lwn.net/Articles/973964/</link>
			<guid>https://lwn.net/Articles/973964/</guid>
			<dc:creator>corbet</dc:creator>
			<description>Non-uniform memory access (NUMA) systems are organized with their CPUs
grouped into nodes, each of which has memory attached to it.  All memory in
the system is accessible from all CPUs, but memory attached to the local
node is faster.  The kernel's &lt;a
href="https://man7.org/linux/man-pages/man2/set_mempolicy.2.html"&gt;memory-policy
("mempolicy") interface&lt;/a&gt; allows threads to inform the kernel about how
they would like their memory placed to get the best performance.  In recent
years, the NUMA concept has been extended to support the management of
different types of memory in a system, pushing the limits of the mempolicy
subsystem.  In a remotely presented session at the &lt;a
href="https://events.linuxfoundation.org/lsfmmbpf/"&gt;2024 Linux Storage,
Filesystem, Memory Management, and BPF Summit&lt;/a&gt;, Gregory Price discussed
the ways in which the kernel's memory-policy support should evolve to
handle today's more-complex systems.
</description>
			<pubDate>Thu, 30 May 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Better support for locally-attached-memory tiering</title>
			<link>https://lwn.net/Articles/974126/</link>
			<guid>https://lwn.net/Articles/974126/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The term "memory tiering" refers to the management of memory placement on
systems with multiple types of memory, each of which has its own
performance characteristics.  On such systems, poor placement can lead to
significantly worse performance.  A memory-management-track discussion at
the &lt;a
href="https://events.linuxfoundation.org/lsfmmbpf/"&gt;2024 Linux Storage,
Filesystem, Memory Management, and BPF Summit&lt;/a&gt; took yet another look at
tiering challenges with a focus on upcoming technologies that may simplify
(or complicate) the picture.
</description>
			<pubDate>Thu, 30 May 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>What's next for the SLUB allocator</title>
			<link>https://lwn.net/Articles/974138/</link>
			<guid>https://lwn.net/Articles/974138/</guid>
			<dc:creator>corbet</dc:creator>
			<description>There are two fundamental levels of memory allocator in the Linux kernel:
the page allocator, which allocates memory in units of pages, and the slab
allocator, which allocates arbitrarily-sized chunks that are usually (but
not necessarily) smaller than a page.  The slab allocator is the one that
stands behind commonly used kernel functions like &lt;tt&gt;kmalloc()&lt;/tt&gt;.  At
the &lt;a href="https://events.linuxfoundation.org/lsfmmbpf/"&gt;2024 Linux
Storage, Filesystem, Memory Management, and BPF Summit&lt;/a&gt;, slab maintainer
Vlastimil Babka provided an update on recent changes at the slab level and
discussed the changes that are yet to come.
</description>
			<pubDate>Thu, 30 May 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Supporting larger block sizes in filesystems</title>
			<link>https://lwn.net/Articles/974219/</link>
			<guid>https://lwn.net/Articles/974219/</guid>
			<dc:creator>jake</dc:creator>
			<description>In a 
combined storage and filesystem session at the 2024
&lt;a
href="https://events.linuxfoundation.org/lsfmmbpf/"&gt;Linux Storage,
Filesystem, Memory Management, and BPF Summit&lt;/a&gt;, Luis Chamberlain led a
discussion on filesystem support for block sizes larger than the usual 4KB
page size, 
which followed up on  &lt;a href="https://lwn.net/Articles/933437/"&gt;discussion from last year&lt;/a&gt;.  While the
session was meant to look at the intersection of larger block sizes
with atomic block writes  that avoid torn
(partial) writes (which was also &lt;a
href="https://lwn.net/Articles/933015/"&gt;discussed last year&lt;/a&gt;), it mostly focused on the
filesystem side.  Over time, the
block sizes offered by storage devices have risen from the original
512&amp;nbsp;bytes; Chamberlain
wanted to discuss filesystem support for block sizes larger than 4KB.
</description>
			<pubDate>Thu, 30 May 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Virtual machine scheduling with BPF</title>
			<link>https://lwn.net/Articles/974363/</link>
			<guid>https://lwn.net/Articles/974363/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
Vineeth Pillai gave a remote talk at the 2024
&lt;a href="https://events.linuxfoundation.org/lsfmmbpf/"&gt;Linux Storage,
Filesystem, Memory Management, and BPF Summit&lt;/a&gt; explaining how BPF could be
used to improve the performance of virtual machines (VMs). Pillai has
&lt;a href="https://lwn.net/ml/linux-kernel/20240403140116.3002809-1-vineeth@bitbyteword.org/"&gt;
a patch
set&lt;/a&gt; designed to let guest and host machines share scheduling information in
order to eliminate some of the overhead of running in a VM. The assembled
developers had several comments on the design, but seemed overall to approve of
the prospect.
&lt;/p&gt;
</description>
			<pubDate>Thu, 30 May 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Dynamically sizing the kernel stack</title>
			<link>https://lwn.net/Articles/974367/</link>
			<guid>https://lwn.net/Articles/974367/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The kernel stack is a scarce and tightly constrained resource; kernel
developers often have to go far out of their way to avoid using too much
stack space.  The size of the stack is also fixed, leading to situations
where it is too small for some code paths, while wastefully large for
others.  At the &lt;a
href="https://events.linuxfoundation.org/lsfmmbpf/"&gt;2024 Linux Storage,
Filesystem, Memory Management, and BPF Summit&lt;/a&gt;, Pasha Tatashin proposed
making the kernel stack size dynamic, making more space available when
needed while saving memory overall.  This change is not as easy to
implement as it might seem, though.
</description>
			<pubDate>Thu, 30 May 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Faster page faults with RCU-protected VMA walks</title>
			<link>https://lwn.net/Articles/974392/</link>
			<guid>https://lwn.net/Articles/974392/</guid>
			<dc:creator>corbet</dc:creator>
			<description>Looking up a virtual memory area (VMA) in a process's address space, for
the handling of page faults or any of a number of other tasks, in
multi-threaded processes has long been bedeviled by lock contention in the
kernel.  As a result, developer gatherings have been subjected to many
sessions on how to improve the situation.  At the &lt;a
href="https://events.linuxfoundation.org/lsfmmbpf/"&gt;2024 Linux Storage,
Filesystem, Memory-Management and BPF Summit&lt;/a&gt;, developers in the
memory-management track met, in a session led by Liam Howlett, to talk
about a situation that has improved considerably in recent times, but which
still offers opportunities for optimization.
</description>
			<pubDate>Thu, 30 May 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Merging msharefs</title>
			<link>https://lwn.net/Articles/974512/</link>
			<guid>https://lwn.net/Articles/974512/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The problem of sharing page tables across processes has been discussed
numerous times over the years, Khalid Aziz said at the beginning of his &lt;a
href="https://events.linuxfoundation.org/lsfmmbpf/"&gt;2024 Linux Storage,
Filesystem, Memory-Management and BPF Summit&lt;/a&gt; session on the topic.  He
was there to, once again, talk about the proposed &lt;a
href="https://lwn.net/Articles/895217/"&gt;&lt;tt&gt;mshare()&lt;/tt&gt;&lt;/a&gt; system call (which, in its
current form, is no longer actually a system call but the feature still
goes by that name) and to see what can be done to finally get it into the
mainline.
</description>
			<pubDate>Thu, 30 May 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Documenting page flags by committee</title>
			<link>https://lwn.net/Articles/974515/</link>
			<guid>https://lwn.net/Articles/974515/</guid>
			<dc:creator>corbet</dc:creator>
			<description>For every page of memory in the system, the kernel maintains a set of page
flags describing how the page is used and various aspects of its current
state.  Space for page flags has been in &lt;a
href="https://lwn.net/Articles/335768/"&gt;chronic short supply&lt;/a&gt;, leading to a desire to
eliminate or consolidate them whenever possible.  That objective, though,
is hampered by the fact that the purpose of many page flags is not well
understood.  In a memory-management-track session at the &lt;a
href="https://events.linuxfoundation.org/lsfmmbpf/"&gt;2024 Linux Storage,
Filesystem, Memory-Management and BPF Summit&lt;/a&gt;, Matthew Wilcox set out to
cooperatively update the page-flag documentation to improve that situation.
</description>
			<pubDate>Thu, 30 May 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>The path to deprecating SPARSEMEM</title>
			<link>https://lwn.net/Articles/974517/</link>
			<guid>https://lwn.net/Articles/974517/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The term "memory model" is used in a couple of ways within the kernel.
Perhaps the more obscure meaning is the memory-management subsystem's view
of how physical memory is organized on a given system.  A proper
representation of physical memory will be more efficient in terms of memory
and CPU use.  Since hardware comes in numerous variations, the kernel
supports a number of memory models to match; see &lt;a
href="https://lwn.net/Articles/789304/"&gt;this article&lt;/a&gt; for details.  At the &lt;a
href="https://events.linuxfoundation.org/lsfmmbpf/"&gt;2024 Linux Storage,
Filesystem, Memory-Management and BPF Summit&lt;/a&gt;, Oscar Salvador,
presenting remotely, made the case for removing one of those models.
</description>
			<pubDate>Thu, 30 May 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Two sessions on CXL memory</title>
			<link>https://lwn.net/Articles/974518/</link>
			<guid>https://lwn.net/Articles/974518/</guid>
			<dc:creator>corbet</dc:creator>
			<description>&lt;a href="https://en.wikipedia.org/wiki/Compute_Express_Link"&gt;Compute
Express Link (CXL)&lt;/a&gt; is a data-center-oriented memory solution that,
according to some in the industry, will yield large cost savings and
performance improvements.  Others are more skeptical.  At the &lt;a
href="https://events.linuxfoundation.org/lsfmmbpf/"&gt;2024 Linux Storage,
Filesystem, Memory-Management and BPF Summit&lt;/a&gt;, two sessions covered CXL
and how it will be supported in future kernels.
</description>
			<pubDate>Thu, 30 May 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>What's scheduled for sched_ext</title>
			<link>https://lwn.net/Articles/974387/</link>
			<guid>https://lwn.net/Articles/974387/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
David Vernet's second talk at the 2024
&lt;a href="https://events.linuxfoundation.org/lsfmmbpf/"&gt;Linux Storage,
Filesystem, Memory Management, and BPF Summit&lt;/a&gt; was a summary of the state of
sched_ext, the extensible BPF scheduler that &lt;a href="https://lwn.net/Articles/972710/"&gt;LWN
covered in early May&lt;/a&gt;. In short, sched_ext is intended as a platform for
rapid experimentation with schedulers, and a tool to let performance-minded
administrators customize the scheduler to their workload. The patch set has seen
several revisions, becoming more generic and powerful over time.
Vernet spoke about what has been done in the past year,
and what is still missing before sched_ext can be considered pretty much
complete.
&lt;/p&gt;
</description>
			<pubDate>Thu, 06 Jun 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>The twilight of the version-1 memory controller</title>
			<link>https://lwn.net/Articles/974575/</link>
			<guid>https://lwn.net/Articles/974575/</guid>
			<dc:creator>corbet</dc:creator>
			<description>Almost immediately after the merging of &lt;a href="https://lwn.net/Articles/603762/"&gt;control
groups&lt;/a&gt;, kernel developers set their sights on reimplementing them
properly.  The second version of the control-group API started trickling
into the kernel around the 3.16 release in 2014 and users have long since
been encouraged to migrate, but support for (and users of) the initial API
remain.  At the &lt;a href="https://events.linuxfoundation.org/lsfmmbpf/"&gt;2024
Linux Storage, Filesystem, Memory-Management and BPF Summit&lt;/a&gt;,
memory-management developers discussed whether (and when) it might be
possible to remove the version-1 memory controller.  The session was led by
Shakeel Butt and (participating remotely) Roman Gushchin.
</description>
			<pubDate>Thu, 06 Jun 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Atomic writes without tears</title>
			<link>https://lwn.net/Articles/974578/</link>
			<guid>https://lwn.net/Articles/974578/</guid>
			<dc:creator>jake</dc:creator>
			<description>John Garry and Ted Ts'o led a discussion about supporting atomic writes for buffered
I/O, without any torn (or partial) writes to the device, at the 2024 &lt;a
href="https://events.linuxfoundation.org/lsfmmbpf/"&gt;Linux Storage,
Filesystem, Memory Management, and BPF Summit&lt;/a&gt;.  It is something of a
continuation of a &lt;a href="https://lwn.net/Articles/933015/"&gt;discussion at last year's
summit&lt;/a&gt;. The goal is to help PostgreSQL, which writes its data using
16KB buffered I/O; it currently has to do a lot of extra work to ensure
that its data is safe on disk.  A promise of non-torn, 16KB buffered writes
would allow the database 
to avoid doing double writes.
</description>
			<pubDate>Thu, 06 Jun 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Large-folio support for shmem and tmpfs</title>
			<link>https://lwn.net/Articles/974630/</link>
			<guid>https://lwn.net/Articles/974630/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The kernel contains a pair of related filesystems that, among other things,
can be used for shared-memory applications; shmem is an internal mechanism
used within the kernel, while the tmpfs filesystem is mounted and
accessible from user space.  As is the case elsewhere in the kernel, these
subsystems would benefit from the addition of large-folio support.  During
a joint storage, filesystem, and memory-management session at the &lt;a
href="https://events.linuxfoundation.org/lsfmmbpf/"&gt;2024 Linux Storage,
Filesystem, Memory-Management and BPF Summit&lt;/a&gt;, Daniel Gomez talked about
the work he is doing to add that support.
</description>
			<pubDate>Thu, 06 Jun 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for May 30, 2024</title>
			<link>https://lwn.net/Articles/974709/</link>
			<guid>https://lwn.net/Articles/974709/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The LWN.net Weekly Edition for May 30, 2024 is available.
</description>
			<pubDate>Thu, 06 Jun 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>The rest of the 6.10 merge window</title>
			<link>https://lwn.net/Articles/974869/</link>
			<guid>https://lwn.net/Articles/974869/</guid>
			<dc:creator>corbet</dc:creator>
			<description>Linus Torvalds &lt;a href="https://lwn.net/Articles/975144/"&gt;released 6.10-rc1&lt;/a&gt; and closed
the 6.10 merge window on May&amp;nbsp;26.  By that time, 11,534 non-merge
changesets had been pulled into the mainline for the next release; nearly
5,000 of those came in after "&lt;a href="https://lwn.net/Articles/973687/"&gt;The first half of
the 6.10 merge window&lt;/a&gt;" was written.  While the latter half of the merge
window tends to focus more on fixes, there was also a lot of new
functionality that landed during this time.
</description>
			<pubDate>Thu, 06 Jun 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Fleshing out memory descriptors</title>
			<link>https://lwn.net/Articles/974937/</link>
			<guid>https://lwn.net/Articles/974937/</guid>
			<dc:creator>corbet</dc:creator>
			<description>One of the long-term goals of the folio conversion in the kernel's
memory-management subsystem is the replacement of the &lt;tt&gt;page&lt;/tt&gt;
structure, which describes a page of physical memory, with an eight-byte
"memory descriptor".  This change would reduce the overhead of tracking
physical memory, increase type safety, and make memory management more
flexible.  Thus far, though, details on what the memory-descriptor future
will look like have been relatively scarce.  At the &lt;a
href="https://events.linuxfoundation.org/lsfmmbpf/"&gt;2024 Linux Storage,
Filesystem, Memory-Management and BPF Summit&lt;/a&gt;, Matthew Wilcox led a
discussion to try to fill in the picture somewhat.
</description>
			<pubDate>Thu, 06 Jun 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>The state of the memory-management community in 2024</title>
			<link>https://lwn.net/Articles/974939/</link>
			<guid>https://lwn.net/Articles/974939/</guid>
			<dc:creator>corbet</dc:creator>
			<description>A longstanding tradition in the memory-management track of the &lt;a
href="https://events.linuxfoundation.org/lsfmmbpf/"&gt;Linux Storage,
Filesystem, Memory-Management and BPF Summit&lt;/a&gt; is a session with
maintainer Andrew Morton to discuss the overall state of the community and
the development process.  The 2024 gathering upheld that tradition toward
the end of the final day of the event.  It seems that Morton and the
assembled developers were all happy with how memory-management work is
going, but there is always room for improvement.
</description>
			<pubDate>Thu, 06 Jun 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Measuring memory fragmentation</title>
			<link>https://lwn.net/Articles/974943/</link>
			<guid>https://lwn.net/Articles/974943/</guid>
			<dc:creator>corbet</dc:creator>
			<description>In the final session in the memory-management track of the &lt;a
href="https://events.linuxfoundation.org/lsfmmbpf/"&gt;2024 Linux Storage,
Filesystem, Memory-Management and BPF Summit&lt;/a&gt;, the exhausted group of
developers looked one more time at the use of huge pages and the associated
problem of memory fragmentation.  At its worst, this problem can make huge
pages harder (and more expensive) to allocate.  Luis Chamberlain, who ran
the session, felt that people were worried about this problem, but that
there was little data on how severe it truly is.
</description>
			<pubDate>Thu, 06 Jun 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Filesystems and iomap</title>
			<link>https://lwn.net/Articles/974958/</link>
			<guid>https://lwn.net/Articles/974958/</guid>
			<dc:creator>jake</dc:creator>
			<description>The &lt;a href="https://kernelnewbies.org/KernelProjects/iomap"&gt;iomap&lt;/a&gt;
block-mapping abstraction is being used by more filesystems, in part
because of its support for large folios.  But there are some challenges in
adopting iomap, which was the topic of a discussion led by Ritesh Harjani
in a combined storage and filesystem session at the 2024 &lt;a
href="https://events.linuxfoundation.org/lsfmmbpf/"&gt;Linux Storage,
Filesystem, Memory Management, and BPF Summit&lt;/a&gt;.  One of the main trouble
spots is how to handle metadata, which is not an area that iomap has been aimed
at.
</description>
			<pubDate>Thu, 06 Jun 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Supporting BPF in GCC</title>
			<link>https://lwn.net/Articles/975412/</link>
			<guid>https://lwn.net/Articles/975412/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
The GCC project has been &lt;a href="https://lwn.net/Articles/946254"&gt;working&lt;/a&gt; to support compiling to BPF
for some time. José Marchesi and David Faust spoke in an extended session at the 2024
&lt;a href="https://events.linuxfoundation.org/lsfmmbpf/"&gt;Linux Storage,
Filesystem, Memory Management, and BPF Summit&lt;/a&gt;
about how that work has been going, and what is left for GCC to be on-par with
LLVM with regard to BPF support. They also related tentative plans for how
GCC BPF support would be maintained in the future.
&lt;/p&gt;
</description>
			<pubDate>Thu, 06 Jun 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Fedora approves shipping pre-built macOS binaries</title>
			<link>https://lwn.net/Articles/975445/</link>
			<guid>https://lwn.net/Articles/975445/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;The &lt;a href="https://asahilinux.org/"&gt;Asahi Linux&lt;/a&gt; project works
to support Linux on Apple Silicon hardware. The
project's &lt;a
href="https://asahilinux.org/2023/08/fedora-asahi-remix/"&gt;flagship&lt;/a&gt;
distribution is the &lt;a href="https://asahilinux.org/fedora/"&gt;Fedora
Asahi Remix&lt;/a&gt;, which has its own &lt;a
href="https://github.com/AsahiLinux/asahi-installer"&gt;installer&lt;/a&gt; (rather than &lt;a
href="https://fedoraproject.org/wiki/Anaconda"&gt;Anaconda&lt;/a&gt;) to
accommodate the unique requirements of installing on Apple's
hardware. Previously the installer was built by the Asahi project, but it has asked for (and received) an exception
from the &lt;a href="https://docs.fedoraproject.org/en-US/fesco/"&gt;Fedora
Engineering Steering Committee&lt;/a&gt; (FESCo) to include two binaries
from upstream open-source projects so that the installer can be built on Fedora
infrastructure.&lt;/p&gt;
</description>
			<pubDate>Thu, 06 Jun 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>New APIs for filesystems</title>
			<link>https://lwn.net/Articles/975444/</link>
			<guid>https://lwn.net/Articles/975444/</guid>
			<dc:creator>jake</dc:creator>
			<description>A discussion of extensions to the &lt;a
href="https://man7.org/linux/man-pages/man2/statx.2.html"&gt;&lt;tt&gt;statx()&lt;/tt&gt;&lt;/a&gt;
system call comes up frequently at the &lt;a
href="https://events.linuxfoundation.org/lsfmmbpf/"&gt;Linux Storage,
Filesystem, Memory Management, and BPF Summit&lt;/a&gt;; this year's edition was
no exception.  Kent Overstreet led the first filesystem-only session at the
summit on querying information about filesystems that have subvolumes and
snapshots. While it was billed as a discussion on &lt;tt&gt;statx()&lt;/tt&gt;
additions, it ranged more widely over new APIs needed for modern filesystems.
</description>
			<pubDate>Thu, 13 Jun 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Debian's /tmpest in a teapot</title>
			<link>https://lwn.net/Articles/975565/</link>
			<guid>https://lwn.net/Articles/975565/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;Debian had a major &lt;a href="https://lwn.net/Articles/499410/"&gt;discussion&lt;/a&gt;
about mounting &lt;tt&gt;/tmp&lt;/tt&gt; as a RAM-based tmpfs in 2012 but inertia
won out in the end. Debian systems have continued to
store temporary files on disk by default. Until now. A mere 
12 years later, the project will be switching to a RAM-based &lt;tt&gt;/tmp&lt;/tt&gt; in the Debian
13 ("Trixie") release. Additionally, starting with Trixie, the
default will be to periodically clean up temporary files automatically in
&lt;tt&gt;&lt;nobr&gt;/tmp&lt;/nobr&gt;&lt;/tt&gt; and &lt;tt&gt;&lt;nobr&gt;/var/tmp&lt;/nobr&gt;&lt;/tt&gt;. Naturally, it involved a lengthy discussion first.&lt;/p&gt;
</description>
			<pubDate>Thu, 13 Jun 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Handling the NFS change attribute</title>
			<link>https://lwn.net/Articles/975863/</link>
			<guid>https://lwn.net/Articles/975863/</guid>
			<dc:creator>jake</dc:creator>
			<description>The saga of the &lt;tt&gt;i_version&lt;/tt&gt; field for inodes, which tracks the
occurrence of changes
to the data or metadata of a file, continued in a discussion at the 2024 &lt;a
href="https://events.linuxfoundation.org/lsfmmbpf/"&gt;Linux Storage,
Filesystem, Memory Management, and BPF Summit&lt;/a&gt;.  In a session led by
Jeff Layton, who has been doing a lot the work on &lt;a
href="https://lwn.net/Articles/905931/"&gt;changing the semantics and functioning of
&lt;tt&gt;i_version&lt;/tt&gt;&lt;/a&gt; over the years, he updated attendees on the status of the &lt;a
href="https://lwn.net/Articles/946394/"&gt;effort&lt;/a&gt; since a &lt;a
href="https://lwn.net/Articles/937247/"&gt;session at last year's summit&lt;/a&gt;.  His summary
was that things are
"pretty much where we started last year", but the discussion this time
pointed to some possible ways forward.
</description>
			<pubDate>Thu, 13 Jun 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for June 6, 2024</title>
			<link>https://lwn.net/Articles/975974/</link>
			<guid>https://lwn.net/Articles/975974/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The LWN.net Weekly Edition for June 6, 2024 is available.
</description>
			<pubDate>Thu, 13 Jun 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>An instruction-level BPF memory model</title>
			<link>https://lwn.net/Articles/976071/</link>
			<guid>https://lwn.net/Articles/976071/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
There are few topics as arcane as memory models, so it was a pleasant surprise
when the double-length session on the BPF memory model at the
&lt;a href="https://events.linuxfoundation.org/lsfmmbpf/"&gt;Linux Storage,
Filesystem, Memory Management, and BPF Summit&lt;/a&gt; turned out to be
understandable. Paul McKenney led the session, although he was clear that the
work he was presenting was also due to Puranjay Mohan, who unfortunately could
not attend the summit.
BPF does not actually have a formalized memory model yet;
instead it has relied on a history of talks like this one and a general informal understanding.
Unfortunately, ignoring memory models does not make them go away, and this has
already caused at least one BPF-related bug on weakly-ordered architectures.
Figuring out what a formal memory model for BPF should define was the focus of
McKenney's talk.
&lt;/p&gt;
</description>
			<pubDate>Thu, 13 Jun 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>One more pidfdfs surprise</title>
			<link>https://lwn.net/Articles/976125/</link>
			<guid>https://lwn.net/Articles/976125/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The "pidfdfs" virtual filesystem was added to the 6.9 kernel release as a
way to export better information about running processes to user space.  It
replaced a previous implementation in a way that was, on its surface, fully
compatible while adding a number of new capabilities.  This transition,
which was intended to be entirely invisible to existing applications,
already &lt;a href="https://lwn.net/Articles/963749/"&gt;ran into trouble&lt;/a&gt; in March, when a
misunderstanding with SELinux caused systems with pidfdfs to fail to boot
properly.  That problem was quickly fixed, but it turns out that there was
one more surprise in store, showing just how hard ABI compatibility can be
at times.
</description>
			<pubDate>Thu, 13 Jun 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Comparing BPF performance between implementations</title>
			<link>https://lwn.net/Articles/976317/</link>
			<guid>https://lwn.net/Articles/976317/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
Alan Jowett returned for a second remote presentation at the 2024
&lt;a href="https://events.linuxfoundation.org/lsfmmbpf/"&gt;Linux Storage,
Filesystem, Memory Management, and BPF Summit&lt;/a&gt; to compare the performance of
different BPF runtimes. He showed the results of the MIT-licensed BPF
&lt;a href="https://github.com/microsoft/bpf_performance"&gt;
microbenchmark suite&lt;/a&gt; he has been working on.
The benchmark suite does not yet provide a good direct comparison between all
platforms, so the results should be
taken with a grain of salt. They do
seem to indicate that there is some significant variation between
implementations, especially for different types of BPF maps.
&lt;/p&gt;
</description>
			<pubDate>Thu, 13 Jun 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Removing GFP_NOFS</title>
			<link>https://lwn.net/Articles/976355/</link>
			<guid>https://lwn.net/Articles/976355/</guid>
			<dc:creator>jake</dc:creator>
			<description>The &lt;tt&gt;GFP_NOFS&lt;/tt&gt; flag is meant for kernel memory allocations that
should not cause a call into the filesystems to reclaim memory because there are
already locks held that can potentially cause a deadlock.  The "scoped
allocation" API is a better choice for filesystems to indicate that they
are holding a lock, so &lt;tt&gt;GFP_NOFS&lt;/tt&gt; has &lt;a
href="https://lwn.net/Articles/753078/"&gt;long been on the chopping block&lt;/a&gt;, though
progress has been slow.  In a filesystem-track session at
the 2024 &lt;a
href="https://events.linuxfoundation.org/lsfmmbpf/"&gt;Linux Storage,
Filesystem, Memory Management, and BPF Summit&lt;/a&gt;, Matthew Wilcox wanted to
discuss how to move kernel filesystems away from the flag with the eventual
goal of removing it completely.
</description>
			<pubDate>Thu, 13 Jun 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Rethinking the PostgreSQL CommitFest model</title>
			<link>https://lwn.net/Articles/976793/</link>
			<guid>https://lwn.net/Articles/976793/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;Many years ago, the PostgreSQL project started holding regular &lt;a href="https://wiki.postgresql.org/wiki/CommitFest"&gt;CommitFests&lt;/a&gt; to
help tackle the work of reviewing and committing patches in a more
organized fashion. That has served the project well, but some in
the project are concerned that CommitFests are no longer meeting
the needs of PostgreSQL or its contributors. A lengthy discussion on the
pgsql-hackers mailing list turned up a number of complaints, a few
suggestions for improvement, but little consensus or momentum toward
a solution.&lt;/p&gt;
</description>
			<pubDate>Thu, 13 Jun 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Measuring and improving buffered I/O</title>
			<link>https://lwn.net/Articles/976856/</link>
			<guid>https://lwn.net/Articles/976856/</guid>
			<dc:creator>jake</dc:creator>
			<description>There are two types of file I/O on Linux, buffered I/O, which goes through
the page cache, and direct I/O, which goes directly to the storage device.
The performance of buffered I/O was reported to be a lot worse than direct
I/O, especially for one specific test, in Luis Chamberlain's 
&lt;a
href="https://lwn.net/ml/linux-fsdevel/Zdkxfspq3urnrM6I@bombadil.infradead.org/"&gt;topic
proposal&lt;/a&gt; for a session at the 2024 &lt;a
href="https://events.linuxfoundation.org/lsfmmbpf/"&gt;Linux Storage,
Filesystem, Memory Management, and BPF Summit&lt;/a&gt;.
The proposal resulted in a lengthy mailing-list discussion, 
which also came up in &lt;a
href="https://lwn.net/Articles/974487/"&gt;Paul McKenney's RCU session&lt;/a&gt; the next
day; Chamberlain led a 
combined storage and filesystem session to discuss those results with an
eye toward improving buffered I/O performance.
</description>
			<pubDate>Thu, 13 Jun 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Modernizing BPF for the next 10 years</title>
			<link>https://lwn.net/Articles/977013/</link>
			<guid>https://lwn.net/Articles/977013/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
BPF was first
&lt;a href="https://lwn.net/Articles/599755/"&gt;
generalized beyond packet filtering&lt;/a&gt; more than a decade ago. In that time, it
has changed a lot, becoming much more capable.
Alexei Starovoitov kicked off the second day of the BPF track at the 2024
&lt;a href="https://events.linuxfoundation.org/lsfmmbpf/"&gt;Linux Storage,
Filesystem, Memory Management, and BPF Summit&lt;/a&gt; by leading a session
discussing which changes to BPF are going to come in the next ten years as it
continues evolving. He proposed several ideas, including expanding the number of
registers available to BPF programs, dynamic deadlock detection, and relaxing
some existing limits of the verifier.
&lt;/p&gt;
</description>
			<pubDate>Thu, 20 Jun 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for June 13, 2024</title>
			<link>https://lwn.net/Articles/977365/</link>
			<guid>https://lwn.net/Articles/977365/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The LWN.net Weekly Edition for June 13, 2024 is available.
</description>
			<pubDate>Thu, 20 Jun 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Securing BPF programs before and after verification</title>
			<link>https://lwn.net/Articles/977394/</link>
			<guid>https://lwn.net/Articles/977394/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
BPF is in a unique position in terms of security. It runs in a privileged
context, within the kernel, and can have access to many sensitive details of the
kernel's operation. At the same time, unlike kernel modules, BPF programs aren't signed.
Additionally, the mechanisms behind BPF present challenges to implementing
signing or other security features. Three nearly back-to-back sessions at the
2024
&lt;a href="https://events.linuxfoundation.org/lsfmmbpf/"&gt;Linux Storage,
Filesystem, Memory Management, and BPF Summit&lt;/a&gt;
addressed some of the potential security problems.
&lt;/p&gt;
</description>
			<pubDate>Thu, 20 Jun 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Dropping the page cache for filesystems</title>
			<link>https://lwn.net/Articles/977486/</link>
			<guid>https://lwn.net/Articles/977486/</guid>
			<dc:creator>jake</dc:creator>
			<description>VFS maintainer Christian Brauner led a discussion about the possibility of
selectively dropping the contents of the page cache for a filesystem in a
session at the
2024 &lt;a
href="https://events.linuxfoundation.org/lsfmmbpf/"&gt;Linux Storage,
Filesystem, Memory Management, and BPF Summit&lt;/a&gt;.  As he described in his
&lt;a href="https://lwn.net/ml/all/20240116-tagelang-zugnummer-349edd1b5792%40brauner/"&gt;topic
proposal&lt;/a&gt;, the use case that started him down this path comes from
GNOME, which wants to be able to safely suspend access to an encrypted home
directory.  While it is known to kernel
developers, it is surprising to others that reads from encrypted
filesystems that have been suspended will succeed if the data to be read
still exists in the 
page cache.
</description>
			<pubDate>Thu, 20 Jun 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Elevating CentOS 7 to a new life</title>
			<link>https://lwn.net/Articles/977762/</link>
			<guid>https://lwn.net/Articles/977762/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;CentOS Linux&amp;nbsp;7 was &lt;a
href="https://lists.centos.org/pipermail/centos-announce/2014-July/020393.html"&gt;first
released&lt;/a&gt; in July&amp;nbsp;2014, and is due to go end-of-life (EOL) on June&amp;nbsp;30.
By now, anyone who pays attention to such things is aware that Red Hat &lt;a
href="https://lwn.net/Articles/839257/"&gt;pulled the plug&lt;/a&gt; on
CentOS&amp;nbsp;Linux in late&amp;nbsp;2020 to be replaced by CentOS Stream
instead. CentOS&amp;nbsp;Linux&amp;nbsp;8
support was &lt;a href="https://lwn.net/Articles/862832/"&gt;wound
down&lt;/a&gt; at the end of 2021 rather than in 2029 as originally stated.
CentOS Linux&amp;nbsp;7 was allowed to serve out its
full lifespan&amp;mdash;but that EOL is approaching rapidly and
there's no direct upgrade path. Users and organizations looking for a lifeline might want to consider
AlmaLinux's &lt;a href="https://wiki.almalinux.org/elevate/"&gt;ELevate&lt;/a&gt;
utility, which allows CentOS users to migrate to alternate enterprise
Linux (EL) operating systems.&lt;/p&gt;
</description>
			<pubDate>Thu, 20 Jun 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Improving control-flow integrity for Linux on RISC-V</title>
			<link>https://lwn.net/Articles/977720/</link>
			<guid>https://lwn.net/Articles/977720/</guid>
			<dc:creator>jake</dc:creator>
			<description>Redirecting execution flow is a common malware
technique that can be used to compromise operating systems. To protect from such attacks,
the chip makers of leading architectures like x86 and arm64 have implemented
&lt;a
href="https://lwn.net/Articles/900099/"&gt;control-flow-integrity (CFI) extensions&lt;/a&gt;, though they need system
software support to function. At the &lt;a
href="https://events.linuxfoundation.org/linux-security-summit-north-america/"&gt;Linux
Security Summit North America&lt;/a&gt;,  &lt;a
href="https://riscv.org/"&gt;RISC-V&lt;/a&gt; kernel developer Deepak Gupta described the CFI
protections for that architecture and  invited community input on the
kernel support for them.
</description>
			<pubDate>Thu, 27 Jun 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Adding a JIT compiler to CPython</title>
			<link>https://lwn.net/Articles/977855/</link>
			<guid>https://lwn.net/Articles/977855/</guid>
			<dc:creator>jake</dc:creator>
			<description>One of the big-ticket items for the upcoming Python&amp;nbsp;3.13 release is an experimental &lt;a
href="https://lwn.net/Articles/970397/"&gt;just-in-time (JIT) compiler&lt;/a&gt; for the language;
the other is, of course, the &lt;a
href="https://lwn.net/Articles/947138/"&gt;removal of the 
global interpreter lock (GIL)&lt;/a&gt;, which is also an experiment.  Brandt
Bucher is a member of the &lt;a 
href="https://github.com/faster-cpython"&gt;Faster CPython project&lt;/a&gt;, which is
working on making the reference implementation of the language faster via a
variety of techniques.  Last year at PyCon, he gave a &lt;a
href="https://lwn.net/Articles/930705/"&gt;talk about the specializing adaptive
interpreter&lt;/a&gt;; at &lt;a href="https://us.pycon.org/2024/"&gt;PyCon&amp;nbsp;2024&lt;/a&gt; in Pittsburgh, he described the work he and others have been doing
to &lt;a href="https://lwn.net/Articles/957239/"&gt;add a copy-and-patch JIT compiler&lt;/a&gt; to CPython.
</description>
			<pubDate>Thu, 27 Jun 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Aeon: openSUSE for lazy developers</title>
			<link>https://lwn.net/Articles/977987/</link>
			<guid>https://lwn.net/Articles/977987/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;The openSUSE project recently &lt;a
href="https://news.opensuse.org/2024/05/28/aeon-desktop-brings-new-features-in-rctwo-release/"&gt;announced&lt;/a&gt;
the second release candidate (RC2) of its &lt;a
href="https://aeondesktop.github.io/"&gt;Aeon Desktop&lt;/a&gt;, formerly known
as MicroOS Desktop GNOME. Aside from the new coat of naming paint,
Aeon breaks ground in a few other ways by dabbling with technologies not found in other openSUSE releases. The goal for Aeon is to provide
automated system updates using snapshots that can be applied
atomically, removing the burden of system maintenance for
"&lt;q&gt;lazy developers&lt;/q&gt;" who want to focus on their work rather than desktop
administration. System-tinkerers need not apply.&lt;/p&gt;
</description>
			<pubDate>Thu, 27 Jun 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Nested bottom-half locking for realtime kernels</title>
			<link>https://lwn.net/Articles/978189/</link>
			<guid>https://lwn.net/Articles/978189/</guid>
			<dc:creator>corbet</dc:creator>
			<description>Software-interrupt handlers (also called "bottom halves") have a long
history in the Linux kernel; for much of that history, developers have
wished that they could go away.  One of their unfortunate characteristics
is that they can add unexpected latency to the execution of unrelated
processes; this problem is felt especially acutely in the
realtime-preemption community.  The solution adopted there has created
problems of its own, though; in response Sebastian Andrzej Siewior is &lt;a
href="https://lwn.net/ml/all/20240607070427.1379327-1-bigeasy@linutronix.de"&gt;proposing&lt;/a&gt;
a new locking mechanism for realtime builds of the kernel that may have
benefits for non-realtime users as well.
</description>
			<pubDate>Thu, 27 Jun 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for June 20, 2024</title>
			<link>https://lwn.net/Articles/978238/</link>
			<guid>https://lwn.net/Articles/978238/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The LWN.net Weekly Edition for June 20, 2024 is available.
</description>
			<pubDate>Thu, 27 Jun 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>BPF tracing performance</title>
			<link>https://lwn.net/Articles/978335/</link>
			<guid>https://lwn.net/Articles/978335/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
On the final day of the 2024
&lt;a href="https://events.linuxfoundation.org/lsfmmbpf/"&gt;Linux Storage,
Filesystem, Memory Management, and BPF Summit&lt;/a&gt;, the BPF track
opened with a series of sessions on improving the performance and
flexibility of probes and other performance-monitoring tools, in the kernel and in
user space. Jiri Olsa led two sessions about different aspects of probes:
making the API for BPF programs attached to a probe more flexible, and making
user-space probes more efficient.
&lt;/p&gt;
</description>
			<pubDate>Thu, 27 Jun 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>How free software hijacked Philip Hazel's life</title>
			<link>https://lwn.net/Articles/978463/</link>
			<guid>https://lwn.net/Articles/978463/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;Philip Hazel was 51 when he began the &lt;a
href="https://www.exim.org/"&gt;Exim&lt;/a&gt; message transfer agent (MTA)
project in 1995, which
led to the &lt;a
href="https://github.com/PCRE2Project/pcre2"&gt;Perl-Compatible Regular
Expressions&lt;/a&gt; (PCRE) project in 1998. At 80,
he's maintained PCRE, and its successor PCRE2, for more than 27
years. For those doing the math, that's a year longer than LWN has
been in publication. Exim maintenance was handed off around the time
of his retirement in 2007. Now, he is ready to hand off PCRE2 as well,
if a successor can be found.&lt;/p&gt;
</description>
			<pubDate>Thu, 27 Jun 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>How kernel CVE numbers are assigned</title>
			<link>https://lwn.net/Articles/978711/</link>
			<guid>https://lwn.net/Articles/978711/</guid>
			<dc:creator>corbet</dc:creator>
			<description>It has been four months since &lt;a
href="http://www.kroah.com/log/blog/2024/02/13/linux-is-a-cna/"&gt;Greg
Kroah-Hartman&lt;/a&gt; and &lt;a
href="https://www.cve.org/Media/News/item/news/2024/02/13/kernel-org-Added-as-CNA"&gt;MITRE&lt;/a&gt;
announced that the Linux kernel project had become its own CVE Numbering
Authority (CNA).  Since then, the Linux CNA Team has developed workflows
and mechanisms to help manage the various tasks associated with this
challenge.  There does however, appear to be a lack of understanding among
community members of the processes and rules the team have been working
within.  The principal aim of this article, written by a member of the
Linux kernel CNA team, is to clarify how the team works and how kernel CVE
numbers are assigned.
</description>
			<pubDate>Thu, 27 Jun 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Capturing stack traces asynchronously with BPF</title>
			<link>https://lwn.net/Articles/978736/</link>
			<guid>https://lwn.net/Articles/978736/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
Andrii Nakryiko led a session at
the 2024
&lt;a href="https://events.linuxfoundation.org/lsfmmbpf/"&gt;Linux Storage,
Filesystem, Memory Management, and BPF Summit&lt;/a&gt; giving
a look into the APIs for capturing stack traces
using BPF, and how the APIs could be made more useful. BPF programs can capture the
current stack trace of a running process, including the portion in the kernel
during execution of a system call, which can be useful for diagnosing
performance problems, among other things. But there are substantial problems with
the existing API.
&lt;/p&gt;
</description>
			<pubDate>Thu, 27 Jun 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Rust for filesystems</title>
			<link>https://lwn.net/Articles/978738/</link>
			<guid>https://lwn.net/Articles/978738/</guid>
			<dc:creator>jake</dc:creator>
			<description>At the
2024 &lt;a
href="https://events.linuxfoundation.org/lsfmmbpf/"&gt;Linux Storage,
Filesystem, Memory Management, and BPF Summit&lt;/a&gt;, Wedson Almeida Filho and
Kent Overstreet led a combined storage and filesystem session on using Rust
for Linux filesystems. Back in December 2023, Almeida had &lt;a
href="https://lwn.net/ml/linux-fsdevel/20231018122518.128049-1-wedsonaf@gmail.com/"&gt;posted
an RFC patch set&lt;/a&gt; with
some Rust abstractions for filesystems, which resulted in &lt;a
href="https://lwn.net/Articles/958072/"&gt;some disagreement over the approach&lt;/a&gt;.  On the
same mid-May day as the session, he &lt;a
href="https://lwn.net/ml/all/20240514131711.379322-1-wedsonaf@gmail.com/"&gt;posted&lt;/a&gt;
a second version of the RFC patches, which he wanted to discuss along with
other Rust-related topics.
</description>
			<pubDate>Thu, 04 Jul 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>The GhostBSD in the machine</title>
			<link>https://lwn.net/Articles/978837/</link>
			<guid>https://lwn.net/Articles/978837/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;&lt;a href="https://www.ghostbsd.org/"&gt;GhostBSD&lt;/a&gt; is a
desktop-oriented operating system based on &lt;a
href="https://www.freebsd.org/"&gt;FreeBSD&lt;/a&gt; and the &lt;a
href="https://mate-desktop.org/"&gt;MATE Desktop Environment&lt;/a&gt;. The
goal of the project is to lower the barrier to entry of using FreeBSD
on a desktop or laptop system, and it largely succeeds at this. While it has a few rough edges
that make it hard to recommend for the average desktop user, it is
a fine choice for users who want a desktop with FreeBSD underpinnings
such as the Z File System (ZFS), and the &lt;a
href="https://wiki.ghostbsd.org/index.php/Ports"&gt;Ports&lt;/a&gt; (source) and &lt;a
href="https://wiki.ghostbsd.org/index.php/Pkg"&gt;Packages&lt;/a&gt; (binary) software collections.&lt;/p&gt;
</description>
			<pubDate>Thu, 04 Jul 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>A capability set for user namespaces</title>
			<link>https://lwn.net/Articles/978846/</link>
			<guid>https://lwn.net/Articles/978846/</guid>
			<dc:creator>corbet</dc:creator>
			<description>&lt;a href="https://lwn.net/Articles/532593/"&gt;User namespaces&lt;/a&gt; in Linux create an
environment in which all privileges are granted, but their effect is
contained within the namespace; they have become an important tool for the
implementation of containers.  They have also become a significant source
of worries for people who do not like the increased attack surface they
create for the kernel.  Various attempts have been made to restrict that
attack surface over the years; the latest is &lt;a
href="https://lwn.net/ml/all/20240609104355.442002-1-jcalmels@3xx0.net"&gt;user namespace
capabilities&lt;/a&gt;, posted by Jonathan Calmels.
</description>
			<pubDate>Thu, 04 Jul 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for June 27, 2024</title>
			<link>https://lwn.net/Articles/979084/</link>
			<guid>https://lwn.net/Articles/979084/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The LWN.net Weekly Edition for June 27, 2024 is available.
</description>
			<pubDate>Thu, 04 Jul 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Finishing the conversion to the "new" mount API</title>
			<link>https://lwn.net/Articles/979166/</link>
			<guid>https://lwn.net/Articles/979166/</guid>
			<dc:creator>jake</dc:creator>
			<description>Eric Sandeen led a filesystem-track session at 
the
2024 &lt;a
href="https://events.linuxfoundation.org/lsfmmbpf/"&gt;Linux Storage,
Filesystem, Memory Management, and BPF Summit&lt;/a&gt; on completing the
conversion of the existing kernel filesystems to use the &lt;a
href="https://lwn.net/Articles/759499/"&gt;mount API&lt;/a&gt; that was &lt;a
href="https://lwn.net/Articles/787963/"&gt;added for the 5.2 kernel&lt;/a&gt; in 2019.  That API is
invariably called the "new" API, which it &lt;i&gt;is&lt;/i&gt; when compared to the
venerable &lt;a 
href="https://man7.org/linux/man-pages/man2/mount.2.html"&gt;&lt;tt&gt;mount()&lt;/tt&gt;&lt;/a&gt;
system call, but it has been available for five years or so at this point
without really pushing its predecessor aside.  Sandeen wanted to discuss
the status of the conversion process and some other questions surrounding
the new API.
</description>
			<pubDate>Thu, 04 Jul 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Debian debate over tag2upload reaches compromise</title>
			<link>https://lwn.net/Articles/978324/</link>
			<guid>https://lwn.net/Articles/978324/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;Debian's proposed &lt;a
href="https://salsa.debian.org/dgit-team/dgit/-/blob/master/TAG2UPLOAD-DESIGN.txt"&gt;tag2upload
service&lt;/a&gt; would be worthy of an article
even if it wasn't so contentious; tag2upload promises a
streamlined way for Debian developers using Git to upload packages to
the &lt;a href="https://wiki.debian.org/Services/Debian%20Archive"&gt;Debian
Archive&lt;/a&gt;. But tag2upload has been in limbo for
years due to disagreement and a communication breakdown between the team
behind tag2upload and the &lt;a
href="https://ftp-master.debian.org/"&gt;ftpmasters&lt;/a&gt; team. It took the
threat of a &lt;a
href="https://www.debian.org/devel/constitution#item-4"&gt;General
Resolution&lt;/a&gt; (GR), weeks of discussion, and more than
1,000 emails to finally move forward.&lt;/p&gt;
</description>
			<pubDate>Thu, 11 Jul 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>PostmarketOS: Linux for phones and more</title>
			<link>https://lwn.net/Articles/979522/</link>
			<guid>https://lwn.net/Articles/979522/</guid>
			<dc:creator>jake</dc:creator>
			<description>In 2016, Oliver Smith reached a point of frustration with the short
lifespan of updates for his Android phone. Taking matters into his own
hands, he began developing &lt;a
href="https://postmarketos.org"&gt;postmarketOS&lt;/a&gt;, a Linux distribution for
mobile phones. Eight years later, the &lt;a
href="https://wiki.postmarketos.org/wiki/Team_members"&gt;core team and
trusted contributors&lt;/a&gt; have grown to twenty individuals, while the latest
release, &lt;a
href="https://postmarketos.org/blog/2024/06/16/v24.06-release/"&gt;v24.06&lt;/a&gt;,
now shows support for over 250&amp;nbsp;devices. Although postmarketOS isn't
usable as a day-to-day phone operating system on all of them, it can also enable repurposing devices into compact servers or kiosk machines.
</description>
			<pubDate>Thu, 11 Jul 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Redox: An operating system in Rust</title>
			<link>https://lwn.net/Articles/979524/</link>
			<guid>https://lwn.net/Articles/979524/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
With the
&lt;a href="https://rust-for-linux.com/"&gt;
Rust-for-Linux&lt;/a&gt; project starting to gain some ground, it is worth
looking at other operating systems that use Rust in their kernels. There
are &lt;a href="https://github.com/flosse/rust-os-comparison"&gt;
many&lt;/a&gt; attempts to use
Rust for operating system development, but &lt;a href="https://redox-os.org/"&gt;Redox&lt;/a&gt;
may be the most complete.
Redox is an MIT-licensed microkernel and corresponding user space, designed
around concepts taken from
&lt;a href="https://en.wikipedia.org/wiki/Plan_9_from_Bell_Labs"&gt;
Plan 9&lt;/a&gt;. While nowhere near being usable as a
replacement for Linux, it already provides a graphical user interface and
&lt;a href="https://www.redox-os.org/faq/#what-programs-can-redox-run"&gt;
the ability to run many POSIX programs&lt;/a&gt;.
&lt;/p&gt;
</description>
			<pubDate>Thu, 11 Jul 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Direct-to-device networking</title>
			<link>https://lwn.net/Articles/979549/</link>
			<guid>https://lwn.net/Articles/979549/</guid>
			<dc:creator>corbet</dc:creator>
			<description>It has been nearly one year since &lt;a
href="https://lwn.net/ml/netdev/20230710223304.1174642-1-almasrymina@google.com/"&gt;the
first version&lt;/a&gt; of the device memory TCP patches was posted by Mina
Almasry.  Now on &lt;a
href="https://lwn.net/ml/all/20240625195407.1922912-1-almasrymina@google.com"&gt;the 14th
revision&lt;/a&gt;, this series appears to be stabilizing.  Device memory TCP is
a specialized networking feature requiring a certain amount of setup, but
it could provide a significant performance improvement for some
data-intensive applications.
</description>
			<pubDate>Thu, 11 Jul 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Eliminating indirect calls for security modules</title>
			<link>https://lwn.net/Articles/979683/</link>
			<guid>https://lwn.net/Articles/979683/</guid>
			<dc:creator>corbet</dc:creator>
			<description>Like many kernel subsystems, the Linux security module (LSM) subsystem
makes extensive use of indirect function calls.  Those calls, however, are
increasingly problematic, and the pressure to remove them has been growing. 
The good news is that there is &lt;a
href="https://lwn.net/ml/all/20240629084331.3807368-1-kpsingh@kernel.org"&gt;a patch
series&lt;/a&gt; from KP Singh that accomplishes that goal.  Its progress into
the mainline has been slow — this change was first &lt;a
href="https://lwn.net/ml/linux-security-module/20200820164753.3256899-1-jackmanb@chromium.org/"&gt;proposed&lt;/a&gt;
by Brendan Jackman and Paul Renauld in 2020 — and this work has been caught
up in some wider controversies along the way, but it should be close to
being ready.
</description>
			<pubDate>Thu, 11 Jul 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for July 4, 2024</title>
			<link>https://lwn.net/Articles/979852/</link>
			<guid>https://lwn.net/Articles/979852/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The LWN.net Weekly Edition for July 4, 2024 is available.
</description>
			<pubDate>Thu, 11 Jul 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Mount notifications</title>
			<link>https://lwn.net/Articles/980330/</link>
			<guid>https://lwn.net/Articles/980330/</guid>
			<dc:creator>jake</dc:creator>
			<description>There are a handful of extensions to the "new" mount API that Christian
Brauner wanted to discuss as part of a filesystem session at 
the
2024 &lt;a
href="https://events.linuxfoundation.org/lsfmmbpf/"&gt;Linux Storage,
Filesystem, Memory Management, and BPF Summit&lt;/a&gt;.  In the session, though,
the only one that he got to was a followup to last year's &lt;a
href="https://lwn.net/Articles/932648/"&gt;discussion on mount-operation monitoring&lt;/a&gt;.
There is a need for user-space programs to be able to follow mount
operations (e.g. mount and unmount) that happen in the system, especially
for tools like container
managers or systemd.
</description>
			<pubDate>Thu, 11 Jul 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Giving bootloaders the boot with nmbl</title>
			<link>https://lwn.net/Articles/979789/</link>
			<guid>https://lwn.net/Articles/979789/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;At &lt;a href="https://www.devconf.info/cz/"&gt;DevConf.cz 2024&lt;/a&gt;,
Marta Lewandowska gave a talk to discuss a
new approach for booting Linux systems, "&lt;a
href="https://pretalx.com/devconf-cz-2024/talk/W3AVCT/"&gt;No more boot
loader: Please use the kernel instead&lt;/a&gt;". The talk, &lt;a
href="https://www.youtube.com/watch?v=ywrSDLp926M"&gt;available on
YouTube&lt;/a&gt;, introduced a new project called nmbl (for "no more bootloader",
pronounced "nimble"). The idea is to get rid of bootloaders (e.g., 
&lt;a href="https://www.gnu.org/software/grub/"&gt;GNU GRUB&lt;/a&gt;) with a
&lt;a
href="https://uapi-group.org/specifications/specs/unified_kernel_image/"&gt;Unified
Kernel Image&lt;/a&gt; (UKI) that removes the need for a separate bootloader
altogether. It is early days for nmbl, currently the project is only
being tested for use with virtual machines, but the idea is
compelling. If successful, nmbl could offer security, performance, and
maintenance benefits compared to GRUB and other separate bootloaders.&lt;/p&gt;
</description>
			<pubDate>Thu, 18 Jul 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Another try for getrandom() in the vDSO</title>
			<link>https://lwn.net/Articles/980447/</link>
			<guid>https://lwn.net/Articles/980447/</guid>
			<dc:creator>corbet</dc:creator>
			<description>Random numbers, it seems, can never be random enough, and they cannot be
generated quickly enough.  The kernel's &lt;a
href="https://man7.org/linux/man-pages/man2/getrandom.2.html"&gt;&lt;tt&gt;getrandom()&lt;/tt&gt;&lt;/a&gt;
system call might, after years of discussion, be seen as sufficiently
secure by most users, but it is still a system call.  Linux system calls
are relatively fast, but they are necessarily slower than calling a
function directly.  In an attempt to speed the provision of secure random
data to user space, Jason Donenfeld has put together &lt;a
href="https://lwn.net/ml/all/20240703183115.1075219-1-Jason@zx2c4.com"&gt;an
implementation of &lt;tt&gt;getrandom()&lt;/tt&gt;&lt;/a&gt; that lives in the &lt;a
href="https://man7.org/linux/man-pages/man7/vdso.7.html"&gt;virtual dynamic
shared object (vDSO) area&lt;/a&gt;.
</description>
			<pubDate>Thu, 18 Jul 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for July 11, 2024</title>
			<link>https://lwn.net/Articles/980654/</link>
			<guid>https://lwn.net/Articles/980654/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The LWN.net Weekly Edition for July 11, 2024 is available.
</description>
			<pubDate>Thu, 18 Jul 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Improving pseudo filesystems</title>
			<link>https://lwn.net/Articles/981155/</link>
			<guid>https://lwn.net/Articles/981155/</guid>
			<dc:creator>jake</dc:creator>
			<description>The eventfs filesystem provides an interface to the tracepoints that are available
to be used by various Linux tracing tools (e.g. ftrace, perf, uprobes,
etc.); it is meant to be a version of the tracefs filesystem that
dynamically allocates its entries as needed.  The goal is to reduce the memory
required for multiple instances of tracefs, as Steven Rostedt described in
a &lt;a href="https://lwn.net/Articles/895111/"&gt;session&lt;/a&gt; at the 2022
&lt;a
href="https://events.linuxfoundation.org/lsfmmbpf/"&gt;Linux Storage,
Filesystem, Memory Management, and BPF Summit&lt;/a&gt;.  He returned to the 2024
edition of the summit to talk further about how to make pseudo (or virtual)
filesystems, such as tracefs/eventfs, more like regular Linux filesystems,
where the directory entries (dentries) and inodes are only created (and
cached) as needed.
</description>
			<pubDate>Thu, 18 Jul 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Sxmo: a text-centric mobile user interface</title>
			<link>https://lwn.net/Articles/981320/</link>
			<guid>https://lwn.net/Articles/981320/</guid>
			<dc:creator>jake</dc:creator>
			<description>&lt;a href="https://sxmo.org"&gt;Sxmo&lt;/a&gt;, short for "Simple X Mobile", is described on its web site as "&lt;q&gt;a
minimalist environment for Linux mobile devices&lt;/q&gt;"; it offers a menu-driven
interface that is controlled with the phone's hardware buttons. Sxmo enables the user
to send SMS messages from a text editor and is entirely customizable with
shell scripts. This peculiar mobile user interface significantly differs
from the prevailing approach—but it works.
</description>
			<pubDate>Thu, 18 Jul 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>SUSE asks openSUSE to consider name change</title>
			<link>https://lwn.net/Articles/981018/</link>
			<guid>https://lwn.net/Articles/981018/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;&lt;a href="https://www.suse.com/"&gt;SUSE&lt;/a&gt; has, in a somewhat clumsy
fashion, asked &lt;a href="https://www.opensuse.org/"&gt;openSUSE&lt;/a&gt;
to consider rebranding to clear up confusion over the
relationship between SUSE the company and openSUSE as a community
project. That, in turn, has opened conversations about revising
openSUSE governance and more. So far, there is no concrete proposal to
consider, no timeline, or even a process for the community and company
to follow to make any decisions.&lt;/p&gt;
</description>
			<pubDate>Thu, 25 Jul 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Nix alternatives and spinoffs</title>
			<link>https://lwn.net/Articles/981124/</link>
			<guid>https://lwn.net/Articles/981124/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
Since the
&lt;a href="https://lwn.net/Articles/970824/"&gt;
disagreements&lt;/a&gt; that led to Eelco Dolstra
&lt;a href="https://lwn.net/Articles/971973/"&gt;
stepping down from the NixOS
Foundation board&lt;/a&gt;, there have been a number of projects forked from or inspired
by
&lt;a href="https://nixos.org/"&gt;
Nix&lt;/a&gt; that have stepped up to compete with it. Two months on, some of these
projects are now well-established enough to look at what they have to offer and
how they compare to each other. Overall, users have a number of good options to
choose from, whether they're seeking a compatible replacement for Nix (the
configuration language and package manager) or NixOS (the Linux distribution),
or something that takes the same ideas in a different direction.
&lt;/p&gt;
</description>
			<pubDate>Thu, 25 Jul 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>A look at Linux Mint 22</title>
			<link>https://lwn.net/Articles/981130/</link>
			<guid>https://lwn.net/Articles/981130/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;Linux Mint has &lt;a
href="https://blog.linuxmint.com/?p=4725"&gt;released&lt;/a&gt; a beta of its
next long-term-support (LTS) release, Linux&amp;nbsp;Mint&amp;nbsp;22 (code-named "Wilma"), based on &lt;a href="https://lwn.net/Articles/971143/"&gt;Ubuntu&amp;nbsp;24.04&lt;/a&gt;. Aside from the standard
software updates that come with any major upgrade, some of Wilma's
largest selling points are what it &lt;em&gt;doesn't&lt;/em&gt; have; namely snap
packages or GNOME applications that have broken theming on non-GNOME
desktops like Mint's Cinnamon desktop.&lt;/p&gt;
</description>
			<pubDate>Thu, 25 Jul 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Reports from OSPM 2024, part 1</title>
			<link>https://lwn.net/Articles/981371/</link>
			<guid>https://lwn.net/Articles/981371/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The sixth edition of the &lt;a
href="https://retis.sssup.it/ospm-summit/"&gt;Power Management and Scheduling
in the Linux Kernel (OSPM) Summit&lt;/a&gt; took place on May 30-31 2024, and was
graciously hosted by the &lt;a href="https://www.irit.fr/en/home"&gt;Institut de
Recherche en Informatique de Toulouse (IRIT)&lt;/a&gt; in Toulouse, France.  This
is the first of a series of articles describing the discussions held at
OSPM 2024; topics covered include latency hints, energy-aware scheduling,
ChromeOS, and user-space schedulers.
</description>
			<pubDate>Thu, 25 Jul 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Hierarchical storage management, fanotify, FUSE, and more</title>
			<link>https://lwn.net/Articles/981392/</link>
			<guid>https://lwn.net/Articles/981392/</guid>
			<dc:creator>jake</dc:creator>
			<description>Amir Goldstein led a filesystem-track session at the 2024 &lt;a
href="https://events.linuxfoundation.org/lsfmmbpf/"&gt;Linux Storage,
Filesystem, Memory Management, and BPF Summit&lt;/a&gt; on his project to build a
&lt;a
href="https://en.wikipedia.org/wiki/Hierarchical_storage_management"&gt;hierarchical
storage management&lt;/a&gt; (HSM) system using &lt;a
href="https://www.kernel.org/doc/html/latest/admin-guide/filesystem-monitoring.html"&gt;fanotify&lt;/a&gt;.
The idea is to monitor file access in order to determine when to retrieve
content from non-local storage (e.g. the cloud).  The session was a
follow-up to last year's &lt;a href="https://lwn.net/Articles/932415/"&gt;introduction to the
project&lt;/a&gt;, which covered some of the problems he had encountered; this
year, he
was updating attendees on its status and progress, along with some other
problem areas that he wanted to discuss.
</description>
			<pubDate>Thu, 25 Jul 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for July 18, 2024</title>
			<link>https://lwn.net/Articles/981628/</link>
			<guid>https://lwn.net/Articles/981628/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The LWN.net Weekly Edition for July 18, 2024 is available.
</description>
			<pubDate>Thu, 25 Jul 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Changing the filesystem-maintenance model</title>
			<link>https://lwn.net/Articles/981854/</link>
			<guid>https://lwn.net/Articles/981854/</guid>
			<dc:creator>jake</dc:creator>
			<description>Maintenance of the kernel is a difficult, often thankless, task; how it is
being handled, the role of maintainers, burnout, and so on are recurring
topics at kernel-related conferences.  At
the 2024 &lt;a
href="https://events.linuxfoundation.org/lsfmmbpf/"&gt;Linux Storage,
Filesystem, Memory Management, and BPF Summit&lt;/a&gt;, Josef Bacik and
Christian Brauner led a session to discuss possible changes to the way
filesystems are maintained, though Bacik took the lead role (and the podium).  There are a number of interrelated topics,
including merging new filesystems, removing old ones, making and testing changes
throughout the filesystem tree, and more.
</description>
			<pubDate>Thu, 25 Jul 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>A look inside the BPF verifier</title>
			<link>https://lwn.net/Articles/982077/</link>
			<guid>https://lwn.net/Articles/982077/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
LWN has covered BPF
&lt;a href="https://lwn.net/1998/0212/#kernel"&gt;
since its initial introduction to Linux&lt;/a&gt;, usually through the lens of the newest
developments; this can make it hard to view the whole picture. BPF provides
a way to extend a running kernel, without having to recompile and reboot.
It does this in a safe way, so that malicious BPF
programs cannot crash a running kernel, thanks to the BPF verifier. So how does
the verifier actually work, what are its limits, and how has it changed since
the early days of BPF?
&lt;/p&gt;
</description>
			<pubDate>Thu, 01 Aug 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Restricting execution of scripts — the third approach</title>
			<link>https://lwn.net/Articles/982085/</link>
			<guid>https://lwn.net/Articles/982085/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The kernel will not consent to execute just any file that happens to be
sitting in a filesystem; there are formalities, such as the checking of
execute permission and consulting security policies, to get through first.
On some systems, security policies have been established to limit execution
to specifically approved programs.  But there are files that are not
executed directly by the kernel; these include scripts fed to language
interpreters like Python, Perl, or a shell.  An attacker who is able to get
an interpreter to execute a file may be able to bypass a system's security
policies.  Mickaël Salaün has been working on closing this hole for years;
the &lt;a href="https://lwn.net/ml/all/20240704190137.696169-1-mic@digikod.net"&gt;latest
attempt&lt;/a&gt; takes the form of a new flag to the &lt;a
href="https://man7.org/linux/man-pages/man2/execveat.2.html"&gt;&lt;tt&gt;execveat()&lt;/tt&gt;&lt;/a&gt;
system call.
</description>
			<pubDate>Thu, 01 Aug 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Imitation, not artificial, intelligence</title>
			<link>https://lwn.net/Articles/982289/</link>
			<guid>https://lwn.net/Articles/982289/</guid>
			<dc:creator>jake</dc:creator>
			<description>Simon Willison, co-creator of the popular &lt;a
href="https://www.djangoproject.com/"&gt;Django web framework&lt;/a&gt; for Python,
gave a keynote presentation at &lt;a
href="https://us.pycon.org/2024/"&gt;PyCon&amp;nbsp;2024&lt;/a&gt; on a topic that is
unrelated to that work: large language models (LLMs).
The topic grew out of some other work that he is doing on &lt;a
href="https://datasette.io/"&gt;Datasette&lt;/a&gt;, which is a Python-based
"&lt;q&gt;tool for exploring and publishing data&lt;/q&gt;".  The talk was a look
beyond the hype to try to discover what useful things you can actually do
today using these models.  Unsurprisingly, there were some
cautionary notes from Willison, as well.
</description>
			<pubDate>Thu, 01 Aug 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for July 25, 2024</title>
			<link>https://lwn.net/Articles/982336/</link>
			<guid>https://lwn.net/Articles/982336/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The LWN.net Weekly Edition for July 25, 2024 is available.
</description>
			<pubDate>Thu, 01 Aug 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Large folios, swap, and FS-Cache</title>
			<link>https://lwn.net/Articles/982887/</link>
			<guid>https://lwn.net/Articles/982887/</guid>
			<dc:creator>jake</dc:creator>
			<description>David Howells wanted to discuss swap handling in light of multi-page folios
in a combined storage, filesystem, and memory-management session at
the 2024 &lt;a
href="https://events.linuxfoundation.org/lsfmmbpf/"&gt;Linux Storage,
Filesystem, Memory Management, and BPF Summit&lt;/a&gt;.  Swapping has always been
done with a one-to-one mapping of memory pages to swap slots, he said, but
swapping multi-page folios breaks that assumption.  He wondered if it would
make sense to use filesystem techniques to track swapped-out folios.
</description>
			<pubDate>Thu, 01 Aug 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>The rest of the 6.11 merge window</title>
			<link>https://lwn.net/Articles/982605/</link>
			<guid>https://lwn.net/Articles/982605/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The release of &lt;a
href="https://lwn.net/ml/all/CAHk-=wiyNokz0d3b=GRORij=mGvwoYHy=+bv6m2Hu_VqNdg66g@mail.gmail.com/"&gt;6.11-rc1&lt;/a&gt;
marked the end of the 6.11 merge window on July&amp;nbsp;28.  By that time,
12,102 non-merge changesets had been pulled into the mainline repository;
about 8,000 of those came in after &lt;a href="https://lwn.net/Articles/982034/"&gt;the
first-half summary&lt;/a&gt; was written.  Quite a few significant changes were
to be found in those changesets; there is also one big change that did not
make it.
</description>
			<pubDate>Thu, 08 Aug 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Famfs: a filesystem interface to shareable memory</title>
			<link>https://lwn.net/Articles/983105/</link>
			<guid>https://lwn.net/Articles/983105/</guid>
			<dc:creator>jake</dc:creator>
			<description>At the 2024 &lt;a href="https://events.linuxfoundation.org/lsfmmbpf/"&gt;Linux
Storage, Filesystem, Memory Management, and BPF Summit&lt;/a&gt;, John Groves led
a session on famfs, which is a filesystem he has developed that uses the
kernel's &lt;a
href="https://docs.kernel.org/filesystems/dax.html"&gt;direct-access (DAX)&lt;/a&gt;
mechanism to access memory that is shareable between hosts.  The discussion
was aimed at whether a different approach should be taken and, in
particular, whether FUSE should be used instead of implementing as an
in-kernel filesystem.  As noted in the &lt;a
href="https://lwn.net/ml/all/20240229002020.85535-1-john@groves.net/"&gt;thread&lt;/a&gt; about his
proposal for an LSFMM+BPF session, and the mailing-list discussions on &lt;a
href="https://lwn.net/ml/all/cover.1708709155.git.john%40groves.net/"&gt;the first&lt;/a&gt; and &lt;a
href="https://lwn.net/ml/linux-fsdevel/cover.1714409084.git.john@groves.net/"&gt;second
version&lt;/a&gt; of his patch set, there is some skepticism that a new in-kernel
filesystem is warranted for the use case.
</description>
			<pubDate>Thu, 08 Aug 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for August 1, 2024</title>
			<link>https://lwn.net/Articles/983267/</link>
			<guid>https://lwn.net/Articles/983267/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The LWN.net Weekly Edition for August 1, 2024 is available.
</description>
			<pubDate>Thu, 08 Aug 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Pulling Linux up by its bootstraps</title>
			<link>https://lwn.net/Articles/983340/</link>
			<guid>https://lwn.net/Articles/983340/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
A &lt;a href="https://lwn.net/Articles/841797/"&gt;
bootstrappable build&lt;/a&gt; is one that builds existing
software from scratch — for example, building GCC without relying on an existing
copy of GCC. In 2023, the Guix project
&lt;a href="https://lwn.net/Articles/930650/"&gt;announced&lt;/a&gt; that the project had reduced the size
of the binary bootstrap seed needed to build its operating system to just 357-bytes —
not counting the Linux kernel required to run the build process. Now, the
&lt;a href="https://github.com/fosslinux/live-bootstrap"&gt;live-bootstrap&lt;/a&gt; project
has gone a step further and removed the need for an existing kernel at all.
&lt;/p&gt;
</description>
			<pubDate>Thu, 08 Aug 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Showing up for Python in GNOME</title>
			<link>https://lwn.net/Articles/983897/</link>
			<guid>https://lwn.net/Articles/983897/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;A few years ago, &lt;a
href="https://pygobject.gnome.org/"&gt;PyGObject&lt;/a&gt;&amp;mdash;the Python
package that provides bindings for &lt;a
href="https://www.gtk.org/"&gt;GTK&lt;/a&gt; and &lt;a
href="https://www.gnome.org/"&gt;GNOME&lt;/a&gt; applications&amp;mdash;was not
faring particularly well. Several maintainers had left the project and its
development was not keeping pace with changes in GTK. At this year's
GUADEC, Dan Yeaw presented a &lt;a
href="https://events.gnome.org/event/209/contributions/757/"&gt;talk&lt;/a&gt;
about the project's decline, improvements in the last year, and his
experience getting involved in an undermaintained project.&lt;/p&gt;
</description>
			<pubDate>Thu, 08 Aug 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Maximal min() and max()</title>
			<link>https://lwn.net/Articles/983965/</link>
			<guid>https://lwn.net/Articles/983965/</guid>
			<dc:creator>corbet</dc:creator>
			<description>Like many projects written in C, the kernel makes extensive use of the C
preprocessor; indeed, the kernel's use is rather more extensive than most.
The preprocessor famously has a number of sharp edges associated with it.
One might not normally think of increased compilation time as one of them,
though.  It turns out that some changes to a couple of conceptually simple
preprocessor macros — &lt;tt&gt;min()&lt;/tt&gt; and &lt;tt&gt;max()&lt;/tt&gt; — led to some truly
pathological, but hidden, behavior where those macros were used.
</description>
			<pubDate>Thu, 15 Aug 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for August 8, 2024</title>
			<link>https://lwn.net/Articles/984216/</link>
			<guid>https://lwn.net/Articles/984216/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The LWN.net Weekly Edition for August 8, 2024 is available.
</description>
			<pubDate>Thu, 15 Aug 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>CRIB: checkpoint/restore in BPF</title>
			<link>https://lwn.net/Articles/984313/</link>
			<guid>https://lwn.net/Articles/984313/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The desire for the ability to checkpoint a process — to record its state in
a form that can be restarted at a future time — on Linux is almost as old as
Linux itself.  See, for example, &lt;a
href="https://lwn.net/1998/0528/a/checkpoint.html"&gt;this announcement&lt;/a&gt; of a checkpoint
project that appeared in LWN in 1998.  While working solutions exist, they
can be somewhat fragile and difficult to use; it is not surprising that
some people are interested in finding a better alternative.  A current
effort goes by the name CRIB,
for Checkpoint/Restore in (naturally) BPF.  It is far from clear that CRIB
will replace the existing solutions, but it is an interesting look at a
different way of solving the problem.
</description>
			<pubDate>Thu, 15 Aug 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Tracing the source of filesystem errors</title>
			<link>https://lwn.net/Articles/984556/</link>
			<guid>https://lwn.net/Articles/984556/</guid>
			<dc:creator>jake</dc:creator>
			<description>There are lots of places in the kernel where an &lt;tt&gt;EINVAL&lt;/tt&gt; can be
returned to user space, but it is often unclear what the actual underlying
problem is because the &lt;a
href="https://man7.org/linux/man-pages/man3/errno.3.html"&gt;&lt;tt&gt;errno&lt;/tt&gt;&lt;/a&gt;
error codes are too generic.  That is the problem that Miklos Szeredi
wanted to discuss in a filesystem session that he led remotely at the 2024 &lt;a
href="https://events.linuxfoundation.org/lsfmmbpf/"&gt;Linux Storage,
Filesystem, Memory Management, and BPF Summit&lt;/a&gt;.  He would like to help
those who are trying to debug problems trace where in the kernel a
particular error code is being generated.
</description>
			<pubDate>Thu, 15 Aug 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Standards for use of unsafe Rust in the kernel</title>
			<link>https://lwn.net/Articles/982868/</link>
			<guid>https://lwn.net/Articles/982868/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
Rust is intended to let programmers write safer code.
But compilers are
not omniscient, and writing Rust code that interfaces with hardware (or that
works with memory outside of Rust's lifetime paradigm) requires, at
some point, the programmer's assurance that some operations are permissible. Benno Lossin
&lt;a href="https://lwn.net/ml/all/20240717221133.459589-1-benno.lossin@proton.me/"&gt;
suggested adding
some more documentation&lt;/a&gt; to
&lt;a href="https://rust-for-linux.com/"&gt;
the Rust-for-Linux project&lt;/a&gt; clarifying the
standards for commenting uses of &lt;tt&gt;unsafe&lt;/tt&gt; in kernel code. There's general
agreement that such standards are necessary, but less agreement on exactly when
it is appropriate to use &lt;tt&gt;unsafe&lt;/tt&gt;.
&lt;/p&gt;
</description>
			<pubDate>Thu, 22 Aug 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Endless OS aimed at educational and offline environments</title>
			<link>https://lwn.net/Articles/984086/</link>
			<guid>https://lwn.net/Articles/984086/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
&lt;a href="https://www.endlessos.org/os"&gt;
Endless OS&lt;/a&gt; is a Linux distribution with a focus on improving access to
educational tools by providing a simple-to-manage, full-featured desktop for
educators and students — one that works offline, with minimal maintenance. The
distribution also aims to be suitable for older devices, in order to promote access to
computers by ensuring those systems remain usable.
In pursuit of those goals, it makes some unusual technical
choices. But what makes the distribution really shine is its curated collection
of software and educational resources.
&lt;/p&gt;
</description>
			<pubDate>Thu, 22 Aug 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Zettlr: note-taking and publishing with Markdown</title>
			<link>https://lwn.net/Articles/984502/</link>
			<guid>https://lwn.net/Articles/984502/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;&lt;a href="https://daringfireball.net/projects/markdown/"&gt;Markdown&lt;/a&gt; editors are a dime a dozen. Cheaper than that, actually,
since many of them are open&amp;#8209;source software. Despite the sheer number of
options, finding an editor that has all of the features that one might want can
be tricky. For some users, &lt;a href="https://www.zettlr.com/"&gt;Zettlr&lt;/a&gt;
might be the right tool. It is a &lt;a
href="https://en.wikipedia.org/wiki/WYSIWYM"&gt;What You See is What You
Mean&lt;/a&gt; (WYSIWYM) editor that stores its work locally as plain Markdown
files. The project is billed as a "&lt;q&gt;one-stop publication
workbench&lt;/q&gt;", and is suitable for writing anything from blog posts to
academic papers, maintaining a personal journal, or keeping notes in a &lt;a
href="https://en.wikipedia.org/wiki/Zettelkasten"&gt;Zettlekasten&lt;/a&gt;. It
is simple to get started with, but rewards deeper exploration and
customization.&lt;/p&gt;
</description>
			<pubDate>Thu, 22 Aug 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Changes coming in PostgreSQL 17</title>
			<link>https://lwn.net/Articles/984599/</link>
			<guid>https://lwn.net/Articles/984599/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
The
&lt;a href="https://www.postgresql.org/"&gt;
PostgreSQL&lt;/a&gt; project has
&lt;a href="https://www.postgresql.org/about/news/postgresql-164-158-1413-1316-1220-and-17-beta-3-released-2910/"&gt;
released&lt;/a&gt; beta
versions of PostgreSQL 17 containing several interesting security and usability
improvements, alongside the usual performance improvements and bug fixes. If the
release proceeds according to the usual timeline, the full release of version 17
is expected in September or October.
The most important changes are in what PostgreSQL does when a database
supervisor has their credentials revoked, and added
support for incremental database backups.
&lt;/p&gt;
</description>
			<pubDate>Thu, 22 Aug 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Distinguishing Debian testing from unstable</title>
			<link>https://lwn.net/Articles/984635/</link>
			<guid>https://lwn.net/Articles/984635/</guid>
			<dc:creator>corbet</dc:creator>
			<description>Sometimes, the smallest changes create the longest discussions.  As a case
in point, a proposal to make a one-line change in an informational text
file on systems running the Debian unstable distribution has blown up into
an interminable and sometimes unfriendly debate.  At its core, though, this
discussion comes down to a seemingly simple question: should a program be
able to determine whether it is running on a Debian testing or unstable
system?
</description>
			<pubDate>Thu, 22 Aug 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for August 15, 2024</title>
			<link>https://lwn.net/Articles/984770/</link>
			<guid>https://lwn.net/Articles/984770/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The LWN.net Weekly Edition for August 15, 2024 is available.
</description>
			<pubDate>Thu, 22 Aug 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Modernizing openSUSE installation with Agama</title>
			<link>https://lwn.net/Articles/974969/</link>
			<guid>https://lwn.net/Articles/974969/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;Linux installers receive a disproportionate amount of attention
compared to the amount of time that most users spend with them. Ideally,
a user spends only a few minutes using the installer, versus years using
the distribution after it is installed. Yet, the installer sets the
first impression, and if it fails to do its job, little else matters.
Installers also have to continually evolve to keep pace with new
hardware, changes in distribution packaging (such as image-based Linux
distributions), and so forth. Along those lines, the SUSE team that maintains the
venerable &lt;a href="https://yast.opensuse.org/"&gt;YaST&lt;/a&gt; installer has
decided it's time to start (almost) fresh with a new Linux installer
project, called &lt;a href="https://github.com/openSUSE/agama"&gt;Agama&lt;/a&gt;,
for new projects. YaST is not going away as an administration tool,
but it is likely to be relieved of installer duties at some point.&lt;/p&gt;
</description>
			<pubDate>Thu, 29 Aug 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Memory-management: tiered memory, huge pages, and EROFS</title>
			<link>https://lwn.net/Articles/984839/</link>
			<guid>https://lwn.net/Articles/984839/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The kernel's memory-management developers have been busy in recent times;
it can be hard to keep up with all that has been happening in this core
area.  In an attempt to catch up, here is a look at recent work
affecting tiered-memory systems, underutilized huge pages, and duplicated
file data in the Enhanced Read-Only Filesystem (EROFS).
</description>
			<pubDate>Thu, 29 Aug 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Python subinterpreters and free-threading</title>
			<link>https://lwn.net/Articles/985041/</link>
			<guid>https://lwn.net/Articles/985041/</guid>
			<dc:creator>jake</dc:creator>
			<description>At
&lt;a
href="https://us.pycon.org/2024/"&gt;PyCon&amp;nbsp;2024&lt;/a&gt; in Pittsburgh,
Pennsylvania, Anthony Shaw looked at the various kinds of parallelism
available to Python programs.  There have been two major developments on
the parallel-execution front over the last few years, with the effort to
provide &lt;a href="https://lwn.net/Articles/820424/"&gt;subinterpreters&lt;/a&gt;, each with its own
global interpreter lock (GIL), along with the work to &lt;a
href="https://lwn.net/Articles/940780/"&gt;remove the GIL entirely&lt;/a&gt;.  In the talk, he
explored the two approaches to try to give attendees a sense of how to make
the right choice for their applications.
</description>
			<pubDate>Thu, 29 Aug 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Custom string formatters in Python</title>
			<link>https://lwn.net/Articles/985346/</link>
			<guid>https://lwn.net/Articles/985346/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
Python has had
&lt;a href="https://lwn.net/Articles/656898/"&gt;formatted string literals&lt;/a&gt;
(&lt;span style="white-space:nowrap"&gt;f-strings&lt;/span&gt;), a syntactic shorthand for building
strings, since 2015. Recently, Jim Baker, Guido van Rossum, and Paul Everitt have
proposed
&lt;a href="https://peps.python.org/pep-0750/"&gt;
PEP 750&lt;/a&gt; ("Tag Strings For Writing Domain-Specific Languages") which would
generalize and expand that mechanism to provide Python library writers with additional
flexibility. Reactions to the proposed change were somewhat positive, although
there was a good deal of discussion of (and opposition to)
the PEP's inclusion of lazy evaluation of template parameters.
&lt;/p&gt;
</description>
			<pubDate>Thu, 29 Aug 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for August 22, 2024</title>
			<link>https://lwn.net/Articles/985783/</link>
			<guid>https://lwn.net/Articles/985783/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The LWN.net Weekly Edition for August 22, 2024 is available.
</description>
			<pubDate>Thu, 29 Aug 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Per-call-site slab caches for heap-spraying protection</title>
			<link>https://lwn.net/Articles/986174/</link>
			<guid>https://lwn.net/Articles/986174/</guid>
			<dc:creator>corbet</dc:creator>
			<description>One tactic often used by attackers set on compromising a system is &lt;a
href="https://en.wikipedia.org/wiki/Heap_spraying"&gt;heap spraying&lt;/a&gt;; in
short, the attacker fills as much of the heap as possible with crafted data
in the hope of getting the target system to use that data in a bad way.  If
heap spraying can be blocked, attackers will lose an important tool.  The
kernel has some heap-spraying defenses now, including the &lt;a
href="https://lwn.net/Articles/965837/"&gt;dedicated bucket allocator&lt;/a&gt; merged for the
upcoming 6.11 release, but its author, Kees Cook, thinks that more can be
done.
</description>
			<pubDate>Thu, 29 Aug 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>NIST finalizes post-quantum encryption standards</title>
			<link>https://lwn.net/Articles/973231/</link>
			<guid>https://lwn.net/Articles/973231/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
On August 13, the US National Institute of Standards and Technology (NIST)
&lt;a href="https://csrc.nist.gov/news/2024/postquantum-cryptography-fips-approved"&gt;
published&lt;/a&gt; the final form of its new post-quantum cryptographic standards. One
key-exchange mechanism and two digital-signature schemes are now officially
sanctioned by the institute. Adopting the new standards should be fairly
painless for most developers, but the overhead added by the schemes could pose
challenges for some applications.
&lt;/p&gt;
</description>
			<pubDate>Thu, 05 Sep 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Debian discusses principles for package maintenance</title>
			<link>https://lwn.net/Articles/986480/</link>
			<guid>https://lwn.net/Articles/986480/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;Achieving consensus among Debian Developers on technical topics and
procedures can be, to put it mildly, challenging. Nevertheless, that
is exactly what Otto Kekäläinen has tried to do with a &lt;a
href="https://salsa.debian.org/dep-team/deps/-/raw/798bfa5a1e1609afd4e48ee20aff80a82bcd4a2f/web/deps/dep18.mdwn"&gt;proposal&lt;/a&gt; that
would set up "&lt;q&gt;principles all Debian packages should follow to be
open for collaboration in package maintenance&lt;/q&gt;". In the near term,
it seems unlikely that the proposal will be accepted, but the
discussion may be effective at improving collaboration nonetheless.&lt;/p&gt;
</description>
			<pubDate>Thu, 05 Sep 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for August 29, 2024</title>
			<link>https://lwn.net/Articles/986853/</link>
			<guid>https://lwn.net/Articles/986853/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The LWN.net Weekly Edition for August 29, 2024 is available.
</description>
			<pubDate>Thu, 05 Sep 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>A new version of modversions</title>
			<link>https://lwn.net/Articles/986892/</link>
			<guid>https://lwn.net/Articles/986892/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The &lt;tt&gt;genksyms&lt;/tt&gt; tool has long been buried deeply within the kernel's
build system; it is one of the two C-code parsers shipped with the kernel
(the other being &lt;a
href="https://elixir.bootlin.com/linux/v6.11-rc4/source/scripts/kernel-doc"&gt;the
horrifying &lt;tt&gt;kernel-doc&lt;/tt&gt; script&lt;/a&gt;).  It is a key part of how the
kernel's module-loading infrastructure works.  While &lt;tt&gt;genksyms&lt;/tt&gt; has
quietly done its job for decades, that period may soon be coming to an end.
It would seem that &lt;tt&gt;genksyms&lt;/tt&gt; is not up to the task of handling Rust
code, so Sami Tolvanen is &lt;a
href="https://lwn.net/ml/all/20240815173903.4172139-21-samitolvanen@google.com/"&gt;proposing
a new tool&lt;/a&gt; to handle this task going forward.
</description>
			<pubDate>Thu, 05 Sep 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>MemHive: sharing immutable data between Python subinterpreters</title>
			<link>https://lwn.net/Articles/987238/</link>
			<guid>https://lwn.net/Articles/987238/</guid>
			<dc:creator>jake</dc:creator>
			<description>Immutable data makes concurrent access easier, since it
eliminates the data-race conditions that can plague multithreaded programs. At
&lt;a
href="https://us.pycon.org/2024/"&gt;PyCon&amp;nbsp;2024&lt;/a&gt;, Yury Selivanov
introduced an early-stage project called &lt;a
href="https://github.com/edgedb/memhive"&gt;MemHive&lt;/a&gt;, which uses Python
&lt;a href="https://lwn.net/Articles/820424/"&gt;subinterpreters&lt;/a&gt; and immutable data to
overcome the problems of thread serialization that are caused by the
language's Global Interpreter Lock (GIL).  Recent &lt;a
href="https://lwn.net/Articles/985041/"&gt;developments in the Python world&lt;/a&gt; have opened
up different strategies for avoiding the longstanding problems with the
GIL.
</description>
			<pubDate>Thu, 05 Sep 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for September 5, 2024</title>
			<link>https://lwn.net/Articles/987605/</link>
			<guid>https://lwn.net/Articles/987605/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The LWN.net Weekly Edition for September 5, 2024 is available.
</description>
			<pubDate>Thu, 12 Sep 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Whither the Apple AGX graphics driver?</title>
			<link>https://lwn.net/Articles/988438/</link>
			<guid>https://lwn.net/Articles/988438/</guid>
			<dc:creator>corbet</dc:creator>
			<description>Much of the early Rust code for the kernel has taken the form of
reimplementations of existing drivers as a proof of concept.  One project,
though, is entirely new: the driver for Apple GPUs written by Asahi Lina.
This driver has shipped with &lt;a href="https://asahilinux.org/"&gt;Asahi
Linux&lt;/a&gt; for some time and, by many accounts, is stable, usable, and a
shining example of how Rust can be used in a complex kernel subsystem.
That driver remains outside of the mainline kernel, though, and merging
currently looks like a distant prospect.  The reasons for that state of
affairs highlight some of the difficulties inherent in integrating a new
language (and its associated development style) into the Linux kernel.
</description>
			<pubDate>Thu, 12 Sep 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>A mess in the Python community</title>
			<link>https://lwn.net/Articles/988894/</link>
			<guid>https://lwn.net/Articles/988894/</guid>
			<dc:creator>jake</dc:creator>
			<description>The Python community has been roiled, to a certain extent, by an &lt;a
href="https://discuss.python.org/t/three-month-suspension-for-a-core-developer/60250"&gt;action
taken by
the steering council&lt;/a&gt; (SC): the three-month suspension
of a unnamed—weirdly—Python core developer.  Tim Peters is the developer
in question, as he has &lt;a
href="https://www.theregister.com/2024/08/09/core_python_developer_suspended_coc/"&gt;acknowledged&lt;/a&gt;,
though it could easily be deduced from the SC message. Peters has been
involved in the
project from its early days and, among many other things, is the author of
&lt;a href="https://peps.python.org/pep-0020/"&gt;PEP&amp;nbsp;20&lt;/a&gt; ("The Zen of
Python").  The suspension was due to violations of the project's &lt;a
href="https://policies.python.org/python.org/code-of-conduct/"&gt;code of
conduct&lt;/a&gt; that stem from the discussion around a somewhat controversial &lt;a
href="https://discuss.python.org/t/for-your-consideration-proposed-bylaws-changes-to-improve-our-membership-experience/55696"&gt;set
of proposed changes to the bylaws&lt;/a&gt; for the &lt;a
href="https://www.python.org/psf-landing/"&gt;Python Software Foundation&lt;/a&gt;
(PSF) back in mid-June.
</description>
			<pubDate>Thu, 19 Sep 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for September 12, 2024</title>
			<link>https://lwn.net/Articles/988984/</link>
			<guid>https://lwn.net/Articles/988984/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The LWN.net Weekly Edition for September 12, 2024 is available.
</description>
			<pubDate>Thu, 19 Sep 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>The trouble with iowait</title>
			<link>https://lwn.net/Articles/989272/</link>
			<guid>https://lwn.net/Articles/989272/</guid>
			<dc:creator>corbet</dc:creator>
			<description>CPU scheduling is a challenging job; since it inherently requires making
guesses about what the demands on the system will be in the future, it
remains reliant on heuristics, despite ongoing efforts to remove them.
Some of those heuristics take special note of tasks that are (or appear to
be) waiting for fast I/O operations.  There is some unhappiness, though,
with how this factor is used, leading to a couple of patches taking rather
different approaches to improve the situation.
</description>
			<pubDate>Thu, 19 Sep 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>The RCU API, 2024 edition</title>
			<link>https://lwn.net/Articles/988638/</link>
			<guid>https://lwn.net/Articles/988638/</guid>
			<dc:creator>corbet</dc:creator>
			<description>Read-copy-update (RCU) is a synchronization mechanism that was added to the
Linux kernel in October 2002.  RCU is most frequently used as a &lt;a
href="https://linuxfoundation.org/webinars/unraveling-rcu-usage-mysteries/"&gt;replacement
for reader-writer locking&lt;/a&gt;, but is also used in &lt;a
href="https://linuxfoundation.org/webinars/unraveling-rcu-usage-mysteries-additional-use-cases/"&gt;a
number of other ways&lt;/a&gt;.  This article covers recent changes to the RCU
API; it was contributed by Paul McKenney, Boqun Feng, Frederic Weisbecker,
Joel Fernandes, Neeraj Upadhyay, and Uladzislau Rezki.
</description>
			<pubDate>Thu, 26 Sep 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Debating ifupdown replacements for Debian trixie</title>
			<link>https://lwn.net/Articles/989055/</link>
			<guid>https://lwn.net/Articles/989055/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;Debian does not have an official way to configure
networking. Instead, it has &lt;a
href="https://wiki.debian.org/NetworkConfiguration"&gt;four&lt;/a&gt;
recommended ways to configure networking, one of which is the
venerable &lt;a
href="https://salsa.debian.org/debian/ifupdown"&gt;ifupdown&lt;/a&gt;, which
has been part of Debian since the turn of the century and is showing its
age. A conversation about its maintainability and possible replacement with &lt;a
href="https://github.com/ifupdown-ng/ifupdown-ng"&gt;ifupdown&amp;#8209;ng&lt;/a&gt; has
led to discussions about the default network-management tools for
Debian "&lt;a href="https://www.debian.org/releases/trixie/"&gt;trixie&lt;/a&gt;"
(Debian 13, which is expected in 2025) and beyond. No route to consensus
has been found, yet.&lt;/p&gt;
</description>
			<pubDate>Thu, 26 Sep 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Some 6.11 development statistics</title>
			<link>https://lwn.net/Articles/989528/</link>
			<guid>https://lwn.net/Articles/989528/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The 6.11 kernel was &lt;a
href="https://lwn.net/ml/all/CAHk-=whVpSHw9+4ov=oLevfv8sPYbh59T_9VKif-6Vqkr41jQA@mail.gmail.com/"&gt;released&lt;/a&gt;
on September&amp;nbsp;15 after a typical nine-week development cycle.  This
release integrates 13,890 non-merge changesets, so it was a moderately busy
cycle, slightly more so that 6.10 was.  With a new release comes a new round
of development statistics; read on for the details.
</description>
			<pubDate>Thu, 26 Sep 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Vanilla OS 2: an immutable distribution to run all software</title>
			<link>https://lwn.net/Articles/989629/</link>
			<guid>https://lwn.net/Articles/989629/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;&lt;a href="https://vanillaos.org"&gt;Vanilla OS&lt;/a&gt;, an immutable desktop
Linux distribution designed for developers and advanced users, has
recently published its &lt;a
href="https://vanillaos.org/blog/article/2024-07-28/vanilla-os-2-orchid---stable-release"&gt;2.0
"Orchid" release&lt;/a&gt;. Previously based on Ubuntu, Vanilla OS has now
shifted to Debian unstable ("sid"). The release has made it easier to
install software from other distributions' package repositories, and it
is now theoretically possible to install and run Android applications as well.&lt;/p&gt;
</description>
			<pubDate>Thu, 26 Sep 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Fedora evicts WolfSSL</title>
			<link>https://lwn.net/Articles/989687/</link>
			<guid>https://lwn.net/Articles/989687/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;The &lt;a href="https://docs.fedoraproject.org/en-US/fesco/"&gt;Fedora
Engineering Steering Committee&lt;/a&gt; (FESCo) has voted to
immediately remove the &lt;a href="https://www.wolfssl.com"&gt;WolfSSL&lt;/a&gt; package from all of Fedora's
repositories due to its maintainer failing to gain approval to package
a new cryptography library for Fedora. Its brief travels through
Fedora's package system highlights gaps in documentation, as well as
in the package&amp;#8209;review process. The good news is that this may stir
Fedora to improve its documentation and revive a formal security
team.&lt;/p&gt;
</description>
			<pubDate>Thu, 26 Sep 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for September 19, 2024</title>
			<link>https://lwn.net/Articles/989982/</link>
			<guid>https://lwn.net/Articles/989982/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The LWN.net Weekly Edition for September 19, 2024 is available.
</description>
			<pubDate>Thu, 26 Sep 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>RPM 4.20 is coming</title>
			<link>https://lwn.net/Articles/988927/</link>
			<guid>https://lwn.net/Articles/988927/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;The &lt;a href="https://rpm.org/"&gt;RPM Package Manager&lt;/a&gt; (RPM) project is
nearing the release of RPM&amp;nbsp;4.20, the last major planned update for the RPM 4.x
series. It has few user-facing changes, but
several additions and enhancements for developers&amp;mdash;as well as
some small incompatibilities that will likely require RPM packagers to
revise their &lt;a
href="https://rpm-packaging-guide.github.io/#what-is-a-spec-file"&gt;spec
files&lt;/a&gt;. 4.20 will be rolling out to many users soon, in
Fedora&amp;nbsp;41, which is scheduled for October. RPM&amp;nbsp;6.0 is
already in the works, with a new package format and opening the door
to enabling C++ use in the RPM codebase.&lt;/p&gt;
</description>
			<pubDate>Thu, 03 Oct 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Best practices for error handling in kernel Rust</title>
			<link>https://lwn.net/Articles/990489/</link>
			<guid>https://lwn.net/Articles/990489/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
Dirk Behme led a session discussing the use of Rust's question-mark operator in
the kernel at Kangrejos 2024. He was particularly concerned with the concept of
"silent" errors that don't print any messages to the console.
Other attendees were less convinced that this was a problem, but his presentation
sparked a lot of discussion about whether the Rust-for-Linux project could
improve error handling in kernel Rust code.
&lt;/p&gt;
</description>
			<pubDate>Thu, 03 Oct 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Linus and Dirk on succession, Rust, and more</title>
			<link>https://lwn.net/Articles/990534/</link>
			<guid>https://lwn.net/Articles/990534/</guid>
			<dc:creator>jake</dc:creator>
			<description>The "Linus and Dirk show" has been a fixture at Open Source Summit for as
long as the conference has existed; it started back when the conference was
called LinuxCon.  Since Linus Torvalds famously does not like to give
talks, as he said during this year's edition at &lt;a href="https://events.linuxfoundation.org/open-source-summit-europe/"&gt;Open Source Summit Europe&lt;/a&gt;
(OSSEU) in Vienna, Austria, he and Dirk Hohndel have been sitting down for an
informal chat on a wide range of topics as a keynote session.  That way,
Torvalds does not need to prepare, but also does not know what topics
will be brought up, which makes it "so much more fun for one of us", Hohndel
said with a grin.   The topics this time ranged from the just-released&amp;nbsp;6.11
kernel and the upcoming Linux&amp;nbsp;6.12, through Rust for the kernel, to the recurring topic of succession and
the graying of Linux maintainers.
</description>
			<pubDate>Thu, 03 Oct 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>KDE sets its goals through 2026</title>
			<link>https://lwn.net/Articles/990604/</link>
			<guid>https://lwn.net/Articles/990604/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;Almost a decade ago &lt;a href="https://ev.kde.org/"&gt;KDE&amp;nbsp;e.V.&lt;/a&gt;,
the non-profit organization that supports &lt;a
href="http://kde.org/"&gt;KDE&lt;/a&gt;, started a &lt;a href="https://community.kde.org/Goals/Goals_Process"&gt;process&lt;/a&gt; for
selecting &lt;a href="https://kde.org/goals/"&gt;goals&lt;/a&gt; to help the community unite behind a common vision for where the
project should go in the near future. KDE
recently wrapped up its 2022-2024 &lt;a
href="https://community.kde.org/Goals"&gt;cycle&lt;/a&gt; and announced the goals for 2024-2026 at &lt;a
href="https://akademy.kde.org/2024/"&gt;Akademy&lt;/a&gt; on September&amp;nbsp;7, in Würzburg,
Germany. This time around, KDE will be looking to streamline its
application-development experience, improve support for input devices,
and bring in new contributors.&lt;/p&gt;
</description>
			<pubDate>Thu, 03 Oct 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>What the Nova GPU driver needs</title>
			<link>https://lwn.net/Articles/990736/</link>
			<guid>https://lwn.net/Articles/990736/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
In March, Danilo Krummrich &lt;a href="https://lwn.net/Articles/966129"&gt;announced&lt;/a&gt; the new
Nova GPU driver — a successor to Nouveau for controlling NVIDIA GPUs.
At Kangrejos 2024, Krummrich gave a
presentation about what it is, why it's needed, and where it's
going next. Hearing about the needs of the driver provoked extended discussion
on related topics, including what level of safety is reasonable to expect from
drivers, given that they must interact with the hardware.
&lt;/p&gt;
</description>
			<pubDate>Thu, 03 Oct 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>The 6.12 merge window begins</title>
			<link>https://lwn.net/Articles/990750/</link>
			<guid>https://lwn.net/Articles/990750/</guid>
			<dc:creator>corbet</dc:creator>
			<description>As of this writing, 6,778 non-merge changesets have been pulled into the
mainline kernel for the 6.12 release — over half of the work that had been
staged in linux-next prior to the opening of the merge window.  There has
been a lot of refactoring and cleanup work this time around, but also some
significant changes.  Read on for a summary of the first half of the 6.12
merge window.
</description>
			<pubDate>Thu, 03 Oct 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for September 26, 2024</title>
			<link>https://lwn.net/Articles/990791/</link>
			<guid>https://lwn.net/Articles/990791/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The LWN.net Weekly Edition for September 26, 2024 is available.
</description>
			<pubDate>Thu, 03 Oct 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Tools for kernel developers</title>
			<link>https://lwn.net/Articles/991033/</link>
			<guid>https://lwn.net/Articles/991033/</guid>
			<dc:creator>corbet</dc:creator>
			<description>Konstantin Ryabitsev started a session on development tooling at the 2024
Maintainers Summit by saying that he does not want to be a "wrecking ball".
If a given workflow is working for people, he does not want to try to force
any sort of change.  That said, he has ideas for how he can continue his
work on providing better tooling for the development community.
</description>
			<pubDate>Thu, 03 Oct 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Committing to Rust in the kernel</title>
			<link>https://lwn.net/Articles/991062/</link>
			<guid>https://lwn.net/Articles/991062/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The project to enable the writing of kernel code in Rust has been underway
for several years, and each kernel release includes more Rust code.  Even
so, some developers have expressed frustration at the time it takes to get
new functionality merged, and an air of uncertainty still hangs over
the project.  At the 2024 Maintainers Summit, Miguel Ojeda led a discussion
on the status of Rust in the kernel and whether the time had come to stop
considering it an experimental project.  There were not answers to all of the
questions, but it seems clear that Rust in the kernel will continue
steaming ahead.
</description>
			<pubDate>Thu, 03 Oct 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Getting PCI driver abstractions upstream</title>
			<link>https://lwn.net/Articles/990918/</link>
			<guid>https://lwn.net/Articles/990918/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
Danilo Krummrich gave a talk at Kangrejos 2024 focusing on the question of how
the Rust-for-Linux project could improve at getting device and driver
abstractions upstream. As a case study, he used some of his recent work that
attempts to make it possible to write a PCI driver entirely in Rust. There
wasn't time to go into as much detail as he would have liked, but he did
demonstrate that it is possible to interface with the kernel's module loader in
a way that is much harder to
screw up than the current standard approach in C.
&lt;/p&gt;
</description>
			<pubDate>Thu, 10 Oct 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>An update on gccrs development</title>
			<link>https://lwn.net/Articles/991199/</link>
			<guid>https://lwn.net/Articles/991199/</guid>
			<dc:creator>corbet</dc:creator>
			<description>One concern that has often been expressed about the Rust language is that
there is only one compiler for it.  That makes it hard to say what the
standard version of the language is and restricts the architectures that
can be targeted by Rust code to those that the available compiler supports.
Adding a Rust frontend to GCC would do much to address those concerns; at
the &lt;a href="https://gcc.gnu.org/wiki/cauldron2024"&gt;2024 GNU Tools
Cauldron&lt;/a&gt;, Pierre-Emmanuel Patry gave an update on the state of that
work and what its objectives are.
</description>
			<pubDate>Thu, 10 Oct 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Sched_ext at LPC 2024</title>
			<link>https://lwn.net/Articles/991205/</link>
			<guid>https://lwn.net/Articles/991205/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The &lt;a href="https://lwn.net/Articles/922405/"&gt;extensible scheduler class (sched_ext)&lt;/a&gt;
enables the implementation of CPU schedulers as a set of BPF programs
loaded from user space; it first hit the mailing lists in late 2022.
Sched_ext has engendered its share of controversy since, but is currently
slated to be part of the 6.12 kernel release.  At the 2024 &lt;a
href="https://lpc.events/"&gt;Linux Plumbers Conference&lt;/a&gt;, the growing
sched_ext community held one of its first public gatherings; sched_ext
would appear to have launched a new burst of creativity in scheduler
design.
</description>
			<pubDate>Thu, 10 Oct 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>The rest of the 6.12 merge window</title>
			<link>https://lwn.net/Articles/991301/</link>
			<guid>https://lwn.net/Articles/991301/</guid>
			<dc:creator>corbet</dc:creator>
			<description>Linus Torvalds &lt;a
href="https://lwn.net/ml/all/CAHk-=wiwVOCZsC6a4dLdb1UjL2fS_CnLNjrPL0XGFbDd9C26Cg@mail.gmail.com/"&gt;released
6.12-rc1&lt;/a&gt; and closed the 6.12 merge window on September&amp;nbsp;29; at that
point, 11,260 non-merge change sets had been pulled into the mainline for
the 6.12 release.  That is the lowest number of merge-window changes since
5.17-rc1 in January 2022, which brought in 11,068 changesets.  Nonetheless,
6.12 brings a number of interesting changes, many of which were included in
the roughly 4,500 changes merged since &lt;a href="https://lwn.net/Articles/990750/"&gt;the
summary of the first half of the 6.12 merge window&lt;/a&gt; was written.
</description>
			<pubDate>Thu, 10 Oct 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>BTF, Rust, and the kernel toolchain</title>
			<link>https://lwn.net/Articles/991719/</link>
			<guid>https://lwn.net/Articles/991719/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
&lt;a href="https://www.kernel.org/doc/html/latest/bpf/btf.html"&gt;
BPF Type Format&lt;/a&gt; (BTF),
BPF's debugging information format, has undergone rapid evolution to match
the evolving needs of BPF programs. José Marchesi spoke at Kangrejos about some
of that work — and how it could impact Rust, specifically. He discussed debug
information, kernel-specific relocations, and the planned changes to kernel
stack unwinding. Each of these will require some amount of work to fully
support in Rust, but preliminary signs look promising.
&lt;/p&gt;
</description>
			<pubDate>Thu, 10 Oct 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Inkscape 1.4 coming soon</title>
			<link>https://lwn.net/Articles/991732/</link>
			<guid>https://lwn.net/Articles/991732/</guid>
			<dc:creator>jake</dc:creator>
			<description>The open-source vector-graphics editor, &lt;a
href="https://inkscape.org/"&gt;Inkscape&lt;/a&gt;, is expected to release &lt;a
href="https://wiki.inkscape.org/wiki/Release_notes/1.4"&gt;version&amp;nbsp;1.4&lt;/a&gt;
in October. The release represents an evolutionary step for the program, which
brings new features, user-interface improvements, new and improved
file-format support, and important changes to the code base. The changes in
this release should improve the user experience for both casual and
professional designers, and make Inkscape more compatible with proprietary
vector-graphics software, including Adobe Illustrator and Affinity
Designer.
</description>
			<pubDate>Thu, 10 Oct 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for October 3, 2024</title>
			<link>https://lwn.net/Articles/991771/</link>
			<guid>https://lwn.net/Articles/991771/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The LWN.net Weekly Edition for October 3, 2024 is available.
</description>
			<pubDate>Thu, 10 Oct 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>The WordPress mess</title>
			<link>https://lwn.net/Articles/991906/</link>
			<guid>https://lwn.net/Articles/991906/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;&lt;a href="https://wordpress.org/"&gt;WordPress&lt;/a&gt; is the &lt;a href="https://w3techs.com/technologies/history_overview/content_management"&gt;world's most
popular&lt;/a&gt; open&amp;#8209;source blogging and content&amp;#8209;management platform. In its
20&amp;#8209;plus years of existence, WordPress has been something of a poster
child for open source, similar to Linux and Firefox. It introduced the
concept of open source to millions of bloggers, small&amp;#8209;business owners,
and others who have deployed WordPress to support their web&amp;#8209;publishing
needs. Unfortunately, it is now in the spotlight due to an increasingly
ugly dispute between two companies, &lt;a
href="https://automattic.com/"&gt;Automattic&lt;/a&gt; and &lt;a
href="https://wpengine.com/"&gt;WP&amp;nbsp;Engine&lt;/a&gt;, that has spilled over into
the WordPress community.&lt;/p&gt;
</description>
			<pubDate>Thu, 10 Oct 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Smart pointers for the kernel</title>
			<link>https://lwn.net/Articles/992055/</link>
			<guid>https://lwn.net/Articles/992055/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
Rust has a plethora of smart-pointer types, including reference-counted
pointers, which have special support in the compiler to make them
easier to use. The Rust-for-Linux project would like to reap those same benefits
for its smart pointers, which need to be written by hand to conform to
the
&lt;a href="https://lwn.net/Articles/718628/"&gt;
Linux kernel
memory model&lt;/a&gt;. Xiangfei Ding
presented at Kangrejos about the work to enable custom
smart pointers to function the same as built-in smart pointers.
&lt;/p&gt;
</description>
			<pubDate>Thu, 17 Oct 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>ClassicPress: WordPress without the block editor</title>
			<link>https://lwn.net/Articles/992219/</link>
			<guid>https://lwn.net/Articles/992219/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;The &lt;a href="https://lwn.net/Articles/991906/"&gt;recent WordPress
controversy&lt;/a&gt; is not the first time there's been tension between the
&lt;a
href="https://wordpress.org/"&gt;WordPress&lt;/a&gt; community, the interests of &lt;a
href="https://automattic.com/"&gt;Automattic&lt;/a&gt; as a business, and Matt
Mullenweg's leadership as WordPress's benevolent dictator for
life (BDFL). In particular, Mullenweg's focus on pushing WordPress to use a new
"editing experience" called &lt;a
href="https://wordpress.org/gutenberg/"&gt;Gutenberg&lt;/a&gt; caused significant
friction&amp;mdash;and led to the &lt;a
href="https://www.classicpress.net/"&gt;ClassicPress&lt;/a&gt; fork. Users who
want to preserve the "classic" WordPress experience without straying
too far from the WordPress fold may want to look into ClassicPress.&lt;/p&gt;
</description>
			<pubDate>Thu, 17 Oct 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Coping with complex cameras</title>
			<link>https://lwn.net/Articles/992411/</link>
			<guid>https://lwn.net/Articles/992411/</guid>
			<dc:creator>corbet</dc:creator>
			<description>Cameras were never the simplest of devices for Linux to support; they have
a wide range of operating parameters and can generate high rates of data.
In recent years, though, they have become increasingly complex, stressing
the ability of the kernel's &lt;a
href="https://docs.kernel.org/userspace-api/media/index.html"&gt;media
subsystem&lt;/a&gt; to manage them.  At the 2024 &lt;a
href="https://lpc.events/"&gt;Linux Plumbers Conference&lt;/a&gt;, developers from
that subsystem and beyond gathered to discuss the state of affairs and how
complex camera devices should be supported in the future.
</description>
			<pubDate>Thu, 17 Oct 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Efficient Rust tracepoints</title>
			<link>https://lwn.net/Articles/992455/</link>
			<guid>https://lwn.net/Articles/992455/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
Alice Ryhl has been working to enable
&lt;a href="https://www.kernel.org/doc/html/latest/trace/tracepoints.html"&gt;
tracepoints&lt;/a&gt; — which are widely used
throughout the kernel — to be seamlessly placed in Rust code as well. She spoke
about her approach at Kangrejos. Her
&lt;a href="https://lwn.net/ml/all/20241001-tracepoint-v9-0-1ad3b7d78acb@google.com/"&gt;
patch set&lt;/a&gt;
enables efficient use of static
tracepoints, but supporting dynamic tracepoints will take some additional effort.
&lt;/p&gt;
</description>
			<pubDate>Thu, 17 Oct 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Improving bindgen for the kernel</title>
			<link>https://lwn.net/Articles/992693/</link>
			<guid>https://lwn.net/Articles/992693/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
&lt;a href="https://rust-lang.github.io/rust-bindgen/"&gt;
Bindgen&lt;/a&gt; is a widely used tool that automatically generates Rust bindings from C
headers. The
&lt;a href="https://rust-for-linux.com/"&gt;
Rust-for-Linux&lt;/a&gt; project uses it to create some of
the bindings between Rust code and the rest of the kernel. John Baublitz
presented at Kangrejos about the improvements that he has made to the tool in
order to make the generated bindings easier to use, including improved support
for macros, bitfields, and enums.
&lt;/p&gt;
</description>
			<pubDate>Thu, 17 Oct 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for October 10, 2024</title>
			<link>https://lwn.net/Articles/992718/</link>
			<guid>https://lwn.net/Articles/992718/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The LWN.net Weekly Edition for October 10, 2024 is available.
</description>
			<pubDate>Thu, 17 Oct 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>The Open Source Pledge: peer pressure to pay maintainers</title>
			<link>https://lwn.net/Articles/993073/</link>
			<guid>https://lwn.net/Articles/993073/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;In the early days of open source, it was a struggle to get companies
to accept the concept and trust its development model.
Now, companies have few qualms about using it, but do tend to &lt;a
href="https://www.goodtechthings.com/oss-sos/"&gt;take open source and
those who maintain it for granted&lt;/a&gt;. The struggle now is to find ways
to compensate producers of the software, sustain the open&amp;#8209;source
commons, and avoid burning out maintainers. The &lt;a
href="https://opensourcepledge.com/"&gt;Open Source Pledge&lt;/a&gt; project is
an effort to persuade companies to pay maintainers by making it a social
norm. On October&amp;nbsp;8, the project is launching a marketing campaign to raise
awareness and try to get a larger conversation started around paying
maintainers.&lt;/p&gt;
</description>
			<pubDate>Thu, 17 Oct 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Debian's "secret" sauce</title>
			<link>https://lwn.net/Articles/990177/</link>
			<guid>https://lwn.net/Articles/990177/</guid>
			<dc:creator>jake</dc:creator>
			<description>While Debian's "sauce" is not actually all that secret, it is not particularly
well-known either, Samuel Henrique said at the start of his &lt;a
href="https://debconf24.debconf.org/"&gt;DebConf24&lt;/a&gt; talk.  There is a lot
of software-engineering effort that has been put in place by the
distribution in order to create and maintain its releases, but "&lt;q&gt;loads of
people are not aware&lt;/q&gt;" of it.  That may be due to the fact that all of
that is
not really documented anywhere in a central location that he can just point
someone to.  Recognizing that is what led him to give the talk;
hopefully it will be a "&lt;q&gt;first step toward&lt;/q&gt;" helping solve the problem.
</description>
			<pubDate>Thu, 24 Oct 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Two pidfd tweaks: PIDFD_GET_INFO and PIDFD_SELF</title>
			<link>https://lwn.net/Articles/992991/</link>
			<guid>https://lwn.net/Articles/992991/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The pidfd mechanism, which uses file descriptors to refer to processes in
an unambiguous and race-free way, &lt;a href="https://lwn.net/Articles/773459/"&gt;was first
introduced&lt;/a&gt; in 2018.  Since then, the interface has &lt;a
href="https://lwn.net/Articles/794707/"&gt;gained a number of new features&lt;/a&gt;, but 
development has slowed over time as the interface has matured.  There are,
however, a couple of patches in circulation that are meant to make working
with pidfds simpler in some situations.
</description>
			<pubDate>Thu, 24 Oct 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Zapping pointers out of thin air</title>
			<link>https://lwn.net/Articles/993484/</link>
			<guid>https://lwn.net/Articles/993484/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
Paul McKenney gave a presentation at Kangrejos this year that wasn't (directly)
related to Rust. Instead, he spoke about the work he has been doing in concert
with many other contributors on improving the handling of subtle concurrency
problems in C++.
Although he cautioned that his talk was only an overview, and not a
substitute for reading the relevant papers, he hoped that the things the C++
community is working on would be of interest to the Rust developers present as
well, and potentially inform future work on the language. McKenney's talk was,
as is his style, full of subtle examples of weird multithreaded behavior.
Interested readers may wish to refer to
&lt;a href="https://kangrejos.com/2024/Lifetime-End%20Pointer%20Zap%20&amp;amp;%20How%20to%20Avoid%20OOTA%20Without%20Really%20Trying.pdf"&gt;
his slides&lt;/a&gt; in an attempt to follow along.
&lt;/p&gt;
</description>
			<pubDate>Thu, 24 Oct 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for October 17, 2024</title>
			<link>https://lwn.net/Articles/993610/</link>
			<guid>https://lwn.net/Articles/993610/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The LWN.net Weekly Edition for October 17, 2024 is available.
</description>
			<pubDate>Thu, 24 Oct 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Using LKMM atomics in Rust</title>
			<link>https://lwn.net/Articles/993785/</link>
			<guid>https://lwn.net/Articles/993785/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
Rust, like C, has its own memory model describing how concurrent access to the
same data by multiple threads can behave.
The Linux kernel, however, has its own
ideas. The
&lt;a href="https://lwn.net/Articles/718628/"&gt;
Linux kernel memory model&lt;/a&gt; (LKMM) is subtly different from both the
standard C memory model and Rust's model.
At Kangrejos, Boqun Feng gave a presentation about the
need to reconcile the memory models used by Rust and the kernel,
including a few potential avenues for doing so. While
no consensus was reached, it is an area of active discussion.
&lt;/p&gt;
</description>
			<pubDate>Thu, 24 Oct 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>WordPress retaliation impacts community</title>
			<link>https://lwn.net/Articles/993895/</link>
			<guid>https://lwn.net/Articles/993895/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;It is too early to say what the outcome will be in the &lt;a
href="https://lwn.net/Articles/991906/"&gt;ongoing fight&lt;/a&gt; between &lt;a
href="https://automattic.com/"&gt;Automattic&lt;/a&gt; and &lt;a
href="https://wpengine.com/"&gt;WP&amp;nbsp;Engine&lt;/a&gt;, but the &lt;a
href="https://wordpress.org"&gt;WordPress&lt;/a&gt; community at large is already the
loser. Automattic founder and CEO Matt Mullenweg has been using
his control of the project, and the WordPress.org infrastructure, to
punish WP&amp;nbsp;Engine and remove some dissenting contributors from discussion
channels. Most recently, Mullenweg has instituted a hostile fork of a
WP&amp;nbsp;Engine plugin and the forked plugin is replacing the original
via WordPress updates.&lt;/p&gt;
</description>
			<pubDate>Thu, 24 Oct 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Free-software foundations face fundraising problems</title>
			<link>https://lwn.net/Articles/993665/</link>
			<guid>https://lwn.net/Articles/993665/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;In July, at the GNOME &lt;a
href="https://lwn.net/Articles/983203/"&gt;annual general meeting&lt;/a&gt; (AGM),
held at &lt;a
href="https://foundation.gnome.org/2023/12/20/guadec-2024-in-denver-colorado/"&gt;GUADEC
2024&lt;/a&gt;,
the message from the GNOME Foundation board was that all was well,
financially speaking. Not &lt;em&gt;great&lt;/em&gt;, but the foundation was on a
break-even budget and expected to go into its next fiscal year with a
similar budget and headcount. On October&amp;nbsp;7, however, the board &lt;a
href="https://foundation.gnome.org/2024/10/07/update-from-the-board-2024-10/"&gt;announced&lt;/a&gt;
that it had had to make some cuts, including reducing its staff by
two people. This is not, however, strictly a GNOME problem: similar
organizations, such as the Python Software Foundation (PSF), KDE&amp;nbsp;e.V., 
and the Free Software Foundation Europe (FSFE) are seeing declines in
fundraising while also being affected by inflation.&lt;/p&gt;
</description>
			<pubDate>Thu, 31 Oct 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Toward safe transmutation in Rust</title>
			<link>https://lwn.net/Articles/994334/</link>
			<guid>https://lwn.net/Articles/994334/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
Currently in Rust, there is no efficient and safe way to turn an array of bytes
into a structure that corresponds to the array. Changing that was the topic of
Jack Wrenn's talk this year at
&lt;a href="https://rustconf.com"&gt;
RustConf&lt;/a&gt;:
&lt;a href="https://jack.wrenn.fyi/blog/safety-goggles-for-alchemists/"&gt;
"Safety Goggles for Alchemists"&lt;/a&gt;. The goal is to be able to "transmute" —
Rust's name for this kind of conversion — values into arbitrary user-defined
types in a safer way. Wrenn justified the approach that the project has taken to
accomplish this, and spoke about the future work required to stabilize it.
&lt;/p&gt;
</description>
			<pubDate>Thu, 31 Oct 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for October 24, 2024</title>
			<link>https://lwn.net/Articles/994575/</link>
			<guid>https://lwn.net/Articles/994575/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The LWN.net Weekly Edition for October 24, 2024 is available.
</description>
			<pubDate>Thu, 31 Oct 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>A report from the 2024 Image-Based Linux Summit</title>
			<link>https://lwn.net/Articles/994704/</link>
			<guid>https://lwn.net/Articles/994704/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
The Image-Based Linux Summit has by now established itself as a yearly event.
Following on from &lt;a href="https://lwn.net/Articles/946526/"&gt;last year's edition&lt;/a&gt;,
the third edition was held in Berlin on September&amp;nbsp;24, the
day before
&lt;a href="https://all-systems-go.io"&gt;
All Systems Go!&amp;nbsp;2024&lt;/a&gt; (ASG). The purpose of this event is to gather
stakeholders from various engineering groups and hold friendly but lively
discussions around the topic of image-based Linux — that is, Linux distributions
based around immutable images, instead of mutable root filesystems.
&lt;/p&gt;
</description>
			<pubDate>Thu, 31 Oct 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>The performance of the Rust compiler</title>
			<link>https://lwn.net/Articles/995125/</link>
			<guid>https://lwn.net/Articles/995125/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
Sparrow Li presented virtually at
&lt;a href="https://rustconf.com"&gt;
RustConf&lt;/a&gt;&amp;nbsp;2024 about the current state of and
future plans for the Rust compiler's performance. The compiler is relatively slow to compile
large programs, although it has been getting better over time. The next big
performance improvement to come will be parallelizing the compiler's parsing,
type-checking, and related operations, but even after that, the project has
several avenues left to explore.
&lt;/p&gt;
</description>
			<pubDate>Thu, 07 Nov 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>OSI readies controversial Open AI definition</title>
			<link>https://lwn.net/Articles/995159/</link>
			<guid>https://lwn.net/Articles/995159/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;The &lt;a href="https://opensource.org/"&gt;Open Source Initiative&lt;/a&gt;
(OSI) has been working on defining &lt;a
href="https://opensource.org/ai"&gt;Open Source AI&lt;/a&gt;&amp;mdash;that is what
constitutes an AI system that can be used, studied, modified, and
shared for any purpose&amp;mdash;for almost two
years. Its &lt;a
href="https://opensource.org/about/board-of-directors"&gt;board&lt;/a&gt; will
be voting on the &lt;a href="https://opensource.org/ai/drafts/the-open-source-ai-definition-1-0-rc2"&gt;Open Source AI Definition&lt;/a&gt; (OSAID) on Sunday,
October&amp;nbsp;27, with the 1.0 version slated to be published on
October&amp;nbsp;28. It is never possible to please &lt;em&gt;everyone&lt;/em&gt; in
such an endeavor, and it would be folly to make that a goal. However,
a number of prominent figures in the open-source community have voiced
concerns that OSI is setting the bar too low with the OSAID&amp;mdash;which
will undo decades of community work to cajole vendors into adhering to
or respecting the original &lt;a href="https://opensource.org/osd"&gt;Open Source
Definition&lt;/a&gt; (OSD).&lt;/p&gt;
</description>
			<pubDate>Thu, 07 Nov 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>A new approach to validating test suites</title>
			<link>https://lwn.net/Articles/995276/</link>
			<guid>https://lwn.net/Articles/995276/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
The first program that Martin Pool ever wrote, he said, had bugs; the ones he's writing
now most likely have bugs too. The talk Pool gave at
&lt;a href="https://rustconf.com/"&gt;RustConf&lt;/a&gt; this year was about a way to try
to write programs with fewer bugs. He has developed a tool called
&lt;a href="https://mutants.rs/"&gt;
cargo-mutants&lt;/a&gt; that highlights gaps in test coverage by identifying
functions that can be broken without causing any tests to fail.
This can be a valuable complement to other testing techniques,
he explained.
&lt;/p&gt;
</description>
			<pubDate>Thu, 07 Nov 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>An update on Apple M1/M2 GPU drivers</title>
			<link>https://lwn.net/Articles/995383/</link>
			<guid>https://lwn.net/Articles/995383/</guid>
			<dc:creator>jake</dc:creator>
			<description>The kernel graphics driver for the Apple M1 and M2 GPUs is, rather
famously, written in Rust, but it has achieved conformance with
various graphics standards, which is also noteworthy.  At the &lt;a
href="https://indico.freedesktop.org/event/6/"&gt;X.Org Developers Conference
(XDC)&amp;nbsp;2024&lt;/a&gt;, Alyssa Rosenzweig gave an update on the status of the
driver, along with some news about the kinds of games it can support (&lt;a
href="https://www.youtube.com/watch?v=TtLP5sAXYKo"&gt;YouTube video&lt;/a&gt;, &lt;a href="https://indico.freedesktop.org/event/6/contributions/284/attachments/230/310/slides.pdf "&gt;slides&lt;/a&gt;).
There has been lots of progress since her talk at XDC last year (&lt;a
href="https://www.youtube.com/watch?v=O36VFNdQHsE"&gt;YouTube video&lt;/a&gt;),
with, of course, still more to come.
</description>
			<pubDate>Thu, 07 Nov 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for October 31, 2024</title>
			<link>https://lwn.net/Articles/995490/</link>
			<guid>https://lwn.net/Articles/995490/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The LWN.net Weekly Edition for October 31, 2024 is available.
</description>
			<pubDate>Thu, 07 Nov 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>The OpenWrt One system</title>
			<link>https://lwn.net/Articles/994961/</link>
			<guid>https://lwn.net/Articles/994961/</guid>
			<dc:creator>corbet</dc:creator>
			<description>&lt;a href="https://openwrt.org/"&gt;OpenWrt&lt;/a&gt; is, despite its relatively low
profile, one of our community's most important distributions; it runs
untold numbers of network routers and has served as the base on which a lot
of network-oriented development (including the &lt;a
href="https://www.bufferbloat.net/projects/"&gt;bufferbloat-reduction
work&lt;/a&gt;) has been done.  At the beginning of 2024, a few members of the
project &lt;a
href="https://lwn.net/ml/all/a8aaa495-da0b-4ddc-8c4f-3e1192d8b012@phrozen.org"&gt;announced&lt;/a&gt;
a plan to design and produce a router device specifically designed to run
OpenWrt.  This device, dubbed the "OpenWrt One", is now becoming available;
the kind folks at the &lt;a href="https://sfconservancy.org/"&gt;Software Freedom
Conservancy&lt;/a&gt; were kind enough to ship one to LWN, where the desire to
play with a new toy is never lacking.
</description>
			<pubDate>Thu, 14 Nov 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Safety in an unsafe world</title>
			<link>https://lwn.net/Articles/995814/</link>
			<guid>https://lwn.net/Articles/995814/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
Joshua Liebow-Feeser took to the stage at
&lt;a href="https://rustconf.com"&gt;RustConf&lt;/a&gt; to describe the methodology
that his team uses to encode
arbitrary constraints in the Rust type system when working on the
&lt;a href="https://en.wikipedia.org/wiki/Fuchsia_(operating_system)"&gt;
Fuchsia operating system&lt;/a&gt;
(&lt;a href="https://joshlf.com/files/talks/Safety%20in%20an%20Unsafe%20World.pdf"&gt;slides&lt;/a&gt;).
The technique is not unknown to
the Rust community, but Liebow-Feeser did a good job of both explaining the
method and making a case for why it should be used more widely. 
&lt;/p&gt;
</description>
			<pubDate>Thu, 14 Nov 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Building secure images with NixOS</title>
			<link>https://lwn.net/Articles/996329/</link>
			<guid>https://lwn.net/Articles/996329/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
Image-based Linux distributions have seen increasing popularity, recently. They
promise reliability and security, but pose packaging problems for
existing distributions. Ryan Lahfa and Niklas Sturm spoke about the work that
NixOS has done to enable an image-based workflow at this year's
&lt;a href="https://all-systems-go.io/"&gt;
All Systems Go!&lt;/a&gt;
conference in Berlin.
Unfortunately, LWN was not able to cover the conference for scheduling reasons,
but the
&lt;a href="https://www.youtube.com/watch?v=YAl27ciB6c8&amp;list=PLWYdJViL9EipIImmvuoGFAeS-lKeHH2DD"&gt;
videos of the event&lt;/a&gt; are available for anyone interested in watching the
talks.
Lahfa and Sturm explained that it is currently possible to create a
&lt;a href="https://nixos.org/"&gt;
NixOS&lt;/a&gt; system that
cryptographically verifies the kernel, initrd, and Nix store on boot — although
doing so still has some rough edges. Making an image-based NixOS installation is
similarly possible.
&lt;/p&gt;
</description>
			<pubDate>Thu, 14 Nov 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for November 7, 2024</title>
			<link>https://lwn.net/Articles/996377/</link>
			<guid>https://lwn.net/Articles/996377/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The LWN.net Weekly Edition for November 7, 2024 is available.
</description>
			<pubDate>Thu, 14 Nov 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Progress on toolchain security features</title>
			<link>https://lwn.net/Articles/996344/</link>
			<guid>https://lwn.net/Articles/996344/</guid>
			<dc:creator>jake</dc:creator>
			<description>Over the years, there has been steady progress in adding security features to
compilers and other tools to assist with hardening the Linux kernel (and, of course, other
programs).  In something of a tradition in the &lt;a
href="https://lpc.events/event/18/sessions/180/#20240918"&gt;toolchains
track&lt;/a&gt; at the &lt;a
href="https://linuxplumbersconf.org"&gt;Linux
Plumbers Conference&lt;/a&gt;, Kees Cook and Qing Zhao have led a session on that progress and
further plans; this year, they were joined by Justin Stitt  (&lt;a
href="https://www.youtube.com/watch?v=68PZz_9cPms"&gt;YouTube video&lt;/a&gt;).
</description>
			<pubDate>Thu, 21 Nov 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Back In Time back from the dead</title>
			<link>https://lwn.net/Articles/996720/</link>
			<guid>https://lwn.net/Articles/996720/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
&lt;a href="https://github.com/bit-team/backintime?tab=readme-ov-file#back-in-time"&gt;
Back In Time&lt;/a&gt; is a GPL-2.0-licensed backup tool based on
&lt;a href="https://rsync.samba.org/"&gt;
rsync&lt;/a&gt; and written in Python. It has both graphical and command-line interfaces, and
supports backups to local disks or over SSH.
Back In Time was originally written by
Oprea Dan and released in 2009. The tool has been
through some rough patches over the years, and is currently on its third set of
maintainers. Christian Buhtz, one of the current maintainers, explained to me
how he and his co-maintainers had revived the project, as well as why he thought
Back In Time stood out from all of the existing backup solutions.
&lt;/p&gt;
</description>
			<pubDate>Thu, 21 Nov 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>The trouble with struct sockaddr's fake flexible array</title>
			<link>https://lwn.net/Articles/997094/</link>
			<guid>https://lwn.net/Articles/997094/</guid>
			<dc:creator>corbet</dc:creator>
			<description>Flexible arrays — arrays that are declared as the final member of a
structure and which have a size determined at run time — have long drawn
the attention of developers seeking to harden the kernel against
buffer-overflow vulnerabilities.  These arrays have reliably been a source
of bugs, so anything that can be done to ensure that operations on them
stay within bounds is a welcome improvement.  While many improvements,
including the recent &lt;a href="https://lwn.net/Articles/936728/"&gt;counted-by work&lt;/a&gt;, have
been made, one of the most difficult cases remains.  Now, however,
developers who are interested in using recent compiler bounds-checking
features are trying to get a handle on &lt;tt&gt;struct sockaddr&lt;/tt&gt;.
</description>
			<pubDate>Thu, 21 Nov 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Truly portable C applications</title>
			<link>https://lwn.net/Articles/997238/</link>
			<guid>https://lwn.net/Articles/997238/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
Programming language polyglots are files that are valid
programs in multiple languages, and do different things in each. While polyglots are normally
nothing more than a curiosity, the
&lt;a href="https://justine.lol/cosmopolitan/index.html"&gt;
Cosmopolitan Libc&lt;/a&gt; project has been trying
to put them to a novel use: producing native, multi-platform binaries that
run directly on several operating systems and architectures. There are still
some rough edges with the project's approach, but it is generally possible to
build C programs into a polyglot format with with minimal
tweaking.
&lt;/p&gt;
</description>
			<pubDate>Thu, 21 Nov 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for November 14, 2024</title>
			<link>https://lwn.net/Articles/997293/</link>
			<guid>https://lwn.net/Articles/997293/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The LWN.net Weekly Edition for November 14, 2024 is available.
</description>
			<pubDate>Thu, 21 Nov 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Fedora KDE gets a promotion</title>
			<link>https://lwn.net/Articles/997559/</link>
			<guid>https://lwn.net/Articles/997559/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;The Fedora Project is set to welcome a second desktop edition to its
lineup after months (or years, depending when one starts the clock)
of discussions. The project recently decided to allow a new working group to
move forward with a KDE&amp;nbsp;Plasma&amp;nbsp;Desktop edition that will sit
alongside the existing GNOME-based Fedora&amp;nbsp;Workstation
edition. This puts KDE on a more equal footing within the project,
which, it is hoped, will bring more contributors and users interested
in KDE to adopt Fedora as their Linux distribution of choice.&lt;/p&gt;
</description>
			<pubDate>Thu, 05 Dec 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Development statistics for 6.12</title>
			<link>https://lwn.net/Articles/997959/</link>
			<guid>https://lwn.net/Articles/997959/</guid>
			<dc:creator>corbet</dc:creator>
			<description>Linus Torvalds &lt;a
href="https://lwn.net/ml/all/CAHk-=wgtGkHshfvaAe_O2ntnFBH3EprNk1juieLmjcF2HBwBgQ@mail.gmail.com/"&gt;released
the 6.12 kernel&lt;/a&gt; on November&amp;nbsp;17, as expected.  This development
cycle, the last for 2024, brought 13,344 non-merge changesets into the
mainline kernel; that made it a relatively slow cycle from this
perspective, but 6.12 includes a long list of significant new features.
The time has come to look at where those changes came from, and to look at
the year-long LTS cycle as well.
</description>
			<pubDate>Thu, 05 Dec 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for November 21, 2024</title>
			<link>https://lwn.net/Articles/998144/</link>
			<guid>https://lwn.net/Articles/998144/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The LWN.net Weekly Edition for November 21, 2024 is available.
</description>
			<pubDate>Thu, 05 Dec 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>NonStop discussion around adding Rust to Git</title>
			<link>https://lwn.net/Articles/998115/</link>
			<guid>https://lwn.net/Articles/998115/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
The Linux kernel community's discussions about including Rust have
&lt;a href="https://lwn.net/Kernel/Index/#Development_tools-Rust"&gt;
gotten a lot of attention&lt;/a&gt;, but the kernel is not the only project wrestling
with the question of whether to allow Rust. The Git project
&lt;a href="https://lwn.net/ml/git/ZZ77NQkSuiRxRDwt@nand.local/"&gt;
discussed&lt;/a&gt; the prospect in January, and then
&lt;a href="https://lwn.net/ml/all/Zu2DmS30E0kKug2a@nand.local/"&gt;
again&lt;/a&gt; at the Git Contributor's Summit in September. Complicating the
discussion is the Git project's lack of a policy on platform
support, and the fact that it does already have tools written in other
languages.
While the project has not committed to using
or avoiding Rust, it seems like only a matter of time until maintainers will
have to make a decision.
&lt;/p&gt;
</description>
			<pubDate>Thu, 12 Dec 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>The beginning of the 6.13 merge window</title>
			<link>https://lwn.net/Articles/998623/</link>
			<guid>https://lwn.net/Articles/998623/</guid>
			<dc:creator>corbet</dc:creator>
			<description>As of this writing, just over 1,800 non-merge changesets have been pulled
into the mainline kernel for the 6.13 release.  That number may seem small,
given that a typical merge window brings in at least 12,000 commits, but
the early pulls this time around have focused on significant core changes,
and there are quite a few of them.  The time has come to summarize the
changes pulled so far, including lazy preemption, multi-grained timestamps,
new extended-attribute system calls, and more.
</description>
			<pubDate>Thu, 12 Dec 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>The return of RWF_UNCACHED</title>
			<link>https://lwn.net/Articles/998783/</link>
			<guid>https://lwn.net/Articles/998783/</guid>
			<dc:creator>corbet</dc:creator>
			<description>Linux offers two broad ways of performing I/O to files.  Buffered I/O,
which is the usual way of accessing a file, stores a copy of the
transferred data in the kernel's page cache to speed future accesses.
Direct I/O, instead, moves data directly between the storage device and a
user-space buffer, avoiding the page cache.  Both modes have their
advantages and disadvantages.  In 2019, Jens Axboe &lt;a
href="https://lwn.net/Articles/806980/"&gt;proposed an uncached buffered mode&lt;/a&gt; to get some
of the advantages of both, but that effort stalled at the time.  Now, &lt;a
href="https://lwn.net/ml/all/20241203153232.92224-2-axboe@kernel.dk"&gt;uncached buffered
I/O is back&lt;/a&gt; with some impressive performance results behind it.
</description>
			<pubDate>Thu, 12 Dec 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for December 5, 2024</title>
			<link>https://lwn.net/Articles/998950/</link>
			<guid>https://lwn.net/Articles/998950/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The LWN.net Weekly Edition for December 5, 2024 is available.
</description>
			<pubDate>Thu, 12 Dec 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>A look at CentOS Stream 10</title>
			<link>https://lwn.net/Articles/986792/</link>
			<guid>https://lwn.net/Articles/986792/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;The &lt;a
href="https://docs.redhat.com/en/documentation/red_hat_enterprise_linux/10-beta/html/10.0_beta_release_notes/index"&gt;Red
Hat Enterprise Linux (RHEL) 10 beta&lt;/a&gt; was released in mid-November
and, if all goes according to plan, &lt;a
href="https://www.centos.org/centos-stream/"&gt;CentOS&amp;nbsp;Stream&lt;/a&gt;&amp;nbsp;10
should be released before the end of the year. While nothing is etched
in stone just yet, it is a good time for anyone using or targeting
RHEL (and its clones) to start taking a look at how Stream&amp;nbsp;10,
and the corresponding &lt;a
href="https://docs.fedoraproject.org/en-US/epel/epel-about/"&gt;EPEL&lt;/a&gt;
repository, is shaping up. This is not only important to RHEL and
Stream users, but anyone deploying and supporting software on
enterprise Linux (EL) derivatives like AlmaLinux, Oracle&amp;nbsp;Linux,
and Rocky&amp;nbsp;Linux as well.&lt;/p&gt;
</description>
			<pubDate>Thu, 19 Dec 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Auto-tuning the kernel</title>
			<link>https://lwn.net/Articles/998576/</link>
			<guid>https://lwn.net/Articles/998576/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
The Linux kernel has many tunable parameters. While there is much advice
available on the internet about how to set them, few people have the time to
weed through the (often contradictory) explanations and choose appropriate
values. One possible way to address this is
&lt;a href="https://blogs.oracle.com/linux/post/introducing-bpftune"&gt;
a project called bpftune&lt;/a&gt;, a
program that uses BPF to track various metrics about a running system and
adjust the sysctl knobs appropriately. The program is developed by Oracle, and
is available under a GPLv2 license. Bpftune is currently mostly
focused on optimizing network settings, but the authors hope that the system is
flexible enough to be extended to cover other settings.
&lt;/p&gt;
</description>
			<pubDate>Thu, 19 Dec 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Debian opens a can of username worms</title>
			<link>https://lwn.net/Articles/1000485/</link>
			<guid>https://lwn.net/Articles/1000485/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;It has long been said that &lt;a
href="https://martinfowler.com/bliki/TwoHardThings.html"&gt;naming things
is one of the hard things to do in computer science&lt;/a&gt;. That may be
so, but it pales in comparison to the challenge of handling
usernames properly in applications. This is especially true when multiple
applications are involved, and they are all supposed to agree on what
characters are, and are not, allowed. The Debian project is facing
that problem right now, as two user-creation utilities disagreed about
which names are allowable. A plan is in place to sort this out
before the release of Debian&amp;nbsp;13 ("trixie") sometime next year.&lt;/p&gt;
</description>
			<pubDate>Thu, 19 Dec 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Freezing out the page reference count</title>
			<link>https://lwn.net/Articles/1000654/</link>
			<guid>https://lwn.net/Articles/1000654/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The &lt;a
href="https://elixir.bootlin.com/linux/v6.12.1/source/include/linux/mm_types.h#L35"&gt;&lt;tt&gt;page&lt;/tt&gt;
structure&lt;/a&gt; sits at the core of the kernel's memory-management subsystem
(for now), and a key part of that structure is its reference count, stored
in &lt;tt&gt;refcount&lt;/tt&gt;.  The page reference count tells the kernel how many
users a given page has and when it can be freed.  That count is not needed
for every page in the system, though.  Matthew Wilcox has recently &lt;a
href="https://lwn.net/ml/all/20241125210149.2976098-1-willy@infradead.org"&gt;resurrected&lt;/a&gt;
an &lt;a href="https://lwn.net/ml/linux-mm/20220809171854.3725722-1-willy@infradead.org/"&gt;old
patch set&lt;/a&gt; that expands the concept of a "frozen" page — one that lacks a
meaningful reference count — to the immediate benefit of the slab allocator
but in the service of a longer-term goal as well.
</description>
			<pubDate>Thu, 19 Dec 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for December 12, 2024</title>
			<link>https://lwn.net/Articles/1000812/</link>
			<guid>https://lwn.net/Articles/1000812/</guid>
			<dc:creator>daroc</dc:creator>
			<description>The LWN.net Weekly Edition for December 12, 2024 is available.
</description>
			<pubDate>Thu, 19 Dec 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Facing the Git commit-ID collision catastrophe</title>
			<link>https://lwn.net/Articles/1001526/</link>
			<guid>https://lwn.net/Articles/1001526/</guid>
			<dc:creator>corbet</dc:creator>
			<description>Commits in the Git source-code management system are identified by the
SHA-1 hash of their contents — though the specific hash &lt;a
href="https://lwn.net/Articles/898522/"&gt;may change someday&lt;/a&gt;.  The full hash is a
160-bit quantity, normally written as a 40-character hexadecimal string.
While those strings are convenient for computers to work with, humans find
them to be a bit unwieldy, so it is common to abbreviate the hash values to
shorter strings.  Geert Uytterhoeven recently &lt;a
href="https://lwn.net/ml/all/cover.1733421037.git.geert+renesas@glider.be"&gt;proposed&lt;/a&gt;
increasing the length of those abbreviated hashes as used in the kernel
community, but the problem he was working to solve may not be as urgent as
it seems.
</description>
			<pubDate>Thu, 26 Dec 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Using Guile for Emacs</title>
			<link>https://lwn.net/Articles/1001645/</link>
			<guid>https://lwn.net/Articles/1001645/</guid>
			<dc:creator>jake</dc:creator>
			<description>&lt;a href="https://www.gnu.org/software/emacs/"&gt;Emacs&lt;/a&gt; is, famously, an
editor—perhaps far more—that is extensible using its own
variant of the Lisp programming language, &lt;a
href="https://www.gnu.org/software/emacs/manual/html_node/eintr/"&gt;Emacs
Lisp&lt;/a&gt; (or Elisp).  &lt;a href="https://emacsconf.org/2024/"&gt;This year's
edition of EmacsConf&lt;/a&gt;, which is an annual "gathering" that has been held
online for the past five years, had two separate talks on using a different
variant of Lisp, &lt;a href="https://www.gnu.org/software/guile/"&gt;Guile&lt;/a&gt;,
for Emacs.  Both projects would preserve Elisp compatibility, which is a
must, but they would use Guile differently.  The first talk we will cover
was given by Robin Templeton, who described the relaunch of the &lt;a
href="https://guile-emacs.org/"&gt;Guile-Emacs project&lt;/a&gt;, which would replace
the Elisp in Emacs with a compiler using Guile.  A subsequent article will look
at the other talk, which is about &lt;a
href="https://emacsconf.org/2024/talks/gypsum/"&gt;an Emacs clone&lt;/a&gt; written
using Guile.
</description>
			<pubDate>Thu, 26 Dec 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>WP Engine granted preliminary injunction in WordPress case</title>
			<link>https://lwn.net/Articles/1001783/</link>
			<guid>https://lwn.net/Articles/1001783/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;Since we &lt;a href="https://lwn.net/Articles/993895/"&gt;last looked&lt;/a&gt;
at the &lt;a href="https://lwn.net/Articles/991906/"&gt;WordPress
dispute&lt;/a&gt;, &lt;a href="https://wpengine.com/"&gt;WP Engine&lt;/a&gt; has sought
a preliminary injunction against &lt;a
href="https://automattic.com/"&gt;Automattic&lt;/a&gt; and its founder Matt Mullenweg to
restore its access to &lt;a
href="https://wordpress.org/"&gt;WordPress.org&lt;/a&gt;, and more. The judge
in the case granted a preliminary injunction on December 10. The case
is, of course, of interest to users and developers working with
WordPress&amp;mdash;but it may also have implications for other
open-source projects well beyond the WordPress community.&lt;/p&gt;
</description>
			<pubDate>Thu, 26 Dec 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for December 19, 2024</title>
			<link>https://lwn.net/Articles/1001869/</link>
			<guid>https://lwn.net/Articles/1001869/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The LWN.net Weekly Edition for December 19, 2024 is available.
</description>
			<pubDate>Thu, 26 Dec 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Emacs code completion can cause compromise</title>
			<link>https://lwn.net/Articles/1002046/</link>
			<guid>https://lwn.net/Articles/1002046/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
Emacs has had a
&lt;a href="https://lwn.net/Articles/966547/"&gt;few bugs&lt;/a&gt; related to accidentally
permitting the execution of untrusted code. Unfortunately, it seems as though
another bug of that sort has appeared — and may be harder to patch,
because the problem comes from the way Emacs handles expansion of Lisp macros in
code being analyzed. The
vulnerability is only practically exploitable in a non-default configuration, so
not every Emacs user has something to worry about. The Emacs
developers are reportedly working on a fix, but have not yet shared details
about it. In the meantime, every Emacs version since at least
26.1 (released in May&amp;nbsp;2018) through the current development version is vulnerable.
&lt;/p&gt;
</description>
			<pubDate>Thu, 26 Dec 2024 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Tim Peters returns to the Python community</title>
			<link>https://lwn.net/Articles/1002340/</link>
			<guid>https://lwn.net/Articles/1002340/</guid>
			<dc:creator>jake</dc:creator>
			<description>In the past, suspensions of Python core developers have effectively been
permanent because the recipients of the punishment chose not to return.
Things have played out quite differently after Tim Peters was &lt;a
href="https://lwn.net/Articles/988894/"&gt;suspended for three months&lt;/a&gt; back in August;
Peters has been posting to the Python discussion forum since his suspension
ended in early November and, generally, getting back to work as usual.
That does not mean that he—or others in the community—have accepted the way
he was treated, but he has largely made his peace with it.  The incident is
still reverberating through the Python world, however.
</description>
			<pubDate>Thu, 09 Jan 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Process creation in io_uring</title>
			<link>https://lwn.net/Articles/1002371/</link>
			<guid>https://lwn.net/Articles/1002371/</guid>
			<dc:creator>corbet</dc:creator>
			<description>Back in 2022, Josh Triplett &lt;a href="https://lwn.net/Articles/908268/"&gt;presented a
plan&lt;/a&gt; to implement a "spawn new process" functionality in the io_uring
subsystem.  There was a fair amount of interest at the time, but developers
got distracted, and the work did not progress.  Now, Gabriel Krisman
Bertazi has returned with &lt;a
href="https://lwn.net/ml/all/20241209234316.4132786-1-krisman@suse.de"&gt;a patch series&lt;/a&gt;
updating and improving Triplett's work.  While interest in this
functionality remains, it may still take some time before it is ready for
merging into the mainline.
</description>
			<pubDate>Thu, 09 Jan 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Systemd improves image features and adds varlink API</title>
			<link>https://lwn.net/Articles/1002398/</link>
			<guid>https://lwn.net/Articles/1002398/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;The &lt;a
href="https://lwn.net/Articles/1001657/"&gt;systemd v257&lt;/a&gt; release brings a number of incremental
enhancements to various components and utilities for working with
Linux systems. This includes more support for &lt;a href="https://varlink.org/"&gt;varlink&lt;/a&gt;, automated
downloading of disk images at boot time, and a number of improvements
to the secure-boot process for unified kernel images (UKIs), which we
have covered in &lt;a href="https://lwn.net/Articles/1001730/"&gt;a separate
article&lt;/a&gt;.&lt;/p&gt;
</description>
			<pubDate>Thu, 09 Jan 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Preventing data races with Pony</title>
			<link>https://lwn.net/Articles/1001224/</link>
			<guid>https://lwn.net/Articles/1001224/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
The
&lt;a href="https://www.ponylang.io/"&gt;Pony&lt;/a&gt; programming language is dedicated to
exploring how to make high-performance
&lt;a href="https://en.wikipedia.org/wiki/Actor_model"&gt;
actor-based&lt;/a&gt; systems. Started in 2014,
the language's most notable feature is probably
&lt;a href="https://tutorial.ponylang.io/reference-capabilities/"&gt;
reference capabilities&lt;/a&gt;, a system of pointer annotations that gives the developer
fine manual control over how data is shared between actors, while simultaneously
ensuring that Pony programs don't have data races. The language is not likely to
overtake other more popular programming languages, but its ideas could be useful for
other languages or frameworks struggling with concurrent data access.
&lt;/p&gt;
</description>
			<pubDate>Thu, 16 Jan 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Emacs in Scheme</title>
			<link>https://lwn.net/Articles/1001929/</link>
			<guid>https://lwn.net/Articles/1001929/</guid>
			<dc:creator>jake</dc:creator>
			<description>During &lt;a href="https://emacsconf.org/2024/"&gt;EmacsConf&amp;nbsp;2024&lt;/a&gt;, which
was held online in early December&amp;nbsp;2024, Ramin Honary gave a &lt;a
href="https://emacsconf.org/2024/talks/gypsum/"&gt;talk&lt;/a&gt; about &lt;a
href="https://codeberg.org/ramin_hal9001/gypsum#project-gypsum"&gt;Project
Gypsum&lt;/a&gt;, which is his effort to rewrite Emacs in &lt;a
href="https://www.scheme.org/"&gt;Scheme&lt;/a&gt;.  Unlike most other Emacs clones,
which simply replicate the key bindings, Gypsum is also implementing &lt;a
href="https://www.gnu.org/software/emacs/manual/html_node/eintr/"&gt;Emacs
Lisp&lt;/a&gt; (or Elisp).  Honary is initially targeting &lt;a
href="https://www.gnu.org/software/guile/"&gt;Guile&lt;/a&gt;, which is an
implementation of Scheme, but wants to make the code &lt;a
href="https://codeberg.org/ramin_hal9001/gypsum/wiki/Portability.md"&gt;portable&lt;/a&gt;
to any implementation of &lt;a href="https://r7rs.org/"&gt;R7RS&lt;/a&gt; Scheme.
</description>
			<pubDate>Thu, 16 Jan 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>A look at the Sequoia command-line interface</title>
			<link>https://lwn.net/Articles/1003243/</link>
			<guid>https://lwn.net/Articles/1003243/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
The
&lt;a href="https://sequoia-pgp.org/"&gt;
Sequoia&lt;/a&gt; OpenPGP library has been in development for some time. LWN
&lt;a href="https://lwn.net/Articles/830902/"&gt;covered&lt;/a&gt; the library in 2020. Now the project's
command-line interface has
&lt;a href="https://lwn.net/Articles/1002411/"&gt;been released&lt;/a&gt;. The &lt;tt&gt;sq&lt;/tt&gt; tool offers a
promising alternative to the venerable
&lt;a href="https://gnupg.org/"&gt;
GNU Privacy Guard&lt;/a&gt; (GPG) tool — albeit one with a
different interface, set of terminology, and approach to the web of
trust. Several distributions are making increasing use of the tool
behind the scenes.
&lt;/p&gt;
</description>
			<pubDate>Thu, 16 Jan 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for January 9, 2025</title>
			<link>https://lwn.net/Articles/1003479/</link>
			<guid>https://lwn.net/Articles/1003479/</guid>
			<dc:creator>corbet</dc:creator>
			<description>Inside this week's LWN.net Weekly Edition:
        &lt;p&gt;
        &lt;ul&gt;
&lt;li&gt; &lt;a href="https://lwn.net/Articles/1003479/"&gt;Front&lt;/a&gt;: What to expect in 2025; Sequoia; Emacs in Scheme; Pony; Homa; 2024 Timeline.
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1003481/"&gt;Briefs&lt;/a&gt;: Colliding SHAs; netdev in 2024; Gentoo retrospective; LineageOS 22.1; pkgsrc-2024Q4; RIP Steve Langasek; Firefox 134.0; Algol 68; Ruby 3.4; Quotes; ...
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1003482/"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.
            &lt;/ul&gt;

        </description>
			<pubDate>Thu, 16 Jan 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>2024 Linux and free software timeline</title>
			<link>https://lwn.net/Articles/1004204/</link>
			<guid>https://lwn.net/Articles/1004204/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;In the past, LWN had a tradition of &lt;a
href="https://lwn.net/op/TimelineIdx.lwn"&gt;publishing a timeline&lt;/a&gt; of
notable events from the previous year in early January. We thought we
might try reviving that tradition in 2025 to see if our readers find
it useful. While we have covered these events as they
happened, it's interesting to see how much has taken place in just
12 months.&lt;/p&gt;
</description>
			<pubDate>Thu, 16 Jan 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Ghostty 1.0 has been summoned</title>
			<link>https://lwn.net/Articles/1004377/</link>
			<guid>https://lwn.net/Articles/1004377/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;The &lt;a href="https://ghostty.org/"&gt;Ghostty&lt;/a&gt; terminal emulator
project has generated a surprising amount of interest, even before
code was released to the public. This is in part due to the high
profile of its creator, &lt;a
href="https://en.wikipedia.org/wiki/HashiCorp"&gt;HashiCorp&lt;/a&gt; founder
Mitchell Hashimoto. Its development was conducted behind closed doors
for beta testing, until version&amp;nbsp;1.0 was &lt;a
href="https://github.com/ghostty-org/ghostty/releases/tag/v1.0.0"&gt;released&lt;/a&gt;
on December 26 under the &lt;a
href="https://github.com/ghostty-org/ghostty?tab=MIT-1-ov-file#readme"&gt;MIT
license&lt;/a&gt;. While far from finished, Ghostty is ready for day-to-day
use and might be of interest to those who spend significant amounts of
time at the command line.&lt;/p&gt;
</description>
			<pubDate>Thu, 23 Jan 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for January 16, 2025</title>
			<link>https://lwn.net/Articles/1004544/</link>
			<guid>https://lwn.net/Articles/1004544/</guid>
			<dc:creator>corbet</dc:creator>
			<description>Inside this week's LWN.net Weekly Edition:
        &lt;p&gt;
        &lt;ul&gt;
&lt;li&gt; &lt;a href="https://lwn.net/Articles/1004544/"&gt;Front&lt;/a&gt;: Chimera Linux; Vim; Page-table hardening; Modifying system calls; Ghostty 1.0; TuxFamily.
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1004546/"&gt;Briefs&lt;/a&gt;: rsync vulnerabilities; Linux Mint 22.1; Git v2.48.0; Libvirt v11.0.0; Rust 1.84.0; RIP Helen Borrie, Paolo Mantegazza, and Bill Gianopoulos; SFC lawsuit; Quotes; ...
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1004547/"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.
            &lt;/ul&gt;

        </description>
			<pubDate>Thu, 23 Jan 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>[$] A revamped Python string-formatting proposal</title>
			<link>https://lwn.net/Articles/1005000/</link>
			<guid>https://lwn.net/Articles/1005000/</guid>
			<dc:creator>jake</dc:creator>
			<description>The proposal to add a more general facility for string formatting to
Python, which we &lt;a href="https://lwn.net/Articles/985346/"&gt;looked at&lt;/a&gt; in August 2024,
has changed a great deal since, so it merits another look.  The
changes take multiple forms: a new title for &lt;a
href="https://peps.python.org/pep-0750/"&gt;PEP
750&lt;/a&gt; ("Template Strings"), a different mechanism for creating and using templates,
a new &lt;tt&gt;Template&lt;/tt&gt; type to hold them, and several additional authors for the PEP.
Meanwhile, one controversial part of the original proposal, lazy evaluation
of the interpolated values, has been changed so that it requires an
explicit opt-in (via &lt;a
href="https://docs.python.org/3.8/tutorial/controlflow.html#lambda-expressions"&gt;&lt;tt&gt;lambda&lt;/tt&gt;&lt;/a&gt;);
template strings are a generalization of &lt;a
href="https://lwn.net/Articles/919426/"&gt;f-strings&lt;/a&gt; and lazy evaluation was seen by some
as a potentially confusing departure from their behavior.
</description>
			<pubDate>Thu, 30 Jan 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>[$] LWN.net Weekly Edition for January 23, 2025</title>
			<link>https://lwn.net/Articles/1005296/</link>
			<guid>https://lwn.net/Articles/1005296/</guid>
			<dc:creator>corbet</dc:creator>
			<description>Inside this week's LWN.net Weekly Edition:
        &lt;p&gt;
        &lt;ul&gt;
&lt;li&gt; &lt;a href="https://lwn.net/Articles/1005296/"&gt;Front&lt;/a&gt;: Rsync vulnerability; Going mouseless; Commit IDs; 6.13 Development statistics; Python string formating; Python None-aware operators.
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1005298/"&gt;Briefs&lt;/a&gt;: Kernel 6.13; Dillo 3.2.0; GDB 16.1; OpenVox; Wine 10.0; Quotes; ...
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1005299/"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.
            &lt;/ul&gt;

        </description>
			<pubDate>Thu, 30 Jan 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>A look at the recent rsync vulnerability</title>
			<link>https://lwn.net/Articles/1005302/</link>
			<guid>https://lwn.net/Articles/1005302/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
On January&amp;nbsp;14, Nick Tait
&lt;a href="https://lwn.net/ml/all/CALDM2HfAOzs+zr3XLCDAKH8oOosigdaNooUANDf=Ez5mLSvQcQ@mail.gmail.com/"&gt;
announced&lt;/a&gt; the discovery of six vulnerabilities in
&lt;a href="https://rsync.samba.org/"&gt;
rsync&lt;/a&gt;, the popular file-synchronization tool. While software vulnerabilities are
not uncommon, the
&lt;a href="https://nvd.nist.gov/vuln/detail/CVE-2024-12084"&gt;
most serious one&lt;/a&gt; he announced allows for remote code execution
on servers that run &lt;tt&gt;rsyncd&lt;/tt&gt; — and possibly other configurations.
The bug itself is fairly simple, but this event provides a nice opportunity to
dig into it, show why it is so serious, and consider ways
the open-source community can prevent such mistakes in the
future.
&lt;/p&gt;
</description>
			<pubDate>Thu, 30 Jan 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>[$] A mouseless tale: trying for a keyboard-driven desktop</title>
			<link>https://lwn.net/Articles/1005332/</link>
			<guid>https://lwn.net/Articles/1005332/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;The computer mouse is a wonderful invention, but for the past few
months I've been working to use mine as little as possible for
productivity and ergonomic reasons. It should not be surprising that
there are quite a few open-source applications, utilities, and
configuration options that are either designed to or incidentally
assist in creating a keyboard-driven desktop. This includes tiling window
management with &lt;a
href="https://github.com/paperwm/PaperWM?tab=readme-ov-file#paperwm"&gt;PaperWM&lt;/a&gt;, the &lt;a
href="https://vimium.github.io/"&gt;Vimium&lt;/a&gt; browser extension, &lt;a
href="https://github.com/sezanzeb/input-remapper?tab=readme-ov-file#input-remapper"&gt;Input Remapper&lt;/a&gt;, and more.&lt;/p&gt;
</description>
			<pubDate>Thu, 30 Jan 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>[$] LWN.net Weekly Edition for January 30, 2025</title>
			<link>https://lwn.net/Articles/1005953/</link>
			<guid>https://lwn.net/Articles/1005953/</guid>
			<dc:creator>corbet</dc:creator>
			<description>Inside this week's LWN.net Weekly Edition:
        &lt;p&gt;
        &lt;ul&gt;
&lt;li&gt; &lt;a href="https://lwn.net/Articles/1005953/"&gt;Front&lt;/a&gt;: Go vendoring in Fedora; Rust 2024 edition; 6.14 Merge window; uretprobe(); FOSDEM keynote; Earthstar.
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1005955/"&gt;Briefs&lt;/a&gt;: Git security; Ubuntu discussion; LWN EPUBs; Facebook moderation; Quotes; ...
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1005956/"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.
            &lt;/ul&gt;

        </description>
			<pubDate>Thu, 06 Feb 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>An update on sealed system mappings</title>
			<link>https://lwn.net/Articles/1006375/</link>
			<guid>https://lwn.net/Articles/1006375/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
Jeff Xu has been working on
&lt;a href="https://lwn.net/ml/all/20241125202021.3684919-1-jeffxu@google.com/"&gt;
a patch set&lt;/a&gt; that makes certain mappings in a process's address space
impossible to change, sealing them against tampering. This has some potential
security benefits — mainly, making
sure that someone cannot relocate the
&lt;a href="https://lwn.net/Articles/446528/"&gt;vsyscall and
vDSO mappings&lt;/a&gt; — but some kernel developers haven't
been impressed with the patches.
While the core functionality (sealing the mappings) is sound, some of the
supporting code for enabling and disabling the new feature caused concern by
going against the normal design for such things. Reviewers also questioned
how this feature would interact with checkpointing and with sandboxing.
&lt;/p&gt;
</description>
			<pubDate>Thu, 13 Feb 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for February 6, 2025</title>
			<link>https://lwn.net/Articles/1007000/</link>
			<guid>https://lwn.net/Articles/1007000/</guid>
			<dc:creator>corbet</dc:creator>
			<description>Inside this week's LWN.net Weekly Edition:
        &lt;p&gt;
        &lt;ul&gt;
&lt;li&gt; &lt;a href="https://lwn.net/Articles/1007000/"&gt;Front&lt;/a&gt;: Finding concurrency bugs with sched_ext; Rust abstractions; 6.14 Merge window; Sealed system mappings; OpenSUSE board; Julia; Site tour.
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1007002/"&gt;Briefs&lt;/a&gt;: Binutils 2.44; Firefox 135.0; Freedesktop GitLab; GNU C Library 2.41; GTK; Servo; Thunderbird updates; Sanctions; Quotes; ...
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1007003/"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.
            &lt;/ul&gt;

        </description>
			<pubDate>Thu, 13 Feb 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Exposing concurrency bugs with a custom scheduler</title>
			<link>https://lwn.net/Articles/1007689/</link>
			<guid>https://lwn.net/Articles/1007689/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
Jake Hillion gave
&lt;a href="https://fosdem.org/2025/schedule/event/fosdem-2025-4489-concurrency-testing-using-custom-linux-schedulers/"&gt;
a presentation&lt;/a&gt; at
&lt;a href="https://fosdem.org/2025/"&gt;
FOSDEM&lt;/a&gt; about using
&lt;a href="https://www.kernel.org/doc/html/next/scheduler/sched-ext.html"&gt;
sched_ext&lt;/a&gt;, the BPF
scheduling framework that was introduced in kernel version 6.12, to help find
elusive concurrency problems. In collaboration with Johannes Bechberger, he has
built a scheduler that can reveal theoretically possible but unobserved
concurrency bugs in test code in a few minutes. Since their scheduler only
relies on mainline kernel features, it can theoretically be applied to any
application that runs on Linux — although there are a number of caveats since
the project is still in its early days.
&lt;/p&gt;
</description>
			<pubDate>Thu, 13 Feb 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Rewriting essential Linux packages in Rust</title>
			<link>https://lwn.net/Articles/1007907/</link>
			<guid>https://lwn.net/Articles/1007907/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;Most Linux systems depend on a suite of core utilities that the &lt;a
href="https://www.gnu.org/"&gt;GNU Project&lt;/a&gt; started development on
decades ago and are, of course, written in C. At &lt;a
href="https://fosdem.org/2025/"&gt;FOSDEM&amp;nbsp;2025&lt;/a&gt;, Sylvestre Ledru
made the case in &lt;a
href="https://fosdem.org/2025/schedule/event/fosdem-2025-6196-rewriting-the-future-of-the-linux-essential-packages-in-rust-/"&gt;his
main stage talk&lt;/a&gt; that modern systems require safer, more
maintainable tools. Over the past few years, Ledru has led the charge
of rewriting the &lt;a href="https://www.gnu.org/software/coreutils/"&gt;GNU
Core Utilities&lt;/a&gt; (coreutils) in Rust, as the MIT-licensed &lt;a
href="https://github.com/uutils/"&gt;uutils&lt;/a&gt; project. The goal is to
offer what he said are more secure, and more performant drop-in
replacements for the tools Linux users depend on. At FOSDEM, Ledru
announced that the uutils project is setting its sights even
higher.&lt;/p&gt;
</description>
			<pubDate>Thu, 20 Feb 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for February 13, 2025</title>
			<link>https://lwn.net/Articles/1008279/</link>
			<guid>https://lwn.net/Articles/1008279/</guid>
			<dc:creator>corbet</dc:creator>
			<description>Inside this week's LWN.net Weekly Edition:
        &lt;p&gt;
        &lt;ul&gt;
&lt;li&gt; &lt;a href="https://lwn.net/Articles/1008279/"&gt;Front&lt;/a&gt;: BPF load-time checking; IRQ suspension; Rust for Linux; Rewriting coreutils; Selfish contributors; emlearn.
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1008281/"&gt;Briefs&lt;/a&gt;: RfL policy; OpenWrt 24.10.0; Arti 1.4.0; LibreOffice 25.2; OpenInfra; Plasma 6.3; Attacks on Codeberg; Quotes; ...
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1008282/"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.
            &lt;/ul&gt;

        </description>
			<pubDate>Thu, 20 Feb 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Smarter IRQ suspension in the networking stack</title>
			<link>https://lwn.net/Articles/1008399/</link>
			<guid>https://lwn.net/Articles/1008399/</guid>
			<dc:creator>corbet</dc:creator>
			<description>High-performance networking is a highly tuned activity; the amount of time
available to deal with each packet may be measured in nanoseconds, so care
must be taken to avoid anything that might slow the process down.
Recently, there has been a fair amount of attention given to &lt;a
href="https://lwn.net/ml/all/20241021015311.95468-1-jdamato@fastly.com/"&gt;a patch set
merged for 6.13&lt;/a&gt; that, it is claimed, can improve processing efficiency
(and, thus, power savings)
in data centers by as much as 30%.  The change itself, contributed by Joe
Damato and Martin Karsten, is a relatively small tweak to existing
optimization techniques; it shows just how much care is needed to optimize
a high-bandwidth server.
</description>
			<pubDate>Thu, 20 Feb 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Milliwatt machine learning with emlearn</title>
			<link>https://lwn.net/Articles/1009011/</link>
			<guid>https://lwn.net/Articles/1009011/</guid>
			<dc:creator>jake</dc:creator>
			<description>While large language models and the expensive hardware they require are all
the rage now, other areas of artificial intelligence work within much more
constrained hardware environments. At &lt;a
href="https://fosdem.org/2025/"&gt;FOSDEM&amp;nbsp;2025&lt;/a&gt;, Jon Nordby presented
his open-source machine-learning inference engine for microcontrollers,
named &lt;a href="https://emlearn.readthedocs.io"&gt;emlearn&lt;/a&gt;. The project
also boasts bindings for &lt;a href="https://micropython.org"&gt;MicroPython&lt;/a&gt;,
thus making machine-learning applications even more accessible.
</description>
			<pubDate>Thu, 20 Feb 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for February 20, 2025</title>
			<link>https://lwn.net/Articles/1009456/</link>
			<guid>https://lwn.net/Articles/1009456/</guid>
			<dc:creator>corbet</dc:creator>
			<description>Inside this week's LWN.net Weekly Edition:
        &lt;p&gt;
        &lt;ul&gt;
&lt;li&gt; &lt;a href="https://lwn.net/Articles/1009456/"&gt;Front&lt;/a&gt;: Systemd; AI scraperbots; Time-slice extension; FUSE regression; Multi-size THPs; Memcached; Meshtastic.
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1009458/"&gt;Briefs&lt;/a&gt;: Asahi leadership; Debian images; RISC-V Fedora; OpenSUSE; Mesa 25.0.0; Pi-hole v6; Quotes; ...
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1009459/"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.
            &lt;/ul&gt;

        </description>
			<pubDate>Thu, 27 Feb 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Extending time slices for user-space locks</title>
			<link>https://lwn.net/Articles/1009509/</link>
			<guid>https://lwn.net/Articles/1009509/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
Steven Rostedt recently posted
&lt;a href="https://lwn.net/ml/all/20250131225837.972218232@goodmis.org/"&gt;
a patch set&lt;/a&gt; that could help improve the performance of certain user-space
applications by giving the scheduler more context about when they are safe to
interrupt. The patch set lets programs request a small grace window
before they can be interrupted so that they can relinquish any locks, decreasing the
amount of time that other threads have to spend waiting. Rostedt shared
performance numbers suggesting that the patch might cut the amount of time spent
acquiring locks in half for some programs — although, since his test was
specifically tuned for this case, real-world projects should expect a somewhat
less dramatic improvement. The change received some pushback from scheduler
maintainer Peter Zijlstra, who objected to the patch set's approach.
&lt;/p&gt;
</description>
			<pubDate>Thu, 27 Feb 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Meshtastic: decentralized communication with low-power devices</title>
			<link>https://lwn.net/Articles/1009782/</link>
			<guid>https://lwn.net/Articles/1009782/</guid>
			<dc:creator>jake</dc:creator>
			<description>Many of us enjoy uninterrupted access to mobile networks. However, in
remote areas or during emergencies, that connectivity may not always be
available. For such scenarios, &lt;a
href="https://meshtastic.org"&gt;Meshtastic&lt;/a&gt; offers a decentralized
wireless mesh network with open-source firmware that runs on affordable,
low-power devices.
At &lt;a href="https://fosdem.org/2025/"&gt;FOSDEM 2025&lt;/a&gt;, the Meshtastic
project was represented by one of its core developers, Thomas Göttgens, who
gave a talk, "&lt;a
href="https://fosdem.org/2025/schedule/event/fosdem-2025-4375-meshtastic-off-grid-communication-for-everyone/"&gt;Meshtastic
- off-grid communication for everyone&lt;/a&gt;", in the &lt;a
href="https://fosdem.org/2025/schedule/track/radio/"&gt;Radio&lt;/a&gt; developer
room (devroom).
</description>
			<pubDate>Thu, 27 Feb 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for February 27, 2025</title>
			<link>https://lwn.net/Articles/1011011/</link>
			<guid>https://lwn.net/Articles/1011011/</guid>
			<dc:creator>corbet</dc:creator>
			<description>Inside this week's LWN.net Weekly Edition:
        &lt;p&gt;
        &lt;ul&gt;
&lt;li&gt; &lt;a href="https://lwn.net/Articles/1011011/"&gt;Front&lt;/a&gt;: Tail calls in CPython; BPF cancellation; Slabs, sheaves, and barns; Atomic block writes; Large filesystem block sizes; EPEL 10 for older CPUs; pytest-mh; Open-source battery.
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1011013/"&gt;Briefs&lt;/a&gt;: DMA discussion; Armbian 25.2; Gentoo qcow2; Aqualung 2.0; Emacs 30.1; Rust 1.85.0; Quotes; ...
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1011014/"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.
            &lt;/ul&gt;

        </description>
			<pubDate>Thu, 06 Mar 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Building an open-source battery</title>
			<link>https://lwn.net/Articles/1011730/</link>
			<guid>https://lwn.net/Articles/1011730/</guid>
			<dc:creator>jake</dc:creator>
			<description>&lt;a href="https://fosdem.org/2025/"&gt;FOSDEM 2025&lt;/a&gt; featured the usual talks
about open-source software, but, as always, the conference also offered the
opportunity to discover some more exotic and less software-centric
topics. That's how I learned about the &lt;a href="https://fbrc.dev"&gt;Flow
Battery Research Collective&lt;/a&gt; (FBRC), which is building what will
eventually become an open-source home battery.
Daniel Fernández Pinto represented the collective at
FOSDEM with his talk "&lt;a
href="https://fosdem.org/2025/schedule/event/fosdem-2025-6003-flow-battery-research-collective-building-an-open-source-battery-for-stationary-storage/"&gt;Building
an Open-Source Battery for Stationary Storage&lt;/a&gt;" in the "&lt;a
href="https://fosdem.org/2025/schedule/track/energy/"&gt;Energy: Accelerating
the Transition through Open Source&lt;/a&gt;" developer room (devroom).
</description>
			<pubDate>Thu, 06 Mar 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Two new graph-based functional programming languages</title>
			<link>https://lwn.net/Articles/1011803/</link>
			<guid>https://lwn.net/Articles/1011803/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
Functional programming languages have a long association with graphs. In the
1990s, it was even thought that parallel graph-reduction
architectures could make functional programming languages much faster than their
imperative counterparts. Alas, that prediction mostly failed to materialize.
Even though graphs are still used as a theoretical formalism in order to define
and optimize functional languages (such as Haskell's
&lt;a href="https://www.microsoft.com/en-us/research/publication/implementing-lazy-functional-languages-on-stock-hardware-the-spineless-tagless-g-machine/"&gt;
spineless tagless graph-machine&lt;/a&gt;), they are still mostly compiled down to the same old
non-parallel assembly code that every other language uses. Now, two
projects —
&lt;a href="https://higherorderco.com/"&gt;
Bend&lt;/a&gt; and
&lt;a href="https://vine.dev/"&gt;
Vine&lt;/a&gt; — have sprung up attempting to change that, and prove that
parallel graph reduction can be a useful technique for real programs.
&lt;/p&gt;
</description>
			<pubDate>Thu, 13 Mar 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for March 6, 2025</title>
			<link>https://lwn.net/Articles/1012147/</link>
			<guid>https://lwn.net/Articles/1012147/</guid>
			<dc:creator>corbet</dc:creator>
			<description>Inside this week's LWN.net Weekly Edition:
        &lt;p&gt;
        &lt;ul&gt;
&lt;li&gt; &lt;a href="https://lwn.net/Articles/1012147/"&gt;Front&lt;/a&gt;: Firefox forks; Bend and Vine; FineIBT; Guard pages; Fedora's Flatpak packaging; Zotero.
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1012149/"&gt;Briefs&lt;/a&gt;: LFS 12.3; FerretDB 2.0; Firefox; Fish 4.0; Incus 6.10; Thunderbird 136.0; Xen 4.20; Quotes; ...
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1012150/"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.
            &lt;/ul&gt;

        </description>
			<pubDate>Thu, 13 Mar 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Zig's 0.14 release inches the project toward stability</title>
			<link>https://lwn.net/Articles/1012809/</link>
			<guid>https://lwn.net/Articles/1012809/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
The &lt;a href="https://ziglang.org/"&gt;Zig&lt;/a&gt; project has
&lt;a href="https://ziglang.org/download/0.14.0/release-notes.html"&gt;
announced&lt;/a&gt; the release of the 0.14 version of the language,
including changes from more than 250 contributors. Zig is a low-level,
memory-unsafe programming language that aims to compete with C instead of
depending on it. Even though the language has not yet had a stable release,
there are a number of projects using it as an alternative to C with better
metaprogramming.
While the project's release
schedule has been a bit inconsistent, with the release of version 0.14 being
&lt;a href="https://ziglang.org/news/0.14.0-delayed/"&gt;
delayed&lt;/a&gt;
several times, the release contains a number of new convenience features,
broader architecture support, and the next steps toward removing Zig's
dependency on LLVM.
&lt;/p&gt;
</description>
			<pubDate>Thu, 20 Mar 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>New terms of service for PyPI</title>
			<link>https://lwn.net/Articles/1012954/</link>
			<guid>https://lwn.net/Articles/1012954/</guid>
			<dc:creator>jake</dc:creator>
			<description>On February 25, the &lt;a href="https://www.python.org/psf-landing/"&gt;Python
Software Foundation&lt;/a&gt; (PSF), which runs the &lt;a
href="https://pypi.org/"&gt;Python Package Index&lt;/a&gt; (PyPI), &lt;a
href="https://blog.pypi.org/posts/2025-02-25-terms-of-service/"&gt;announced&lt;/a&gt;
new &lt;a href="https://policies.python.org/pypi.org/Terms-of-Service/"&gt;terms
of service&lt;/a&gt; (ToS) for the repository.  That has led to some questions
about the new ToS, and the process of coming up with them.  For one thing, the previous &lt;a
href="https://policies.python.org/pypi.org/Terms-of-Use/"&gt;terms
of use&lt;/a&gt; for the service were shorter and simpler, but there are other
concerns with specific wording in the new agreement.
</description>
			<pubDate>Thu, 20 Mar 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for March 13, 2025</title>
			<link>https://lwn.net/Articles/1013184/</link>
			<guid>https://lwn.net/Articles/1013184/</guid>
			<dc:creator>corbet</dc:creator>
			<description>Inside this week's LWN.net Weekly Edition:
        &lt;p&gt;
        &lt;ul&gt;
&lt;li&gt; &lt;a href="https://lwn.net/Articles/1013184/"&gt;Front&lt;/a&gt;: PyPI terms of service; Zig 0.14; Matrix; Timer IDs and ABI; Module integrity checking; Capability analysis.
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1013186/"&gt;Briefs&lt;/a&gt;: Path traversal; Below vulnerability; Ubuntu 25.04; Flang; Gstreamer 1.26.0; Framework Mono 6.14.0; Quotes; ...
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1013187/"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.
            &lt;/ul&gt;

        </description>
			<pubDate>Thu, 20 Mar 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>A look at /e/OS on tablet hardware</title>
			<link>https://lwn.net/Articles/1006557/</link>
			<guid>https://lwn.net/Articles/1006557/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;&lt;a href="https://e.foundation/e-os/"&gt;/e&amp;#8288;/&amp;#8288;OS&lt;/a&gt; is a
privacy-centric, open-source mobile operating system that
has primarily been targeted at mobile phones, with only a few
community supported images available for tablet devices. In December,
&lt;a href="https://murena.com/"&gt;Murena&lt;/a&gt;&amp;mdash;a company that sells devices with /&amp;#8288;e&amp;#8288;/&amp;#8288;OS
preinstalled&amp;mdash;&lt;a
href="https://murena.com/finally-here-the-long-awaited-murena-pixel-tablet-is-now-on-pre-sale/"&gt;announced&lt;/a&gt;
that /&amp;#8288;e&amp;#8288;/&amp;#8288;OS now officially supports tablets as well, starting with the
Pixel tablet. The user experience is close enough to
mainstream alternatives to make it attractive, but there are some
under-the-hood problems that may give users pause.&lt;/p&gt;
</description>
			<pubDate>Thu, 27 Mar 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Better CPU vulnerability mitigation configuration</title>
			<link>https://lwn.net/Articles/1013640/</link>
			<guid>https://lwn.net/Articles/1013640/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
Modern CPUs all have multiple hardware vulnerabilities that the kernel needs to mitigate;
the 6.13 kernel has workarounds for 14 security-sensitive CPU bugs just on x86_64.
Several of those have multiple variants,
or multiple mitigations that apply on different microarchitectures. There are
different kernel command-line options for each of these mitigations, which leads
to a confusing situation for users trying to figure out how to configure their
systems. David Kaplan recently posted
&lt;a href="https://lwn.net/ml/all/20250310164023.779191-1-david.kaplan@amd.com/"&gt;
a patch set&lt;/a&gt; that adds a single, unified command-line option for controlling
mitigations and
simplifies the logic for detecting, configuring, and
applying them as well.
If it is merged, the patch set could
make it much easier for users to navigate the complicated web of CPU
vulnerabilities and their mitigations.
&lt;/p&gt;
</description>
			<pubDate>Thu, 27 Mar 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for March 20, 2025</title>
			<link>https://lwn.net/Articles/1013956/</link>
			<guid>https://lwn.net/Articles/1013956/</guid>
			<dc:creator>corbet</dc:creator>
			<description>Inside this week's LWN.net Weekly Edition:
        &lt;p&gt;
        &lt;ul&gt;
&lt;li&gt; &lt;a href="https://lwn.net/Articles/1013956/"&gt;Front&lt;/a&gt;: Oxidizr; Spectre mitigations; Frozen pages; Mapcount madness; Open-source risks; /e/OS.
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1013958/"&gt;Briefs&lt;/a&gt;: Supply chain attacks; SystemRescue 12.00; Casual Make; GIMP 3.0; Git 2.49.0; GNOME 48; PeerTube 7.1; Quotes; ...
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1013959/"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.
            &lt;/ul&gt;

        </description>
			<pubDate>Thu, 27 Mar 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for March 27, 2025</title>
			<link>https://lwn.net/Articles/1014881/</link>
			<guid>https://lwn.net/Articles/1014881/</guid>
			<dc:creator>corbet</dc:creator>
			<description>Inside this week's LWN.net Weekly Edition:
        &lt;p&gt;
        &lt;ul&gt;
&lt;li&gt; &lt;a href="https://lwn.net/Articles/1014881/"&gt;Front&lt;/a&gt;: Open source in government; OSI election; Memory-management medley; Address-space isolation; CMA; 6.14 Development stats; State of the page.
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1014883/"&gt;Briefs&lt;/a&gt;: Asahi Linux progress; Reproducible Debian; rpi-image-gen; Neovim 0.11; OpenH264; Quotes; ...
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1014884/"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.
            &lt;/ul&gt;

        </description>
			<pubDate>Thu, 03 Apr 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>The state of the page in 2025</title>
			<link>https://lwn.net/Articles/1015320/</link>
			<guid>https://lwn.net/Articles/1015320/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The &lt;a href="https://lwn.net/Articles/849538/"&gt;folio transition&lt;/a&gt; is one of the most
fundamental kernel changes ever made; it can be thought of as being similar
to replacing the foundation of a building while it remains open for
business.  So it is not surprising that, for some years, the annual Linux
Storage, Filesystem, Memory-Management, and BPF Summit has included a
session on the state of this transition.  The 2025 Summit was no exception,
with Matthew Wilcox updating the group on what has been accomplished, what
remains to be done, and where some of the significant problems are.
</description>
			<pubDate>Thu, 03 Apr 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Catching up with calibre</title>
			<link>https://lwn.net/Articles/1015226/</link>
			<guid>https://lwn.net/Articles/1015226/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;Saying that &lt;a href="https://calibre-ebook.com/"&gt;calibre&lt;/a&gt; is
ebook-management software undersells the application by a fair
margin. Calibre is an open-source Swiss Army knife for ebooks that can
be used for everything from creating ebooks, converting ebooks from
obscure formats to modern formats like EPUB, to serving up an ebook
library over the web. The most recent major release, &lt;a
href="https://calibre-ebook.com/new-in/seventeen"&gt;calibre&amp;#160;8.0&lt;/a&gt;,
brings a better text-to-speech engine, a tool for creating audio
overlays when authoring ebooks, support for profiles in the ebook
viewer, and more.&lt;/p&gt;
</description>
			<pubDate>Thu, 10 Apr 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for April 3, 2025</title>
			<link>https://lwn.net/Articles/1015512/</link>
			<guid>https://lwn.net/Articles/1015512/</guid>
			<dc:creator>jake</dc:creator>
			<description>Inside this week's LWN.net Weekly Edition:
        &lt;p&gt;
        &lt;ul&gt;
&lt;li&gt; &lt;a href="https://lwn.net/Articles/1015512/"&gt;Front&lt;/a&gt;: Calibre 8.0; Fedora reproducibility; OpenWrt One; 6.15 Merge Window; LSFMM+BPF coverage including BPF in GCC, Rust merging process, and more.
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1015514/"&gt;Briefs&lt;/a&gt;: Ubuntu namespaces; New FPL; PorteuX 2.0; Firefox 137.0; GCC Rust; Rockbox 4.0; Rust specification; Thundermail; Dave Täht RIP; Quotes; ...
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1015515/"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.
            &lt;/ul&gt;

        </description>
			<pubDate>Thu, 10 Apr 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>An update on GCC BPF support</title>
			<link>https://lwn.net/Articles/1015747/</link>
			<guid>https://lwn.net/Articles/1015747/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
José Marchesi and David Faust kicked off the BPF track at the 2025 Linux Storage,
Filesystem, Memory-Management, and BPF Summit with an extra-long session on what
they have been doing to support compiling to BPF in GCC. Overall, the project is slowly working
toward full support for BPF, with most of the self-tests now passing using
Faust's in-progress patches. However, the progress toward that goal has turned up
a number of problems with how Clang supports BPF that needed to be discussed at
length to find a path forward for both projects.
&lt;/p&gt;
</description>
			<pubDate>Thu, 10 Apr 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Debian Project Leader election 2025 edition</title>
			<link>https://lwn.net/Articles/1016107/</link>
			<guid>https://lwn.net/Articles/1016107/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;Four candidates have stepped up to run in the &lt;a
href="https://www.debian.org/vote/2025/vote_001"&gt;2025 Debian Project
Leader&lt;/a&gt; (DPL) election. &lt;a
href="https://www.debian.org/vote/2025/platforms/tille"&gt;Andreas
Tille&lt;/a&gt;, who is in his first term as DPL, is running again. &lt;a
href="https://www.debian.org/vote/2025/platforms/srud"&gt;Sruthi
Chandran&lt;/a&gt;, &lt;a
href="https://www.debian.org/vote/2025/platforms/locutusofborg"&gt;Gianfranco
Costamagna&lt;/a&gt;, and &lt;a
href="https://www.debian.org/vote/2025/platforms/jak"&gt;Julian Andres
Klode&lt;/a&gt; are the other candidates running for a chance to serve a
term as DPL. The campaigning phase ended on April&amp;#160;5, and Debian
members began voting on April&amp;#160;6. Voting ends on
April&amp;#160;19. This year, the campaign period has been lively and
sometimes contentious, touching on problems with Debian team
delegations and finances.&lt;/p&gt;
</description>
			<pubDate>Thu, 17 Apr 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for April 10, 2025</title>
			<link>https://lwn.net/Articles/1016366/</link>
			<guid>https://lwn.net/Articles/1016366/</guid>
			<dc:creator>corbet</dc:creator>
			<description>Inside this week's LWN.net Weekly Edition:
        &lt;p&gt;
        &lt;ul&gt;
&lt;li&gt; &lt;a href="https://lwn.net/Articles/1016366/"&gt;Front&lt;/a&gt;: Debian project leader election; 6.15 Merge window; Lots of LSFMM coverage; Joplin.
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1016368/"&gt;Briefs&lt;/a&gt;: Firefox hardening; OpenSSH 10.0; Supply chain security; FreeDOS 1.4; OpenSSL 3.5.0; Rust 1.86.0; Quotes; ...
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1016369/"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.
            &lt;/ul&gt;

        </description>
			<pubDate>Thu, 17 Apr 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>An update on torn-write protection</title>
			<link>https://lwn.net/Articles/1016406/</link>
			<guid>https://lwn.net/Articles/1016406/</guid>
			<dc:creator>jake</dc:creator>
			<description>In a combined storage and filesystem track session at the 
2025 Linux Storage, Filesystem, Memory Management, and BPF Summit, John
Garry continued the theme of "untorn" (or atomic) writes that started in &lt;a
href="https://lwn.net/Articles/1016015/"&gt;the previous session&lt;/a&gt;.  It was also
an update on where things have gone for untorn writes since his &lt;a
href="https://lwn.net/Articles/974578/"&gt;session at last year's summit&lt;/a&gt;.  Beyond that,
he looked at some of the plans and challenges for the feature in the future.
</description>
			<pubDate>Thu, 17 Apr 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>A new type of spinlock for the BPF subsystem</title>
			<link>https://lwn.net/Articles/1016674/</link>
			<guid>https://lwn.net/Articles/1016674/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
The 6.15 merge window saw the inclusion of a new type of lock for BPF programs:
a resilient queued spinlock that Kumar Kartikeya Dwivedi has been working on
for some time. Eventually, he hopes to convert all of the spinlocks currently
used in the BPF subsystem to his new lock.
He gave a remote presentation about the design of the lock at the
2025 Linux Storage, Filesystem,
Memory-Management, and BPF summit.
&lt;/p&gt;
</description>
			<pubDate>Thu, 17 Apr 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for April 17, 2025</title>
			<link>https://lwn.net/Articles/1017012/</link>
			<guid>https://lwn.net/Articles/1017012/</guid>
			<dc:creator>corbet</dc:creator>
			<description>Inside this week's LWN.net Weekly Edition:
        &lt;p&gt;
        &lt;ul&gt;
&lt;li&gt; &lt;a href="https://lwn.net/Articles/1017012/"&gt;Front&lt;/a&gt;: APT 3.0; Fedora 42; Lots more LSFMM+BPF coverage.
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1017014/"&gt;Briefs&lt;/a&gt;: CVE funding; Yelp vulnerability; Fedora 42; Manjaro 25.0; GCC 15; Pinta 3.0; Quotes; ...
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1017015/"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.
            &lt;/ul&gt;

        </description>
			<pubDate>Thu, 24 Apr 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Taking BPF programs beyond one-million instructions</title>
			<link>https://lwn.net/Articles/1017116/</link>
			<guid>https://lwn.net/Articles/1017116/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
The BPF verifier is not magic; it cannot solve the
&lt;a href="https://en.wikipedia.org/wiki/Halting_problem"&gt;
halting problem&lt;/a&gt;. Therefore,
it has to err on the side of assuming that a program will run too long if it
cannot prove that the program will not.
The ultimate check on the size of a BPF program is the
one-million-instruction limit — the verifier will refuse to process more than
one-million instructions, no matter what a BPF program does. Alexei Starovoitov gave
a talk at the 2025 Linux Storage, Filesystem,
Memory-Management, and BPF Summit about that limit,
why correctly written BPF programs shouldn't hit it, and how to make the user
experience of large BPF programs better in the future.
&lt;/p&gt;
</description>
			<pubDate>Thu, 24 Apr 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>What's new in APT 3.0</title>
			<link>https://lwn.net/Articles/1017315/</link>
			<guid>https://lwn.net/Articles/1017315/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;Debian's &lt;a href="https://salsa.debian.org/apt-team/apt#apt"&gt;Advanced Package Tool&lt;/a&gt; (APT) is the suite of utilities that handle package
management on Debian and Debian-derived operating systems. APT recently received a
major upgrade to 3.0 just in time for inclusion in &lt;a
href="https://www.debian.org/releases/trixie/releasenotes"&gt;Debian&amp;#160;13&lt;/a&gt;
("trixie"), which is planned for release sometime in 2025. The version bump is
warranted; the latest APT has user-interface improvements, switches to &lt;a
href="https://sequoia-pgp.org/projects/"&gt;Sequoia&lt;/a&gt; to verify package
signatures, and includes solver3&amp;mdash;a new &lt;a
href="https://en.wikipedia.org/wiki/Solver"&gt;solver&lt;/a&gt; that is designed to improve
how it evaluates and resolves package dependencies.&lt;/p&gt;
</description>
			<pubDate>Thu, 24 Apr 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Parallel directory operations</title>
			<link>https://lwn.net/Articles/1017477/</link>
			<guid>https://lwn.net/Articles/1017477/</guid>
			<dc:creator>jake</dc:creator>
			<description>Allowing directories to be modified in parallel was the topic of Jeff
Layton's filesystem-track session at the 2025 Linux Storage, Filesystem,
Memory Management, and BPF Summit (LSFMM+BPF).  There are certain use
cases, including for the NFS and Lustre filesystems, as mentioned in a &lt;a
href="https://lwn.net/ml/all/20241220030830.272429-1-neilb%40suse.de/"&gt;patch set&lt;/a&gt;
referenced in the &lt;a
href="https://lwn.net/ml/all/f78f4a5e86c10d723fd60d51a52dd727924fed3a.camel%40kernel.org/"&gt;topic
proposal&lt;/a&gt;, where contention in creating multiple files in a directory is
causing noticeable performance problems.  In some testing, Layton has found
that the inode read-write semaphore (&lt;tt&gt;i_rwsem&lt;/tt&gt;) for the directory is
serializing operations; he wanted to discuss alternatives.
</description>
			<pubDate>Thu, 24 Apr 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for April 24, 2025</title>
			<link>https://lwn.net/Articles/1017842/</link>
			<guid>https://lwn.net/Articles/1017842/</guid>
			<dc:creator>corbet</dc:creator>
			<description>Inside this week's LWN.net Weekly Edition:
        &lt;p&gt;
        &lt;ul&gt;
&lt;li&gt; &lt;a href="https://lwn.net/Articles/1017842/"&gt;Front&lt;/a&gt;: Owen Le Blanc and MCC; UID/GID drift; DMA for UIO; More LSFMM+BPF 2025 coverage.
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1017844/"&gt;Briefs&lt;/a&gt;: EU OS; RISC-V Fedora; Ubuntu 25.04; NLnet funding; Template strings; Tor Browser 14.5; Quotes; ...
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1017845/"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.
            &lt;/ul&gt;

        </description>
			<pubDate>Thu, 01 May 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>VFS write barriers</title>
			<link>https://lwn.net/Articles/1017947/</link>
			<guid>https://lwn.net/Articles/1017947/</guid>
			<dc:creator>jake</dc:creator>
			<description>In the filesystem track at the 2025 Linux Storage, Filesystem, Memory
Management, and BPF Summit (LSFMM+BPF), Amir Goldstein wanted to resume
discussing
a feature that he had briefly introduced at the end of a &lt;a
href="https://lwn.net/Articles/932415/"&gt;2023 summit session&lt;/a&gt;: filesystem "write
barriers".  The idea is to have an operation that would wait for any
in-flight &lt;a
href="https://www.man7.org/linux/man-pages/man2/write.2.html"&gt;&lt;tt&gt;write()&lt;/tt&gt;&lt;/a&gt;
system calls, but not block any new &lt;tt&gt;write()&lt;/tt&gt; calls as bigger
hammers, such as freezing the filesystem,
would do.  His prototype implementation is used by a &lt;a
href="https://en.wikipedia.org/wiki/Hierarchical_storage_management"&gt;hierarchical
storage management&lt;/a&gt; (HSM) system to create a crash-consistent
change log, but there may be other use cases to consider.  He &lt;a
href="https://lwn.net/ml/all/CAOQ4uxj00D_fP3nRUBjAry6vwUCNjYuUpCZg2Uc8hwMk6n%2B2HA%40mail.gmail.com/"&gt;wanted
to discuss&lt;/a&gt; implementation options and the possibility of providing an
API for user-space applications.
</description>
			<pubDate>Thu, 01 May 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Addressing UID/GID drift in rpm-ostree and bootc</title>
			<link>https://lwn.net/Articles/1018082/</link>
			<guid>https://lwn.net/Articles/1018082/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;The Fedora Project is looking for solutions to an interesting
problem with its image-based editions and spins, such as the &lt;a
href="https://fedoraproject.org/atomic-desktops/"&gt;Atomic Desktops&lt;/a&gt;
or &lt;a href="https://fedoraproject.org/coreos/"&gt;CoreOS&lt;/a&gt;, that are
created with &lt;a
href="https://coreos.github.io/rpm-ostree/"&gt;rpm-ostree&lt;/a&gt; or &lt;a
href="https://bootc-dev.github.io/bootc/"&gt;bootc&lt;/a&gt;. If a package that
is part of a image-based version has a user or group created
dynamically on installation, and it owns files installed on the
system, the system may be subject to user ID (UID) and group ID (GID) "drift"
on updates. This  "&lt;span class="nobreak"&gt;UID/GID drift&lt;/span&gt;" may come about when a new image with
updates is generated, and therefore files may have the wrong
ownership. This can have side-effects ranging from mildly inconvenient to
serious. No solutions have been adopted just yet, but there are a few
ideas on how to deal with the problem.&lt;/p&gt;
</description>
			<pubDate>Thu, 01 May 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Better debugging information for inlined kernel functions</title>
			<link>https://lwn.net/Articles/1018475/</link>
			<guid>https://lwn.net/Articles/1018475/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
Modern compilers perform a lot of optimizations, which can complicate debugging.
Song Liu and Thierry Treyer spoke about a potential improvement to
&lt;a href="https://www.kernel.org/doc/html/latest/bpf/btf.html"&gt;
BPF Type Format&lt;/a&gt; (BTF) debugging information that could partially combat that
problem at the 2025 Linux Storage, Filesystem,
Memory-Management, and BPF Summit.
They want to add information on selectively inlined functions to BTF in order to
better support tracing tools.
Treyer participated remotely.
&lt;/p&gt;
</description>
			<pubDate>Thu, 08 May 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for May 1, 2025</title>
			<link>https://lwn.net/Articles/1018680/</link>
			<guid>https://lwn.net/Articles/1018680/</guid>
			<dc:creator>corbet</dc:creator>
			<description>Inside this week's LWN.net Weekly Edition:
        &lt;p&gt;
        &lt;ul&gt;
&lt;li&gt; &lt;a href="https://lwn.net/Articles/1018680/"&gt;Front&lt;/a&gt;: Mailman 2 vulnerabilities; AI in Debian; __nonstring__; Cache-aware scheduling; Freezing filesystems; Socket-level storage; Debugging information; LWN in 2025.
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1018682/"&gt;Briefs&lt;/a&gt;: Debian election; Kali Linux key; OpenBSD 7.7; Firefox 138.0; GCC 15.1; Meson 1.8.0; Valgrind 3.25.0; FSF review; OSI retrospective; Mastodon; Quotes; ...
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1018683/"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.
            &lt;/ul&gt;

        </description>
			<pubDate>Thu, 08 May 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>The mystery of the Mailman 2 CVEs</title>
			<link>https://lwn.net/Articles/1019149/</link>
			<guid>https://lwn.net/Articles/1019149/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;Many eyebrows were raised recently when three vulnerabilities were announced
that allegedly impact &lt;a
href="https://www.gnu.org/software/mailman/"&gt;GNU&amp;#160;Mailman&lt;/a&gt; 2.1,
since many folks assumed that it was no longer being supported. That's
not quite the case. Even though &lt;a
href="https://wiki.list.org/DEV/Mailman%203.0"&gt;version&amp;#160;3&lt;/a&gt; of
the GNU Mailman mailing-list manager has been available
since&amp;#160;2015, and version&amp;#160;2 was declared (mostly) end of life
(EOL) in&amp;#160;2020, there are still plenty of users and projects still
using version&amp;#160;2.1.x. There is, as it turns out, a big difference between
&lt;em&gt;mostly&lt;/em&gt; EOL and &lt;em&gt;actually&lt;/em&gt; EOL. For example: &lt;a
href="https://www.webpros.com/"&gt;WebPros&lt;/a&gt;, the company behind the &lt;a
href="https://cpanel.net/"&gt;cPanel&lt;/a&gt; server and web-site-management
platform, still maintains a &lt;a
href="https://github.com/cpanel/mailman2-python3"&gt;port of
Mailman&amp;#160;2.1.x&lt;/a&gt; to Python&amp;#160;3 for its customers and was
quick to respond to reports of vulnerabilities. However, the
company and upstream Mailman project dispute that the CVEs are
valid.&lt;/p&gt;
</description>
			<pubDate>Thu, 08 May 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for May 8, 2025</title>
			<link>https://lwn.net/Articles/1019557/</link>
			<guid>https://lwn.net/Articles/1019557/</guid>
			<dc:creator>corbet</dc:creator>
			<description>Inside this week's LWN.net Weekly Edition:
        &lt;p&gt;
        &lt;ul&gt;
&lt;li&gt; &lt;a href="https://lwn.net/Articles/1019557/"&gt;Front&lt;/a&gt;: Debian and essential packages; Custom BPF OOM killers; Speculation barriers for BPF programs; More LSFMM+BPF 2025 coverage.
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1019559/"&gt;Briefs&lt;/a&gt;: Deepin on openSUSE; AUTOSEL; Mission Center 1.0.0; OASIS ODF; Redis license; USENIX ATC; Quotes; ...
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1019560/"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.
            &lt;/ul&gt;

        </description>
			<pubDate>Thu, 15 May 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Hash table memory usage and a BPF interpreter bug</title>
			<link>https://lwn.net/Articles/1019667/</link>
			<guid>https://lwn.net/Articles/1019667/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
Anton Protopopov led a short discussion at the 2025 Linux Storage, Filesystem,
Memory-Management, and BPF Summit about amount of memory used
by hash tables in BPF programs. He thinks that the current memory layout is
inefficient, and wants to split the structure that holds table entries into two
variants for different kinds of maps. When that proposal proved
uncontroversial, he also took the chance to talk about a bug in BPF's call
instruction.
&lt;/p&gt;
</description>
			<pubDate>Thu, 15 May 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Debian's AWKward essential set</title>
			<link>https://lwn.net/Articles/1019898/</link>
			<guid>https://lwn.net/Articles/1019898/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;The Debian project has the concept of &lt;a
href="https://www.debian.org/doc/debian-policy/ch-binary.html#essential-packages"&gt;essential
packages&lt;/a&gt;, which provide the bare minimum functionality considered
absolutely necessary (or "essential") for a system to
function. Packages tagged as essential, and the packages that are
required by the set of essential packages, are always installed as
part of a Debian system. However, Debian's packaging rules do not
require developers to explicitly declare dependencies on that set of
packages (the essential set) but they can simply rely on the fact that those
will always be present. That means that changing the essential set, as
the project may wish to do occasionally, is more complicated than it
should be. This came to light recently when a Debian developer asked
what might be required to remove &lt;a
href="https://linux.die.net/man/1/mawk"&gt;&lt;tt&gt;mawk&lt;/tt&gt;&lt;/a&gt; to slim down
the project's container images.&lt;/p&gt;
</description>
			<pubDate>Thu, 15 May 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Faster firewalls with bpfilter</title>
			<link>https://lwn.net/Articles/1017705/</link>
			<guid>https://lwn.net/Articles/1017705/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
From
servers in a data center to desktop computers, many devices
communicating on a network will eventually have to filter network
traffic, whether it's for security or performance reasons. As a result,
this is a domain where a lot of work is put into improving performance:
a tiny performance improvement can have considerable gains.
&lt;a href="https://bpfilter.io/"&gt;
Bpfilter&lt;/a&gt; is a
project that allows for packet filtering to easily be done with BPF, which can
be faster than other mechanisms.
&lt;/p&gt;
</description>
			<pubDate>Thu, 22 May 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>A look at what's possible with BPF arenas</title>
			<link>https://lwn.net/Articles/1019885/</link>
			<guid>https://lwn.net/Articles/1019885/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
&lt;a href="https://lwn.net/Articles/961941/"&gt;
BPF arenas&lt;/a&gt; are areas of memory where the verifier can safely relax its checking of
pointers, allowing programmers to write arbitrary data structures in BPF. Emil
Tsalapatis reported on how his team has used arenas in writing
&lt;a href="https://lwn.net/Articles/922405/"&gt;
sched_ext schedulers&lt;/a&gt; at the 2025 Linux Storage, Filesystem,
Memory-Management, and BPF Summit. His biggest complaint was about the fact that
kernel pointers can't be stored in BPF arenas — something that the BPF
developers hope to address, although there are some implementation problems that
must be sorted out first.
&lt;/p&gt;
</description>
			<pubDate>Thu, 22 May 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for May 15, 2025</title>
			<link>https://lwn.net/Articles/1020448/</link>
			<guid>https://lwn.net/Articles/1020448/</guid>
			<dc:creator>corbet</dc:creator>
			<description>Inside this week's LWN.net Weekly Edition:
        &lt;p&gt;
        &lt;ul&gt;
&lt;li&gt; &lt;a href="https://lwn.net/Articles/1020448/"&gt;Front&lt;/a&gt;: Home Assistant; YaST; bpfilter; Flatpak; More LSFMM+BPF 2025 coverage.
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1020450/"&gt;Briefs&lt;/a&gt;: Screen security; Guix on Codeberg; Postgres I/O; GNOME executive director; Nextcloud blog; Podman 5.5.0; OSL sustainability; Quotes; ...
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1020451/"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.
            &lt;/ul&gt;

        </description>
			<pubDate>Thu, 22 May 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>The future of Flatpak</title>
			<link>https://lwn.net/Articles/1020571/</link>
			<guid>https://lwn.net/Articles/1020571/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;At the &lt;a href="https://linuxappsummit.org/"&gt;Linux Application
Summit&lt;/a&gt; (LAS) in April, Sebastian Wick said that, by many metrics, &lt;a
href="https://flatpak.org/"&gt;Flatpak&lt;/a&gt; is doing great. The Flatpak
application-packaging format is popular with upstream developers, and
with many users. More and more applications are being published in the
&lt;a href="https://flathub.org/"&gt;Flathub&lt;/a&gt; application store, and the
format is even being adopted by Linux distributions like
Fedora. However, he worried that work on the Flatpak project itself
had stagnated, and that there were too few developers able to review
and merge code beyond basic maintenance.&lt;/p&gt;
</description>
			<pubDate>Thu, 22 May 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>An update on continuous testing of BPF kernel patches</title>
			<link>https://lwn.net/Articles/1020266/</link>
			<guid>https://lwn.net/Articles/1020266/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
Ihor Solodrai has been working on the BPF subsystem's continuous-integration
(CI) testing for the last six months. At the 2025 Linux Storage, Filesystem,
Memory-Management, and BPF Summit, he remotely shared
an update on his work, and solicited feedback on how the tests could be further
improved. Much of the work he's done has been specific to the BPF subsystem, but
some is more generic and could potentially be of use to other subsystems. He
also shared some general lessons learned from working on the BPF CI tests.
&lt;/p&gt;
</description>
			<pubDate>Thu, 29 May 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Recent disruptive changes from Setuptools</title>
			<link>https://lwn.net/Articles/1020576/</link>
			<guid>https://lwn.net/Articles/1020576/</guid>
			<dc:creator>jake</dc:creator>
			<description>In late March, &lt;a
href="https://pypi.org/project/setuptools/78.0.1/"&gt;version 78.0.1&lt;/a&gt; of &lt;a
href="https://setuptools.pypa.io/en/latest/"&gt;Setuptools&lt;/a&gt; — an important
Python packaging tool — was released. It was scarcely half an hour before
&lt;a href="https://github.com/pypa/setuptools/issues/4910"&gt;the first bug
report&lt;/a&gt; came in, and it quickly became clear that the change was far
more disruptive than anticipated. Within only about five hours &lt;a
href="https://setuptools.pypa.io/en/latest/history.html#v78-0-2"&gt;78.0.2 was
published to roll back the change&lt;/a&gt;, and multiple discussions were
started about how to limit the damage caused by future breaking
changes. Nevertheless, many users still felt the response was
inadequate. Some previous Setuptools releases have also caused problems on a smaller but still notable scale, and hopefully the developers will be more cautious going forward. But there are also lessons here for the developers of Python package installers, ordinary Python developers and end users, and even Linux distribution maintainers.
</description>
			<pubDate>Thu, 29 May 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Debian AI General Resolution withdrawn</title>
			<link>https://lwn.net/Articles/1020968/</link>
			<guid>https://lwn.net/Articles/1020968/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;Despite careful planning and months of warning, Debian developer Mo
Zhou has acknowledged that the project needs more time to grapple with
the questions around AI models and the Debian Free Software Guidelines
(DFSG). For now, he has withdrawn his proposed General Resolution (GR)
that would have required the original training data for AI models to
be released in order to be considered DFSG-compliant&amp;mdash;though the
debates on the topic continue.&lt;/p&gt;
</description>
			<pubDate>Thu, 29 May 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for May 22, 2025</title>
			<link>https://lwn.net/Articles/1021258/</link>
			<guid>https://lwn.net/Articles/1021258/</guid>
			<dc:creator>corbet</dc:creator>
			<description>Inside this week's LWN.net Weekly Edition:
        &lt;p&gt;
        &lt;ul&gt;
&lt;li&gt; &lt;a href="https://lwn.net/Articles/1021258/"&gt;Front&lt;/a&gt;: Home Assistant; Setuptools; Debian AI GR; DMA-mapping API; BPF CI; OSPM 2025
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1021260/"&gt;Briefs&lt;/a&gt;: Go audit; Oniux; Asahi progress; Rust in FreeBSD; RHEL 10; Rust 1.87.0; RIP John L. Young; Quote; ...
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1021261/"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.
            &lt;/ul&gt;

        </description>
			<pubDate>Thu, 29 May 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>System-wide encrypted DNS</title>
			<link>https://lwn.net/Articles/1021357/</link>
			<guid>https://lwn.net/Articles/1021357/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;The increasing sophistication of attackers has organizations
realizing that perimeter-based security models are inadequate. Many
are planning to transition their internal networks to a &lt;a
href="https://en.wikipedia.org/wiki/Zero_trust_architecture"&gt;zero-trust
architecture&lt;/a&gt;. This requires every communication on the network to
be encrypted, authenticated, and authorized. This can be achieved in
applications and services by using modern communication
protocols. However, the world still depends on Domain Name System
(DNS) services where encryption, while possible, is far from being the
industry standard. To address this we, as part of a working group at
Red Hat, worked on fully integrating encrypted DNS for Linux
systems&amp;mdash;not only while the system is running but also during the
installation and boot process, including support for a custom
certificate chain in the initial ramdisk. This integration is now
available in CentOS&amp;#160;Stream&amp;#160;9, 10, and the upcoming
Fedora&amp;#160;43 release.&lt;/p&gt;
</description>
			<pubDate>Thu, 05 Jun 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Glibc project revisits infrastructure security</title>
			<link>https://lwn.net/Articles/1021837/</link>
			<guid>https://lwn.net/Articles/1021837/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;The &lt;a href="https://sourceware.org/glibc/"&gt;GNU C Library&lt;/a&gt;
(glibc) is the core C library for most Linux distributions, so it is a 
crucial part of the open-source &lt;span class="nobreak"&gt;ecosystem&amp;mdash;and&lt;/span&gt; an attractive
target for any attackers looking to carry out supply-chain
attacks. With that being the case, securing the project's
infrastructure using industry best practices and improving the
security of its development practices are a frequent topic among glibc
developers. A recent discussion suggests that improvements are not
happening as quickly as some would like.&lt;/p&gt;
</description>
			<pubDate>Thu, 05 Jun 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Allowing BPF programs more access to the network</title>
			<link>https://lwn.net/Articles/1022034/</link>
			<guid>https://lwn.net/Articles/1022034/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
Mahé Tardy led two sessions about some of the challenges that he, Kornilios Kourtis,
and John Fastabend have run into in their work on
&lt;a href="https://tetragon.io/"&gt;
Tetragon&lt;/a&gt; (Apache-licensed BPF-based security monitoring software)
at the Linux Storage, Filesystem, Memory Management, and BPF Summit. The session
prompted discussion about the feasibility of letting BPF programs
send data over the network, as well as potential new kfuncs to let BPF firewalls
send TCP reset packets. Tardy presented several possible ways that these could
be accomplished.
&lt;/p&gt;
</description>
			<pubDate>Thu, 05 Jun 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for May 29, 2025</title>
			<link>https://lwn.net/Articles/1022134/</link>
			<guid>https://lwn.net/Articles/1022134/</guid>
			<dc:creator>corbet</dc:creator>
			<description>Inside this week's LWN.net Weekly Edition:
        &lt;p&gt;
        &lt;ul&gt;
&lt;li&gt; &lt;a href="https://lwn.net/Articles/1022134/"&gt;Front&lt;/a&gt;: Glibc security; How we lost the Internet; Encrypted DNS; 6.15 Development statistics; Filesystem stress-testing; BPF verifier; Network access from BPF; OSPM 2025.
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1022136/"&gt;Briefs&lt;/a&gt;: AlmaLinux 10.0; FESCo decision overturned; NixOS 25.05; Pocket, Launchpad retired; Quotes; ...
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1022137/"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.
            &lt;/ul&gt;

        </description>
			<pubDate>Thu, 05 Jun 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Two sessions on faster networking</title>
			<link>https://lwn.net/Articles/1022648/</link>
			<guid>https://lwn.net/Articles/1022648/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
Cong Wang and Daniel Borkmann each led session at the 2025 Linux Storage,
Filesystem, Memory Management, and BPF Summit about their respective
plans to speed up networking in the Linux kernel. Both sessions described ways
to remove unnecessary operations in the networking stack, but they focused on
different areas. Wang spoke about using BPF to speed up socket operations,
while Borkmann spoke about eliminating the overhead of networking
operations on virtual machines.
&lt;/p&gt;
</description>
			<pubDate>Thu, 12 Jun 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Device-initiated I/O</title>
			<link>https://lwn.net/Articles/1022718/</link>
			<guid>https://lwn.net/Articles/1022718/</guid>
			<dc:creator>jake</dc:creator>
			<description>&lt;a href="https://lwn.net/Articles/767281/"&gt;Peer-to-peer DMA&lt;/a&gt; (P2PDMA) has been part of
the kernel since the &lt;a href="https://lwn.net/Articles/775487/"&gt;4.20 release&lt;/a&gt; in 2018;
it provides a framework that allows devices to transfer data between themselves
directly, without using system RAM for the transfer.  At the 2025 Linux
Storage, Filesystem, Memory Management, and BPF Summit (LSFMM+BPF), Stephen
Bates led a combined storage, filesystems, and memory-management session on
device-initiated I/O, which is perhaps what P2PDMA is evolving toward.  Two
years ago, he led a &lt;a href="https://lwn.net/Articles/931668/"&gt;session on P2PDMA&lt;/a&gt; at the
summit; this year's session was a brief update on P2PDMA with a look
at where it may be heading.
</description>
			<pubDate>Thu, 12 Jun 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for June 5, 2025</title>
			<link>https://lwn.net/Articles/1022979/</link>
			<guid>https://lwn.net/Articles/1022979/</guid>
			<dc:creator>corbet</dc:creator>
			<description>Inside this week's LWN.net Weekly Edition:
        &lt;p&gt;
        &lt;ul&gt;
&lt;li&gt; &lt;a href="https://lwn.net/Articles/1022979/"&gt;Front&lt;/a&gt;: OpenH264 in Fedora; Wallabag; Safety certification; 6.16 Merge window; Bounce buffering; Hardening repository problems; Device-initiated I/O; Faster networking; OSPM 2025; Free software in science.
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1022981/"&gt;Briefs&lt;/a&gt;: Kea vulnerabilities; Alpine Linux 3.22.0; Fedora strategy; Quotes; ...
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1022982/"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.
            &lt;/ul&gt;

        </description>
			<pubDate>Thu, 12 Jun 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>The importance of free software to science</title>
			<link>https://lwn.net/Articles/1023299/</link>
			<guid>https://lwn.net/Articles/1023299/</guid>
			<dc:creator>jake</dc:creator>
			<description>Free software plays a critical role in science, both in research and in
disseminating it. Aspects of software freedom are directly relevant to
simulation, analysis, document preparation and preservation, security,
reproducibility, and usability. Free software brings practical and specific
advantages, beyond just its ideological roots, to science, while
proprietary software comes with equally specific risks.  As a practicing
scientist, I would like to help others—scientists or not—see the benefits
from free software in science.
</description>
			<pubDate>Thu, 12 Jun 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>An end to uniprocessor configurations</title>
			<link>https://lwn.net/Articles/1023575/</link>
			<guid>https://lwn.net/Articles/1023575/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The Linux kernel famously scales from the smallest of systems to massive
servers with thousands of CPUs.  It was not always that way, though; the
initial version of the kernel could only manage a single processor.  That
limitation was lifted, obviously, but single-processor machines have always
been treated specially in the scheduler.  That longstanding situation may
soon come to an end, though, if &lt;a
href="https://lwn.net/ml/all/20250528080924.2273858-1-mingo@kernel.org"&gt;this patch
series&lt;/a&gt; from Ingo Molnar makes it upstream.
</description>
			<pubDate>Thu, 19 Jun 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Finding locking bugs with Smatch</title>
			<link>https://lwn.net/Articles/1023646/</link>
			<guid>https://lwn.net/Articles/1023646/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
&lt;a href="https://repo.or.cz/w/smatch.git"&gt;Smatch&lt;/a&gt; is a GPL-licensed
static-analysis tool for C that has a lot of specialized checks for the kernel. Smatch
has &lt;a href="https://lwn.net/Articles/691882"&gt;been used&lt;/a&gt; in the kernel for more than 20 years; Dan
Carpenter, its primary author, decided last year that some details of its plugin system
were due for a rewrite. He spoke at Linaro Connect 2025 about his work on
Smatch, the changes to its implementation, and how those changes enabled him to easily
add additional checks for locking bugs in the kernel.
&lt;/p&gt;
</description>
			<pubDate>Thu, 19 Jun 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Improving iov_iter</title>
			<link>https://lwn.net/Articles/1023891/</link>
			<guid>https://lwn.net/Articles/1023891/</guid>
			<dc:creator>jake</dc:creator>
			<description>The &lt;a href="https://lwn.net/Articles/625077/"&gt;&lt;tt&gt;iov_iter&lt;/tt&gt; interface&lt;/a&gt; is used to
describe and iterate through buffers in the kernel.  David Howells led a combined storage and
filesystem session at 
the 2025 Linux Storage,
Filesystem, Memory Management, and BPF Summit (LSFMM+BPF) to discuss ways
to improve &lt;tt&gt;iov_iter&lt;/tt&gt;.  His &lt;a
href="https://lwn.net/ml/all/886959.1737148612%40warthog.procyon.org.uk/"&gt;topic
proposal&lt;/a&gt; listed a few different ideas including replacing some
&lt;tt&gt;iov_iter&lt;/tt&gt; types and possibly allowing mixed types in chains of &lt;tt&gt;iov_iter&lt;/tt&gt;
entries; he would like to make the interface itself and the uses of &lt;tt&gt;iov_iter&lt;/tt&gt; in
the kernel better.
</description>
			<pubDate>Thu, 19 Jun 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for June 12, 2025</title>
			<link>https://lwn.net/Articles/1023924/</link>
			<guid>https://lwn.net/Articles/1023924/</guid>
			<dc:creator>corbet</dc:creator>
			<description>Inside this week's LWN.net Weekly Edition:
        &lt;p&gt;
        &lt;ul&gt;
&lt;li&gt; &lt;a href="https://lwn.net/Articles/1023924/"&gt;Front&lt;/a&gt;: Nyxt; Cyber Resilience Act; Unwanted file descriptors; Core-dump API; 6.16 Merge window; Uniprocessor configurations; Smatch; FUSE zero-copy; iov_iter; Fedora documentation.
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1023926/"&gt;Briefs&lt;/a&gt;: Android tracking; /e/OS 3.0; FreeBSD laptops; Ubuntu X11 support; Netdev 0x19; OIN anniversary; Quotes; ...
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1023927/"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.
            &lt;/ul&gt;

        </description>
			<pubDate>Thu, 19 Jun 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>A parallel path for GPU restore in CRIU</title>
			<link>https://lwn.net/Articles/1024747/</link>
			<guid>https://lwn.net/Articles/1024747/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt; The fundamental concept of checkpoint/restore is elegant: capture a
process's state and resurrect it later, perhaps elsewhere. Checkpointing
meticulously records a process's memory, open files, CPU state, and more into a
snapshot. Restoration then reconstructs the process from this state. This
established technique faces new challenges with GPU-accelerated applications,
where low-latency restoration is crucial for
&lt;a href='https://criu.org/Usage_scenarios#Fault-tolerant_systems'&gt;fault
tolerance&lt;/a&gt;, live migration, and
fast startups. Recently, the restore process for AMD GPUs has been redesigned to
eliminate substantial bottlenecks. &lt;/p&gt;
</description>
			<pubDate>Thu, 26 Jun 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>The hierarchical constant bandwidth server scheduler</title>
			<link>https://lwn.net/Articles/1024757/</link>
			<guid>https://lwn.net/Articles/1024757/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The &lt;a
href="https://pubs.opengroup.org/onlinepubs/7908799/xsh/realtime.html"&gt;POSIX
realtime model&lt;/a&gt;, which is implemented in the Linux kernel, can ensure
that a realtime process obtains the CPU time it needs to get its job done.
It can be less effective, though, when there are multiple realtime
processes competing for the available CPU resources.  The &lt;a
href="https://lwn.net/ml/all/20250605071412.139240-1-yurand2000@gmail.com"&gt;hierarchical
constant bandwidth server&lt;/a&gt; patch series, posted by Yuri Andriaccio with
work by Luca Abeni, Alessio Balsini, and Andrea Parri, is a modification to
the Linux scheduler intended to make it possible to configure systems with
multiple realtime tasks in a deterministic and correct manner.
</description>
			<pubDate>Thu, 26 Jun 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for June 19, 2025</title>
			<link>https://lwn.net/Articles/1025076/</link>
			<guid>https://lwn.net/Articles/1025076/</guid>
			<dc:creator>corbet</dc:creator>
			<description>Inside this week's LWN.net Weekly Edition:
        &lt;p&gt;
        &lt;ul&gt;
&lt;li&gt; &lt;a href="https://lwn.net/Articles/1025076/"&gt;Front&lt;/a&gt;: GNOME a11y; hierarchical scheduler; CoMaps; GPU restore; FAIR.pm; buffered I/O writeback; NFS; Lustre
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1025078/"&gt;Briefs&lt;/a&gt;: Rocky Linux 10.0; Git 2.50; KDE Plasma 6.4; Kubernetes Slack; Python Language Summit; Radicle Desktop; Quote; ...
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1025079/"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.
            &lt;/ul&gt;

        </description>
			<pubDate>Thu, 26 Jun 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Enhancing screen-reader functionality in modern GNOME</title>
			<link>https://lwn.net/Articles/1025127/</link>
			<guid>https://lwn.net/Articles/1025127/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;Accessibility features and the work that goes into developing those features
often tend to be overlooked and are poorly understood by all but the people who actually
depend on such features. At Fedora's annual developer conference, &lt;a
href="https://fedoraproject.org/flock/2025/"&gt;Flock&lt;/a&gt;, Lukáš Tyrychtr sought to
improve understanding and raise awareness about accessibility with his session on &lt;a
href="https://cfp.fedoraproject.org/flock-to-fedora-2025/talk/NNYFPL/"&gt;accessibility
barriers and screen-reader functionality in GNOME&lt;/a&gt;. His talk provided rare insight
into the world of using and developing open-source software for visually-impaired
users&amp;mdash;including landing important accessibility improvements in
the latest GNOME release.&lt;/p&gt;
</description>
			<pubDate>Thu, 26 Jun 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Getting Lustre upstream</title>
			<link>https://lwn.net/Articles/1025268/</link>
			<guid>https://lwn.net/Articles/1025268/</guid>
			<dc:creator>jake</dc:creator>
			<description>The &lt;a href="https://www.lustre.org/"&gt;Lustre filesystem&lt;/a&gt; has a long
history, some of which intersects with Linux.  It was added to the staging
tree in 2013, but was &lt;a href="https://lwn.net/Articles/756565/"&gt;bounced out of
staging&lt;/a&gt; in 2018, due to a lack of progress and a development model
that was incompatible with the kernel's.  Lustre may be working its way
back into the kernel, though.  In a filesystem-track session at
the 2025 Linux Storage, Filesystem, Memory Management, and BPF Summit
(LSFMM+BPF), Timothy Day and James Simmons led a discussion on how to get
Lustre into the mainline.
</description>
			<pubDate>Thu, 26 Jun 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Getting extensions to work with free-threaded Python</title>
			<link>https://lwn.net/Articles/1025893/</link>
			<guid>https://lwn.net/Articles/1025893/</guid>
			<dc:creator>jake</dc:creator>
			<description>One of the biggest changes to come to the Python world is the &lt;a
href="https://lwn.net/Articles/947138/"&gt;addition of the free-threading
interpreter&lt;/a&gt;, which eliminates the &lt;a
href="https://docs.python.org/3/glossary.html#term-global-interpreter-lock"&gt;global
interpreter lock&lt;/a&gt; (GIL) that kept the interpreter thread-safe, but also
serialized multi-threaded Python code.  Over the years, the GIL has been a
source of complaints about the scalability of Python code using
threads, so many developers have been looking forward to the change, which
has been an experimental feature since &lt;a
href="https://www.python.org/downloads/release/python-3130/"&gt;Python 3.13
was released&lt;/a&gt; in October 2024.  Making the free-threaded version work
with the rest of the Python ecosystem, especially native extensions, is an
ongoing effort, however; Nathan Goldbaum and Lysandros Nikolaou spoke at &lt;a
href="https://us.pycon.org/2025/"&gt;PyCon US 2025&lt;/a&gt; about those efforts.
</description>
			<pubDate>Thu, 03 Jul 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for June 26, 2025</title>
			<link>https://lwn.net/Articles/1025929/</link>
			<guid>https://lwn.net/Articles/1025929/</guid>
			<dc:creator>corbet</dc:creator>
			<description>Inside this week's LWN.net Weekly Edition:
        &lt;p&gt;
        &lt;ul&gt;
&lt;li&gt; &lt;a href="https://lwn.net/Articles/1025929/"&gt;Front&lt;/a&gt;: Libxml2; GNOME and systemd; Rust in the kernel; Defconfigs; ngnfs, Free-threaded Python; Asterinas.
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1025931/"&gt;Briefs&lt;/a&gt;: LSFMM+BPF book; tag2upload; PostmarketOS 25.06; Firefox 140.0; NLnet funding; Quotes; ...
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1025932/"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.
            &lt;/ul&gt;

        </description>
			<pubDate>Thu, 03 Jul 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Libxml2's "no security embargoes" policy</title>
			<link>https://lwn.net/Articles/1025971/</link>
			<guid>https://lwn.net/Articles/1025971/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;&lt;a
href="https://gitlab.gnome.org/GNOME/libxml2/#libxml2"&gt;Libxml2&lt;/a&gt;, an
XML parser and toolkit, is an almost perfect example of the successes
and failures of the open-source movement. In the 25 years since its
first release, it has been widely adopted by open-source projects, for
use in commercial software, and for government use. It also
illustrates that while many organizations love using open-source software,
far fewer have yet to see value in helping to sustain it. That has led
libxml2's current maintainer to reject security embargoes and sparked
a discussion about maintenance terms for free and open-source
projects.&lt;/p&gt;
</description>
			<pubDate>Thu, 03 Jul 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Yet another way to configure transparent huge pages</title>
			<link>https://lwn.net/Articles/1025629/</link>
			<guid>https://lwn.net/Articles/1025629/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
&lt;a href="https://lwn.net/Articles/423584/"&gt;
Transparent huge pages&lt;/a&gt; (THPs) are, theoretically, supposed to allow processes to
benefit from larger page sizes without changes to their code. This does work,
but the performance impacts from THPs are not always a benefit, so system
administrators with specific knowledge of their workloads may want the ability
to fine-tune THPs to the application. On May&amp;#160;15, Usama Arif
&lt;a href="https://lwn.net/ml/all/20250515133519.2779639-1-usamaarif642@gmail.com/"&gt;
shared&lt;/a&gt; a patch set that would add a
&lt;a href="https://www.man7.org/linux/man-pages/man2/prctl.2.html"&gt;
&lt;tt&gt;prctl()&lt;/tt&gt;&lt;/a&gt; option for setting THP defaults for a process; that patch
set has sparked discussion about whether such a setting is a good fit for
&lt;tt&gt;prctl()&lt;/tt&gt;, and what alternative designs may work instead.
&lt;/p&gt;
</description>
			<pubDate>Thu, 10 Jul 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Accessing new kernel features from Python</title>
			<link>https://lwn.net/Articles/1026749/</link>
			<guid>https://lwn.net/Articles/1026749/</guid>
			<dc:creator>jake</dc:creator>
			<description>Every release of the Linux kernel has lots of new features, many of which
are accessible from user space.  Usually, though, the GNU C Library (glibc)
and tools that access the Linux user-space API lag behind the kernel
releases.  Geoffrey Thomas showed how Python programs can access these new
kernel features as soon as the kernel is released in his "What's New in the
Linux Kernel... from Python" talk at
&lt;a
href="https://us.pycon.org/2025/"&gt;PyCon US 2025&lt;/a&gt;.  While he had two
examples of accessing new kernel features, the real goal of the talk was to
demonstrate &lt;i&gt;how&lt;/i&gt; to go about connecting Python to
the Linux kernel.
</description>
			<pubDate>Thu, 10 Jul 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for July 3, 2025</title>
			<link>https://lwn.net/Articles/1026982/</link>
			<guid>https://lwn.net/Articles/1026982/</guid>
			<dc:creator>corbet</dc:creator>
			<description>Inside this week's LWN.net Weekly Edition:
        &lt;p&gt;
        &lt;ul&gt;
&lt;li&gt; &lt;a href="https://lwn.net/Articles/1026982/"&gt;Front&lt;/a&gt;: Kernel features from Python; i686 in Fedora; Kernel development with LLMs; Rust drivers; Load balancing with machine learning; Transparent huge pages.
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1026984/"&gt;Briefs&lt;/a&gt;: Bcachefs removal; Coccinelle for Rust; Netdev Foundation; Oracle Linux 10; GNU HHIS 5.0; Rust 1.88.0; Quotes; ...
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1026985/"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.
            &lt;/ul&gt;

        </description>
			<pubDate>Thu, 10 Jul 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Improved load balancing with machine learning</title>
			<link>https://lwn.net/Articles/1027096/</link>
			<guid>https://lwn.net/Articles/1027096/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The &lt;a href="https://lwn.net/Articles/922405/"&gt;extensible scheduler class&lt;/a&gt;
("sched_ext") allows the loading of a custom CPU scheduler into the kernel
as a set of BPF functions; it was merged for the 6.12 kernel release.
Since then, sched_ext has enabled a wide range of experimentation with
scheduling algorithms.  At the 2025 &lt;a
href="https://events.linuxfoundation.org/open-source-summit-north-america/"&gt;Open
Source Summit North America&lt;/a&gt;, Ching-Chun ("Jim") Huang presented work
that has been done to apply (local) machine learning to the problem of
scheduling processes on complex systems.
</description>
			<pubDate>Thu, 10 Jul 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Reinventing the Python wheel</title>
			<link>https://lwn.net/Articles/1028299/</link>
			<guid>https://lwn.net/Articles/1028299/</guid>
			<dc:creator>jake</dc:creator>
			<description>It is no secret that the Python packaging world is at something of a
crossroads; there have been debates and discussions about the packaging
landscape that started long before our &lt;a href="https://lwn.net/Articles/924104/"&gt;2023
series&lt;/a&gt; describing some of the difficulties.  There has been progress
since then—and incremental improvements all along, in truth—but a new
initiative is looking to overhaul packaging for the language.  At &lt;a
href="https://us.pycon.org/2025/"&gt;PyCon US 2025&lt;/a&gt;, Barry Warsaw and
Jonathan Dekhtiar gave a presentation on the &lt;a
href="https://wheelnext.dev/"&gt;WheelNext project&lt;/a&gt;, which is a community
effort that aims to improve the experience for users and providers of Python
packages while also working with toolmakers and other parts of the
ecosystem to "&lt;q&gt;reinvent the wheel&lt;/q&gt;".  While the project's name refers
to Python's &lt;a
href="https://packaging.python.org/en/latest/specifications/binary-distribution-format/"&gt;wheel&lt;/a&gt;
binary distribution format, its goals stretch much further than simply the
format.
</description>
			<pubDate>Thu, 17 Jul 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for July 10, 2025</title>
			<link>https://lwn.net/Articles/1028368/</link>
			<guid>https://lwn.net/Articles/1028368/</guid>
			<dc:creator>corbet</dc:creator>
			<description>Inside this week's LWN.net Weekly Edition:
        &lt;p&gt;
        &lt;ul&gt;
&lt;li&gt; &lt;a href="https://lwn.net/Articles/1028368/"&gt;Front&lt;/a&gt;: Python packaging; Kernel API specification; Kselftests and KUnit; niri; pedalboard.
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1028370/"&gt;Briefs&lt;/a&gt;: Git security fixes; Amarok 3.3; Bash 5.3; Thunderbird 140; tmux-rs; U-Boot 2025.07; Quotes; ...
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1028371/"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.
            &lt;/ul&gt;

        </description>
			<pubDate>Thu, 17 Jul 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Toward the unification of kselftests and KUnit</title>
			<link>https://lwn.net/Articles/1029077/</link>
			<guid>https://lwn.net/Articles/1029077/</guid>
			<dc:creator>corbet</dc:creator>
			<description>The kernel project, for many years, lacked a formal testing setup; it was
often joked that testing was the project's main reason for keeping users
around.  While many types of kernel testing can only be done in the
presence of specific hardware, there are other parts of the kernel
that could be more widely tested.  Over time, though, the kernel has gained
two separate testing frameworks and a growing body of automated tests to go
with them.  These two frameworks — kselftests and KUnit — take different
approaches to the testing problem; now &lt;a
href="https://lwn.net/ml/all/20250626-kunit-kselftests-v4-0-48760534fef5@linutronix.de"&gt;this
patch series&lt;/a&gt; from Thomas Weißschuh aims to bring them together.
</description>
			<pubDate>Thu, 17 Jul 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Fedora SIG changes Python packaging strategy</title>
			<link>https://lwn.net/Articles/1029354/</link>
			<guid>https://lwn.net/Articles/1029354/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;Fedora's &lt;a
href="https://docs.fedoraproject.org/en-US/neurofedora/overview/"&gt;NeuroFedora
special-interest group&lt;/a&gt; (SIG) is considering a change of strategy
when it comes to packaging Python modules. The SIG, which consists of
three active members, is struggling to keep up with maintaining the
&lt;a href="https://pagure.io/neuro-sig/NeuroFedora/blob/main/f/package-list/list.txt"&gt;hundreds of packages&lt;/a&gt; that it has taken on. What's more, it's not
clear that the majority of packages are even being consumed by Fedora
users; the group is trying to determine the right strategy to meet its
goals and shed unnecessary work. If its new packaging strategy is
successful, it may point the way to a more sustainable model for Linux
distributions to provide value to users without trying to package
everything under the sun.&lt;/p&gt;
</description>
			<pubDate>Thu, 24 Jul 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for July 17, 2025</title>
			<link>https://lwn.net/Articles/1029426/</link>
			<guid>https://lwn.net/Articles/1029426/</guid>
			<dc:creator>corbet</dc:creator>
			<description>Inside this week's LWN.net Weekly Edition:
        &lt;p&gt;
        &lt;ul&gt;
&lt;li&gt; &lt;a href="https://lwn.net/Articles/1029426/"&gt;Front&lt;/a&gt;: Python JIT; Anubis; Secure Boot certificate expiration; SFrame; Exported symbols; Python packaging in Fedora.
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1029428/"&gt;Briefs&lt;/a&gt;: Parrot 6.4; SPI report; Quotes; ...
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1029429/"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more. 
            &lt;/ul&gt;

        </description>
			<pubDate>Thu, 24 Jul 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Linux and Secure Boot certificate expiration</title>
			<link>https://lwn.net/Articles/1029767/</link>
			<guid>https://lwn.net/Articles/1029767/</guid>
			<dc:creator>jake</dc:creator>
			<description>Linux users who have &lt;a
href="https://en.wikipedia.org/wiki/UEFI#Secure_Boot"&gt;Secure Boot&lt;/a&gt;
enabled on their systems knowingly or unknowingly rely on a key from
Microsoft that is set to expire in September.  After that point, Microsoft
will no longer use that key to sign the &lt;a
href="https://github.com/rhboot/shim#shim-a-first-stage-uefi-bootloader"&gt;shim&lt;/a&gt;
first-stage UEFI bootloader that is used by Linux distributions to boot the
kernel with Secure Boot.  But the replacement key, which has been available
since 2023, may not be installed on many systems; worse yet, it may require
the hardware vendor to issue an update for the system firmware, which may
or may not happen.  It seems that the vast majority of systems will not be
lost in the shuffle, but it may require extra work from distributors and
users.
</description>
			<pubDate>Thu, 24 Jul 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Deep immutability for Python</title>
			<link>https://lwn.net/Articles/1030291/</link>
			<guid>https://lwn.net/Articles/1030291/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
Python has recently seen a number of experiments to improve its parallel
performance, including exposing
&lt;a href="https://lwn.net/Articles/820424/"&gt;
subinterpreters&lt;/a&gt; as part of the standard library. These allow
separate threads within the same Python process to run simultaneously, as long
as any data sent between them is copied, rather than shared.
&lt;a href="https://pep-previews--4468.org.readthedocs.build/pep-0795/"&gt;
PEP&amp;#160;795&lt;/a&gt; ("Deep Immutability in Python")
seeks to make efficient sharing of data between subinterpreters possible by
allowing Python objects to be "frozen", so that they can be accessed from
multiple subinterpreters without copying or synchronization.
That task is more difficult than it
seems, and the PEP prompted a good deal of skepticism from the Python community.
&lt;/p&gt;
</description>
			<pubDate>Thu, 31 Jul 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for July 24, 2025</title>
			<link>https://lwn.net/Articles/1030295/</link>
			<guid>https://lwn.net/Articles/1030295/</guid>
			<dc:creator>corbet</dc:creator>
			<description>Inside this week's LWN.net Weekly Edition:
        &lt;p&gt;
        &lt;ul&gt;
&lt;li&gt; &lt;a href="https://lwn.net/Articles/1030295/"&gt;Front&lt;/a&gt;: Debian's security processes; Tor; Immutability for Python; CPU scheduler; QUIC; Rust abstractions.
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1030297/"&gt;Briefs&lt;/a&gt;: Brief news items from throughout the community.
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1030298/"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.
            &lt;/ul&gt;

        </description>
			<pubDate>Thu, 31 Jul 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Understanding Debian's security processes</title>
			<link>https://lwn.net/Articles/1030669/</link>
			<guid>https://lwn.net/Articles/1030669/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;Providing security updates for a Linux distribution, such as
Debian, involves a lot of work behind the scenes&amp;mdash;and requires
much more than simply shipping the latest code. On July 15, at &lt;a
href="https://debconf25.debconf.org/"&gt;DebConf25&lt;/a&gt; in Brest, France,
Samuel Henrique walked through the process of providing security
updates to users; he discussed how Debian learns about security
vulnerabilities, decides on the best response, and the process of
sending out updates to keep its users safe. He also provided guidance
on how others could get involved.&lt;/p&gt;
</description>
			<pubDate>Thu, 31 Jul 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Extending run-time verification for the kernel</title>
			<link>https://lwn.net/Articles/1030685/</link>
			<guid>https://lwn.net/Articles/1030685/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
There are a lot of things people expect the Linux kernel to do correctly. Some
of these are checked by testing or static analysis; a few are ensured by
run-time verification: checking a live property of a running Linux system. For
example, the scheduler has a handful of different correctness properties that
can be
checked in this way.
Nam Cao posted a
&lt;a href="https://lwn.net/ml/all/cover.1751634289.git.namcao@linutronix.de/"&gt;
patch series&lt;/a&gt; that aims to extend the kinds of properties that the kernel's
&lt;a href="https://docs.kernel.org/trace/rv/runtime-verification.html"&gt;run-time
verification system&lt;/a&gt; can check, by adding support for
&lt;a href="https://en.wikipedia.org/wiki/Linear_temporal_logic"&gt;
linear temporal logic&lt;/a&gt; (LTL). The patch set has seen eleven revisions since the
&lt;a href="https://lwn.net/ml/all/cover.1741708239.git.namcao@linutronix.de/"&gt;
first version&lt;/a&gt; in March&amp;#160;2025, and recently made it into the linux-next
tree, from where it seems likely to reach the mainline kernel soon.
&lt;/p&gt;
</description>
			<pubDate>Thu, 07 Aug 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>On becoming a Python contributor</title>
			<link>https://lwn.net/Articles/1030821/</link>
			<guid>https://lwn.net/Articles/1030821/</guid>
			<dc:creator>jake</dc:creator>
			<description>In the first keynote at
&lt;a href="https://ep2025.europython.eu/"&gt;EuroPython 2025&lt;/a&gt; in Prague,
Savannah Bailey described her path to becoming a CPython core developer in
November 2024.  She started down that path a few years earlier and her
talk was meant to inspire others—not to slavishly follow hers,
but to create their own.  In the talk, entitled "You don't have to be a compiler engineer
to work on Python", she had lots of ideas for those who
might be thinking about contributing and are wondering how to do so.
</description>
			<pubDate>Thu, 07 Aug 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>A proxy-execution baby step</title>
			<link>https://lwn.net/Articles/1030842/</link>
			<guid>https://lwn.net/Articles/1030842/</guid>
			<dc:creator>corbet</dc:creator>
			<description>Priority inversion comes about when a low-priority task holds a resource
that is also needed by a high-priority task, preventing the latter from
running.  This problem is made much worse if the low-priority task is
unable to gain access to the CPU and, as a result, cannot complete its work
and free the resources it holds.  Proxy execution is a potential solution
to this problem, but it is a complex solution that has been under
development for several years; LWN first &lt;a href="https://lwn.net/Articles/820575/"&gt;looked
at it&lt;/a&gt; in 2020.  The 6.17 kernel is likely to contain an important step
forward for this long-running project.
</description>
			<pubDate>Thu, 07 Aug 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for July 31, 2025</title>
			<link>https://lwn.net/Articles/1031201/</link>
			<guid>https://lwn.net/Articles/1031201/</guid>
			<dc:creator>corbet</dc:creator>
			<description>Inside this week's LWN.net Weekly Edition:
        &lt;p&gt;
        &lt;ul&gt;
&lt;li&gt; &lt;a href="https://lwn.net/Articles/1031201/"&gt;Front&lt;/a&gt;: Becoming a Python contributor; Graphene OS; Fedora quality team; 6.16 Development statistics; Proxy execution; Run-time verification; Confidential VMs.
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1031203/"&gt;Briefs&lt;/a&gt;: HeliumOS 10; European Tech Funding; GNU C Library 2.42; OpenPrinting; Wayback 0.1
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1031204/"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.
            &lt;/ul&gt;

        </description>
			<pubDate>Thu, 07 Aug 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for August 7, 2025</title>
			<link>https://lwn.net/Articles/1032016/</link>
			<guid>https://lwn.net/Articles/1032016/</guid>
			<dc:creator>corbet</dc:creator>
			<description>Inside this week's LWN.net Weekly Edition:
        &lt;p&gt;
        &lt;ul&gt;
&lt;li&gt; &lt;a href="https://lwn.net/Articles/1032016/"&gt;Front&lt;/a&gt;: Don't fear the TPM; Python performance; Offensive Debian packages; NNCPNET; 6.17 Merge window; Transparent huge pages; SilverBullet.
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1032018/"&gt;Briefs&lt;/a&gt;: AUR malware; Secure boot; kbuild and kconfig maintenance; GPU drivers; NVIDIA on AlmaLinux; Proxmox 9.0; Quotes; ...
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1032019/"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.
            &lt;/ul&gt;

        </description>
			<pubDate>Thu, 14 Aug 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Don't fear the TPM</title>
			<link>https://lwn.net/Articles/1032026/</link>
			<guid>https://lwn.net/Articles/1032026/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;There is a great deal of misunderstanding, and some misinformation, about the
&lt;a
href="https://en.wikipedia.org/wiki/Trusted_Platform_Module"&gt;Trusted
Platform Module&lt;/a&gt; (TPM); to combat this, Debian developer Jonathan
McDowell would like to clear the air and help users understand what it
is good for, as well as what it's not. At &lt;a
href="https://debconf25.debconf.org/"&gt;DebConf25&lt;/a&gt; in Brest, France,
he delivered &lt;a
href="https://debconf25.debconf.org/talks/31-dont-fear-the-tpm/"&gt;a
talk about TPMs&lt;/a&gt; that explained what they are, why people might be
interested in using them, and how users might do so on a Debian
system.&lt;/p&gt;
</description>
			<pubDate>Thu, 14 Aug 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Possible paths for signing BPF programs</title>
			<link>https://lwn.net/Articles/1031854/</link>
			<guid>https://lwn.net/Articles/1031854/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
BPF programs are loaded directly into the kernel.
Even though the verifier protects the kernel from certain kinds of
misbehavior in BPF programs, some people are still justifiably concerned about
adding unsigned code to their kernel. A fully correct BPF program can still be
used to expose sensitive data, for example.
To remedy this, Blaise Boscaccy and KP Singh
have both shared patch sets that add ways to verify cryptographic
signatures of BPF programs, allowing users to configure their kernels to load
only pre-approved BPF programs. This work follows on from the
&lt;a href="https://lwn.net/Articles/1017549/"&gt;
discussion&lt;/a&gt; at the
Linux Storage, Filesystem, Memory-Management, and BPF Summit (LSFMM+BPF)
in April and Boscaccy's
&lt;a href="https://lwn.net/ml/all/20250502184421.1424368-1-bboscaccy@linux.microsoft.com/"&gt;
earlier proposal&lt;/a&gt; of a Linux Security Module (LSM) to accomplish the same goal.
There are
still some fundamental disagreements over the best approach to signing BPF
programs, however.
&lt;/p&gt;
</description>
			<pubDate>Thu, 21 Aug 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Indico: event management using Python</title>
			<link>https://lwn.net/Articles/1032422/</link>
			<guid>https://lwn.net/Articles/1032422/</guid>
			<dc:creator>jake</dc:creator>
			<description>The &lt;a href="https://getindico.io/"&gt;Indico&lt;/a&gt; event-management tool has
been in development at &lt;a href="https://home.cern/"&gt;CERN&lt;/a&gt; for two
decades at this point.  The MIT-licensed web application helps organize
conferences, meetings, workshops, and so on; it runs on Python and uses the &lt;a
href="https://flask.palletsprojects.com/en/stable/"&gt;Flask web framework&lt;/a&gt;. Two software engineers on the project, Dominic
Hollis and Tomas Roun, came to 
&lt;a
href="https://ep2025.europython.eu/"&gt;EuroPython&amp;#160;2025&lt;/a&gt; in Prague to talk about
Indico, its history, and some metrics about its community.  There is a bit of a
connection between Indico and the conference: in 2006 and 2007,
the tool was used to manage EuroPython.
</description>
			<pubDate>Thu, 21 Aug 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Arch shares its wiki strategy with Debian</title>
			<link>https://lwn.net/Articles/1032604/</link>
			<guid>https://lwn.net/Articles/1032604/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;The &lt;a href="https://archlinux.org/"&gt;Arch Linux project&lt;/a&gt; is
especially well-known in the Linux community for two things: its
rolling-release model and the quality of the documentation in the &lt;a
href="https://wiki.archlinux.org/title/Main_page"&gt;ArchWiki&lt;/a&gt;. No
matter which Linux distribution one uses, the odds are that eventually
the ArchWiki's documentation will prove useful. The Debian project
recognized this and has sought to improve its own documentation game
by inviting ArchWiki maintainers Jakub Klinkovský and Vladimir
Lavallade to &lt;a href="https://debconf25.debconf.org/"&gt;DebConf25&lt;/a&gt; in
Brest, France, to speak about how Arch manages its wiki. The talk has
already borne fruit with the launch of an effort to revamp the Debian
wiki.&lt;/p&gt;
</description>
			<pubDate>Thu, 21 Aug 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for August 14, 2025</title>
			<link>https://lwn.net/Articles/1032862/</link>
			<guid>https://lwn.net/Articles/1032862/</guid>
			<dc:creator>corbet</dc:creator>
			<description>Inside this week's LWN.net Weekly Edition:
        &lt;p&gt;
        &lt;ul&gt;
&lt;li&gt; &lt;a href="https://lwn.net/Articles/1032862/"&gt;Front&lt;/a&gt;: Indico; Arch Linux wiki; StarDict; Python debugging; LLM assistants for kernel development; 6.17 Merge window; Signed BPF programs.
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1032864/"&gt;Briefs&lt;/a&gt;: CalyxOS; ACME on NGINX; Debian 13; LVFS sustainability; Go 1.25; Radicle 1.3.0; Rust 1.89; Syncthing 2.0; Quotes; ...
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1032865/"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.
            &lt;/ul&gt;

        </description>
			<pubDate>Thu, 21 Aug 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Python, tail calls, and performance</title>
			<link>https://lwn.net/Articles/1033373/</link>
			<guid>https://lwn.net/Articles/1033373/</guid>
			<dc:creator>jake</dc:creator>
			<description>Ken Jin welcomed &lt;a
href="https://ep2025.europython.eu/"&gt;EuroPython&amp;#160;2025&lt;/a&gt; attendees to
his talk entitled "Building a new tail-calling interpreter for Python", but
noted that the title really should be: "Measuring the performance of
compilers and interpreters is really hard".  Jin's efforts &lt;a
href="https://lwn.net/Articles/1010905/"&gt;to switch the CPython interpreter to use tail calls&lt;/a&gt;,
which can be optimized as regular jumps,
initially seemed to produce an almost miraculous performance improvement.
As his modified title suggests, the &lt;a
href="https://blog.nelhage.com/post/cpython-tail-call/"&gt;actual improvement
was rather smaller&lt;/a&gt;; there is still some performance improvement and
there are other benefits from the change.
</description>
			<pubDate>Thu, 28 Aug 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Lucky 13: a look at Debian trixie</title>
			<link>https://lwn.net/Articles/1033474/</link>
			<guid>https://lwn.net/Articles/1033474/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;After more than two years of development, the Debian Project has &lt;a
href="https://www.debian.org/News/2025/20250809"&gt;released&lt;/a&gt; its new stable version, Debian&amp;#160;13 ("trixie"). The release comes with the usual bounty of
upgraded packages and more than 14,000 new packages; it also debuts &lt;a
href="https://lwn.net/Articles/1017315/"&gt;Advanced Package Tool
(APT)&amp;#160;3.0&lt;/a&gt; as the default package manager and makes 64-bit
&lt;span class="nobreak"&gt;RISC-V&lt;/span&gt; a supported architecture. There are few surprises with trixie,
which is exactly what many Linux users are hoping for&amp;mdash;a free
operating system that just works as expected.&lt;/p&gt;
</description>
			<pubDate>Thu, 28 Aug 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for August 21, 2025</title>
			<link>https://lwn.net/Articles/1033740/</link>
			<guid>https://lwn.net/Articles/1033740/</guid>
			<dc:creator>corbet</dc:creator>
			<description>Inside this week's LWN.net Weekly Edition:
        &lt;p&gt;
        &lt;ul&gt;
&lt;li&gt; &lt;a href="https://lwn.net/Articles/1033740/"&gt;Front&lt;/a&gt;: Debian; CPython; huge zero folio; kexec handover; FHS; Koka programming language
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1033742/"&gt;Briefs&lt;/a&gt;: PyPI domain checks; Firefox 142.0; Git v2.51; Ghostty; LibreOffice 25.8; Zig 0.15.1; Quotes; ...
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1033743/"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.
            &lt;/ul&gt;

        </description>
			<pubDate>Thu, 28 Aug 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Security updates for Wednesday</title>
			<link>https://lwn.net/Articles/1036567/</link>
			<guid>https://lwn.net/Articles/1036567/</guid>
			<dc:creator>jzb</dc:creator>
			<description>Security updates have been issued by &lt;b&gt;AlmaLinux&lt;/b&gt; (httpd, kernel, and kernel-rt), &lt;b&gt;Debian&lt;/b&gt; (python-eventlet and python-h2), &lt;b&gt;Mageia&lt;/b&gt; (aide, gnutls, tomcat, and vim), &lt;b&gt;Oracle&lt;/b&gt; (httpd, mod_http2, postgresql:15, python3.11, python3.12, python3.9, and udisks2), &lt;b&gt;Red Hat&lt;/b&gt; (kernel, postgresql, postgresql:12, and postgresql:15), &lt;b&gt;SUSE&lt;/b&gt; (dcmtk, jupyter-bqplot-jupyterlab, kured, libudisks2-0, munge, python-eventlet, python-future, python311-eventlet, rekor, traefik2, and ucode-intel), and &lt;b&gt;Ubuntu&lt;/b&gt; (linux-aws, linux-azure-5.15, linux-gcp-6.8, linux-gke, linux-gkeop, linux-hwe-6.8, linux-nvidia,
 linux-nvidia-6.8, linux-nvidia-lowlatency, linux-raspi, linux-gke, linux-ibm-5.15, linux-kvm, and protobuf).
</description>
			<pubDate>Wed, 03 Sep 2025 13:03:20 +0000</pubDate>
		</item>
		<item>
			<title>New ELF specification for public review</title>
			<link>https://lwn.net/Articles/1036569/</link>
			<guid>https://lwn.net/Articles/1036569/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;Cary Coutant has &lt;a
href="https://groups.google.com/g/generic-abi/c/doY6WIIPqhU/?pli=1"&gt;announced&lt;/a&gt;
a &lt;a href="https://gabi.xinuos.com/"&gt;draft for version 4.3&lt;/a&gt; of the
Executable and Linking Format (ELF) object file format. The
specification was formerly part of the &lt;a
href="https://www.sco.com/developers/devspecs/gabi40.pdf"&gt;Unix System
V Release 4 (SVR4) gABI document&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote class="bq"&gt;
&lt;p&gt;The last published gABI documents were the Fourth Edition and a draft
of Edition 4.1, both published in March 1997. The ELF portions of the
document were updated several times between 1998 and 2015, published
online [...]&lt;/p&gt;

&lt;p&gt;I've published the last draft from 2015 as Version 4.2, and collected
the several changes since then, along with new e_machine values, as
Version 4.3.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The source for the draft is on &lt;a
href="https://github.com/xinuos/gabi"&gt;GitHub&lt;/a&gt; in &lt;a
href="https://www.sphinx-doc.org/en/master/usage/restructuredtext/index.html"&gt;reStructuredText&lt;/a&gt;
format, and Coutant has collected the mailing list discussions for
changes in 4.3 as &lt;a
href="https://github.com/xinuos/gabi/issues"&gt;GitHub
issues&lt;/a&gt;. Thanks to Jose E. Marchesi for the tip.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
			<pubDate>Wed, 03 Sep 2025 13:46:17 +0000</pubDate>
		</item>
		<item>
			<title>Announcing the Rust Innovation Lab</title>
			<link>https://lwn.net/Articles/1035169/</link>
			<guid>https://lwn.net/Articles/1035169/</guid>
			<dc:creator>daroc</dc:creator>
			<description>&lt;p&gt;
During the opening of RustConf 2025 in Seattle, Washington,
the Rust Foundation announced 
&lt;a href="https://rustfoundation.org/rust-innovation-lab/"&gt;
a new initiative&lt;/a&gt; to provide financial and administrative support to open-source Rust projects. The first project to benefit from the new Rust Innovation Lab is
&lt;a href="https://github.com/rustls/rustls"&gt;
Rustls&lt;/a&gt;, an implementation of TLS in Rust. The foundation welcomes inquiries from other projects. Dr. Rebecca Rumbul, Executive Director of the Rust Foundation said:
&lt;/p&gt;

&lt;blockquote class="bq"&gt;
Rustls is hopefully the first of many really good [...] projects that will find a home in the foundation.
&lt;/blockquote&gt;</description>
			<pubDate>Wed, 03 Sep 2025 16:14:41 +0000</pubDate>
		</item>
		<item>
			<title>Linux From Scratch 12.4 released</title>
			<link>https://lwn.net/Articles/1036624/</link>
			<guid>https://lwn.net/Articles/1036624/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;&lt;a href="https://www.linuxfromscratch.org/lfs/view/12.4/"&gt;Version
12.4&lt;/a&gt; of Linux From Scratch (LFS) and Beyond Linux From Scratch
(BLFS) have been &lt;a
href="https://lists.linuxfromscratch.org/sympa/arc/lfs-announce/2025-09/msg00000.html"&gt;released&lt;/a&gt;. LFS
provides step-by-step instructions on building a customized Linux
system entirely from source, and BLFS helps to extend an LFS
installation into a more usable system. Notable changes in this
release include updates to GNU Binutils 2.45, GCC 15.2, GNU C Library
(glibc) 2.42, and Linux 6.15.1. See the &lt;a
href="https://www.linuxfromscratch.org/lfs/view/12.4/chapter01/changelog.html"&gt;Changelog&lt;/a&gt;
for all updates since 12.3.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;</description>
			<pubDate>Wed, 03 Sep 2025 16:26:14 +0000</pubDate>
		</item>
		<item>
			<title>Niri 25.08 released</title>
			<link>https://lwn.net/Articles/1036625/</link>
			<guid>https://lwn.net/Articles/1036625/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;&lt;a
href="https://github.com/YaLTeR/niri/releases/tag/v25.08"&gt;Version
25.08&lt;/a&gt; of the niri scrollable-tiling Wayland compositor has been
released. Notable changes include &lt;a
href="https://github.com/Supreeeme/xwayland-satellite?tab=readme-ov-file#xwayland-satellite"&gt;xwayland-satellite&lt;/a&gt;
integration, modal exit confirmation, and the introduction of basic
support for screen readers:&lt;/p&gt;

&lt;blockquote class="bq"&gt;
&lt;p&gt;A &lt;a
href="https://fireborn.mataroa.blog/blog/i-want-to-love-linux-it-doesnt-love-me-back-post-1-built-for-control-but-not-for-people/"&gt;series
of posts&lt;/a&gt; by fireborn earlier this year on the screen reader
situation in Linux got me curious: how &lt;em&gt;does&lt;/em&gt; one support
screen readers in a Wayland compositor? The documentation is
unfortunately scarce and difficult to find. Thankfully, &lt;a
href="https://github.com/DataTriny"&gt;@DataTriny&lt;/a&gt; from the &lt;a
href="https://accesskit.dev/"&gt;AccessKit&lt;/a&gt; project came across &lt;a
href="https://github.com/YaLTeR/niri/issues/1904"&gt;my issue&lt;/a&gt;,
pointed me at the right protocols, and answered a lot of my questions.&lt;/p&gt;

&lt;p&gt;So, as of this release, niri has basic support for screen readers!
We implement the &lt;tt&gt;org.freedesktop.a11y.KeyboardMonitor&lt;/tt&gt; D-Bus
interface for &lt;a href="https://orca.gnome.org/"&gt;Orca&lt;/a&gt; to listen and
grab keyboard keys, and we expose the main niri UI elements via
AccessKit. [...]&lt;/p&gt;

&lt;p&gt;The current screen reader support and further considerations are
documented on the new &lt;a href="https://yalter.github.io/niri/Accessibility.html"&gt;Accessibility&lt;/a&gt; wiki page.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;LWN &lt;a href="https://lwn.net/Articles/1025866/"&gt;covered&lt;/a&gt; niri in
July.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
			<pubDate>Wed, 03 Sep 2025 16:46:17 +0000</pubDate>
		</item>
		<item>
			<title>Home Assistant 2025.9 released</title>
			<link>https://lwn.net/Articles/1036635/</link>
			<guid>https://lwn.net/Articles/1036635/</guid>
			<dc:creator>corbet</dc:creator>
			<description>&lt;a
href="https://www.home-assistant.io/blog/2025/09/03/release-20259/"&gt;Version
2025.9&lt;/a&gt; of the Home Assistant home automation system has been released.
Changes include a new experimental dashboard that is eventually meant to
become the default, a number of tile-card improvements, a reworked
automation editor, several new integrations, and more.</description>
			<pubDate>Wed, 03 Sep 2025 19:02:05 +0000</pubDate>
		</item>
		<item>
			<title>Shadow-stack control in clone3()</title>
			<link>https://lwn.net/Articles/1034442/</link>
			<guid>https://lwn.net/Articles/1034442/</guid>
			<dc:creator>corbet</dc:creator>
			<description>Shadow stacks are a control-flow-integrity feature designed to defend
against exploits that manipulate a thread's call stack.  The kernel first
&lt;a href="https://lwn.net/Articles/926649/"&gt;gained support for hardware-implemented shadow
stacks&lt;/a&gt;, for the x86 architecture, in the 6.6 release; 64-bit Arm
support followed in 6.13.  This feature does not give user space much
control over the allocation of shadow stacks for new threads, though; a &lt;a
href="https://lwn.net/ml/all/20250819-clone3-shadow-stack-v19-0-bc957075479b@kernel.org"&gt;patch
series&lt;/a&gt; from Mark Brown may, after many attempts, finally be about
to change that situation.
</description>
			<pubDate>Thu, 04 Sep 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>The tangled web of XSLT browser support</title>
			<link>https://lwn.net/Articles/1034560/</link>
			<guid>https://lwn.net/Articles/1034560/</guid>
			<dc:creator>jzb</dc:creator>
			<description>&lt;p&gt;The &lt;a href="https://en.wikipedia.org/wiki/XSLT"&gt;Extensible
Stylesheet Language Transformations&lt;/a&gt; (XSLT) language is used by web
browsers to style XML content to make it easily readable; XSLT is part of the
&lt;a href="https://html.spec.whatwg.org/multipage/"&gt;HTML living
standard&lt;/a&gt; that is maintained by the &lt;a
href="https://whatwg.org/"&gt;Web Hypertext Application Technology
Working Group&lt;/a&gt; (WHATWG). Only a small fraction of web sites serve
content that requires web browsers to support XSLT, in part because
major browser implementations have neglected the technology over the past 25
years. Now, it seems, they would like to rid themselves of it
entirely. A &lt;a href="https://issues.chromium.org/issues/435623334"&gt;plan&lt;/a&gt;
to disable XSLT in &lt;a href="https://www.chromium.org/blink/"&gt;Blink&lt;/a&gt; (Chrome's rendering engine) and a &lt;a
href="https://github.com/whatwg/html/pull/11563"&gt;pull request&lt;/a&gt; by
a Google Chrome developer to remove mentions of the specification from
the HTML standard have been met with opposition, but arguments in
favor of XSLT have proven ineffective.&lt;/p&gt;
</description>
			<pubDate>Thu, 04 Sep 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>LWN.net Weekly Edition for August 28, 2025</title>
			<link>https://lwn.net/Articles/1034604/</link>
			<guid>https://lwn.net/Articles/1034604/</guid>
			<dc:creator>corbet</dc:creator>
			<description>Inside this week's LWN.net Weekly Edition:
        &lt;p&gt;
        &lt;ul&gt;
&lt;li&gt; &lt;a href="https://lwn.net/Articles/1034604/"&gt;Front&lt;/a&gt;: Groklaw takeover; CRL cache sharing; browsers and XSLT; Microdot; restartable sequences; shadow-stack control
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1034606/"&gt;Briefs&lt;/a&gt;: Android restrictions; Arch services; GhostBSD 25.02; FFmpeg 8.0; PyCon videos; Quotes; ...
            &lt;li&gt; &lt;a href="https://lwn.net/Articles/1034607/"&gt;Announcements&lt;/a&gt;: Newsletters, conferences, security updates, patches, and more.
            &lt;/ul&gt;

        </description>
			<pubDate>Thu, 04 Sep 2025 00:00:00 +0000</pubDate>
		</item>
		<item>
			<title>Security updates for Thursday</title>
			<link>https://lwn.net/Articles/1036733/</link>
			<guid>https://lwn.net/Articles/1036733/</guid>
			<dc:creator>jake</dc:creator>
			<description>Security updates have been issued by &lt;b&gt;AlmaLinux&lt;/b&gt; (httpd:2.4, kernel, pam, postgresql:12, and python3.12), &lt;b&gt;Debian&lt;/b&gt; (clamav and node-cipher-base), &lt;b&gt;Fedora&lt;/b&gt; (exiv2 and libsixel), &lt;b&gt;Oracle&lt;/b&gt; (httpd, kernel, pam, postgresql:12, postgresql:13, postgresql:15, and udisks2), &lt;b&gt;SUSE&lt;/b&gt; (gimp, libmupen64plus-devel, munge, nvidia-open-driver-G06-signed, ovmf, postgresql15, python-aiohttp, python-Django, rav1e, redis, and ruby2.5), and &lt;b&gt;Ubuntu&lt;/b&gt; (ffmpeg, kdepim, kf5-messagelib, kmail, kmail-account-wizard, linux-azure, linux-azure-6.8, linux-azure-nvidia, php7.0, php7.2, php7.4, protobuf, python-django, ruby2.5, ruby2.7, ruby3.0, ruby3.2, ruby3.3, and rubygems).
</description>
			<pubDate>Thu, 04 Sep 2025 14:07:50 +0000</pubDate>
		</item>
		<item>
			<title>Seven new stable kernels</title>
			<link>https://lwn.net/Articles/1036785/</link>
			<guid>https://lwn.net/Articles/1036785/</guid>
			<dc:creator>jake</dc:creator>
			<description>Greg Kroah-Hartman has announced the release of the &lt;a
href="https://lwn.net/Articles/1036786/"&gt;6.16.5&lt;/a&gt;, &lt;a
href="https://lwn.net/Articles/1036787/"&gt;6.12.45&lt;/a&gt;, &lt;a
href="https://lwn.net/Articles/1036788/"&gt;6.6.104&lt;/a&gt;, &lt;a
href="https://lwn.net/Articles/1036789/"&gt;6.1.150&lt;/a&gt;, &lt;a
href="https://lwn.net/Articles/1036790/"&gt;5.15.191&lt;/a&gt;, &lt;a
href="https://lwn.net/Articles/1036791/"&gt;5.10.242&lt;/a&gt;, and &lt;a
href="https://lwn.net/Articles/1036792/"&gt;5.4.298&lt;/a&gt; stable kernels.  Each contains
important fixes throughout the kernel tree; users should upgrade.</description>
			<pubDate>Thu, 04 Sep 2025 15:18:36 +0000</pubDate>
		</item>
		<item>
			<title>No more 32-bit Firefox support</title>
			<link>https://lwn.net/Articles/1036856/</link>
			<guid>https://lwn.net/Articles/1036856/</guid>
			<dc:creator>corbet</dc:creator>
			<description>Mozilla has &lt;a
href="https://blog.mozilla.org/futurereleases/2025/09/05/firefox-32-bit-linux-support-to-end-in-2026/"&gt;announced&lt;/a&gt;
that support for the Firefox browser on 32-bit systems ends with
version&amp;#160;144.  "&lt;q&gt;For users who cannot transition immediately, Firefox
ESR 140 will remain available — including 32-bit builds — and will continue
to receive security updates until at least September 2026.&lt;/q&gt;"</description>
			<pubDate>Fri, 05 Sep 2025 13:51:22 +0000</pubDate>
		</item>
		<item>
			<title>Security updates for Friday</title>
			<link>https://lwn.net/Articles/1036907/</link>
			<guid>https://lwn.net/Articles/1036907/</guid>
			<dc:creator>daroc</dc:creator>
			<description>Security updates have been issued by &lt;b&gt;Fedora&lt;/b&gt; (udisks2), &lt;b&gt;Oracle&lt;/b&gt; (httpd:2.4 and kernel), &lt;b&gt;Red Hat&lt;/b&gt; (python-requests), and &lt;b&gt;SUSE&lt;/b&gt; (chromium, gn, dcmtk, firefox, himmelblau, nginx, perl-Authen-SASL, perl-Crypt-URandom, postgresql15, python-Django, and python-maturin).
</description>
			<pubDate>Fri, 05 Sep 2025 14:19:32 +0000</pubDate>
		</item>
	</channel>
</rss>